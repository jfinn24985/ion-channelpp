class base_sink
!!!1491760.cpp!!!	make_uuid_string() : string
// Generate the UUID string
uuid_t val;
uuid_generate(val);
char p[3];
std::string uuid_string(32, ' ');
for (int i = 0; i != 16; ++i)
{
  std::sprintf(&p[0], "%02X", val[i]);
  uuid_string[2*i] = p[0];
  uuid_string[2*i + 1] = p[1];
}
return uuid_string;
!!!2284080.cpp!!!	header(inout os : ostream) : void
os << core::strngs::comment_begin() << " UUID: " << this->uuid_ << " " << core::strngs::comment_end() << "\n";
!!!2284208.cpp!!!	description(inout os : ostream) : void
os << " run identification: " << this->uuid_ << "\n";
!!!2585648.cpp!!!	has_dataset(in label : string) : bool
for( auto const& dat : this->data_sets_ )
{
  if( dat.label() == label )
  {
    return true;
  }
}
return false;
!!!2585904.cpp!!!	receive_data(in label : string, in count : size_t, in arr : estimate_array) : void
for( auto & dat : this->data_sets_ )
{
  if( dat.label() == label )
  {
    dat.receive_data( count, arr );
    return;
  }
}
UTILITY_REQUIRE( this->has_dataset( label ), "Attempt to add data to non-existent data set" ); 
!!!2586032.cpp!!!	write_dataset() : void
for( auto const& dat : this->data_sets_ )
{
  dat.write( *this );
}
