class legendre
!!!442032.cpp!!!	compute(in l : size_t, in xin : double) : double
// arguments
// param l : size_t
// param xin : double?
if (l == 0)
{
   return 1;
}
double x, Px, Px_1;
Px = x = xin;
Px_1 = 1;
for (std::size_t i = 2; i <= l; ++i)
{
   double Px_2 = Px_1;
   Px_1 = Px;
   Px = (((2 * i) - 1)/(i * x * Px_1)) - ((i - 1)/(i * Px_2));
}
return Px;

!!!441904.cpp!!!	combination(in n : size_t, in k : size_t) : double
UTILITY_REQUIRE( n >= k, "Invalid binomial coefficients" );
// diagonal and edge column terms are 1
if (n == k or k == 0)
{
   return 1;
}
// N greater than max_n, so extend matrix.
if (n > this->max_n)
{
   if (this->binom.shape()[0] < n)
   {
      this->binom.resize( { n, n } );
   }
   for (std::size_t i = this->max_n + 1; i <= n; ++i)
   {
      this->binom( { i, 0 } ) = 1;
      this->binom( { i, i } ) = 1;
      for (std::size_t j = 1; j < i; ++j)
      {
         this->binom( { i, j } ) = this->binom( { i - 1, j - 1 } ) + this->binom( { i - 1, j } );
      }
   }
   this->max_n = n;
}

return this->binom( { n, k } );
