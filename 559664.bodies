class observable_test_suite
!!!1348016.cpp!!!	sampler_definition_lifetime_test() : void
{
  // Static Lifetime method tests: virtual pattern

  BOOST_CHECK( not std::is_default_constructible< observable::sampler_definition >::type{} );
  BOOST_CHECK( not std::is_copy_constructible< observable::sampler_definition >::type{} );
  BOOST_CHECK( not std::is_move_constructible< observable::sampler_definition >::type{} );
  BOOST_CHECK( ( not std::is_assignable< observable::sampler_definition, observable::sampler_definition >::type{} ) );
  BOOST_CHECK( std::has_virtual_destructor< observable::sampler_definition >::type{} );
}
{
  // default ctor
  observable::sampler_definition tmp( "acceptance", []( std::map< std::string, std::string >const& a )->boost::shared_ptr< observable::sampled_observable >{
    return boost::shared_ptr< observable::sampled_observable >{};
  } );

  BOOST_CHECK( tmp.empty() );
  BOOST_CHECK_EQUAL( tmp.size(), 0ul );
  BOOST_CHECK_EQUAL( tmp.label(), "acceptance" );
}
!!!1348144.cpp!!!	tracked_definition_lifetime_test() : void
{
  // Static Lifetime method tests: virtual pattern

  BOOST_CHECK( not std::is_default_constructible< observable::tracked_definition >::type{} );
  BOOST_CHECK( not std::is_copy_constructible< observable::tracked_definition >::type{} );
  BOOST_CHECK( not std::is_move_constructible< observable::tracked_definition >::type{} );
  BOOST_CHECK( ( not std::is_assignable< observable::tracked_definition, observable::tracked_definition >::type{} ) );
  BOOST_CHECK( std::has_virtual_destructor< observable::tracked_definition >::type{} );
}
{
  // default ctor
  observable::tracked_definition tmp( "acceptance", []( std::map< std::string, std::string >const& a )->boost::shared_ptr< observable::tracked_observable >{
    return boost::shared_ptr< observable::tracked_observable >{};
  } );

  BOOST_CHECK( tmp.empty() );
  BOOST_CHECK_EQUAL( tmp.size(), 0ul );
  BOOST_CHECK_EQUAL( tmp.label(), "acceptance" );
}
!!!1348272.cpp!!!	sampler_meta_test() : void
//XX{
//XX  // Static Lifetime method tests: virtual pattern
//XX
//XX  BOOST_CHECK( not std::is_default_constructible< observable::sampler_meta >::type{} );
//XX  BOOST_CHECK( not std::is_copy_constructible< observable::sampler_meta >::type{} );
//XX  BOOST_CHECK( not std::is_move_constructible< observable::sampler_meta >::type{} );
//XX  BOOST_CHECK( ( not std::is_assignable< observable::sampler_meta, observable::sampler_meta >::type{} ) );
//XX  BOOST_CHECK( not std::has_virtual_destructor< observable::sampler_meta >::type{} );
//XX}
//XX{
//XX  // default ctor
//XX  boost::shared_ptr< observable::report_manager > oman( new observable::report_manager );
//XX  observable::sampler_meta tmp( oman );
//XX
//XX  //BOOST_CHECK( tmp.empty() );
//XX  //BOOST_CHECK_EQUAL( tmp.size(), 0ul );
//XX}
!!!1348400.cpp!!!	report_manager_lifetime_test() : void
//XX{
//XX  // Static Lifetime method tests: virtual pattern
//XX
//XX  BOOST_CHECK( not std::is_default_constructible< observable::report_manager >::type{} );
//XX  BOOST_CHECK( not std::is_copy_constructible< observable::report_manager >::type{} );
//XX  BOOST_CHECK( not std::is_move_constructible< observable::report_manager >::type{} );
//XX  BOOST_CHECK( ( not std::is_assignable< observable::report_manager, observable::report_manager >::type{} ) );
//XX  BOOST_CHECK( not std::has_virtual_destructor< observable::report_manager >::type{} );
//XX}
//XX{
//XX  // default ctor
//XX  observable::report_manager tmp;
//XX
//XX  BOOST_CHECK( tmp.empty() );
//XX  BOOST_CHECK_EQUAL( tmp.size(), 0ul );
//XX}
