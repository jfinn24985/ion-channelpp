format 75
"periodic_cube" // periodic_cube
  revision 63
  modified_by 48 "finnerty"
  owner 48 "finnerty"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  stereotype "application"
  cpp_h_dir "cscpbc"
  cpp_src_dir "cscpbc"
  cpp_namespace "periodic_cube"
  comment " Components of GCMC simulation in periodic boundary cube.

 Perform IGCMC simulations to determine configurational chemical
 potential to use in channel simulator. This porject and its descendents
 contain definitions specific for PBC simulations."
  classview 494895 "periodic cube"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 128047 // periodic cube
    classdiagram 141232 "periodic system"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 543919 "LJ Grand View"
      draw_all_relations default hide_attributes yes hide_operations yes hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 530863 "LJ Overview"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 576943 "To serialize"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 577071 "To build input"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 577199 "To introduce species"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    sequencediagram 134704 "simulator.update_rates"
      show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
      size A4
    end

    class 1129263 "periodic_system"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Manage a simulation in a periodic cube cell.
"
      classrelation 152368 // <generalisation>
	relation 152240 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 152368 // <generalisation>
	  b parent class_ref 1129135 // simulator
      end

      classrelation 210353 // <dependency>
	relation 210097 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 210353 // <dependency>
	  b parent class_ref 1016239 // strngs
      end

      classrelation 168240 // imc_ (<directional composition>)
	relation 167984 *-->
	  stereotype "shared_ptr"
	  a role_name "imc_" multiplicity "*" private
	    comment " Optional object managing iterative MC simulations"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 168240 // imc_ (<directional composition>)
	  b parent class_ref 256689 // igcmc
      end

      attribute 1428783 "length_"
	private explicit_type "double"
	init_value "pow( volume, 1.0/3.0 )"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The simulation box length"
      end

      attribute 361137 "epsw_"
	private explicit_type "double"
	init_value "80.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Permittivity of the media, default media is water"
      end

      extra_member 235825 "LIFETIME"
	
	cpp "//
// Manage object lifetime
//
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 232625 "periodic_system"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	
	
	comment "Default ctor for deserialization only"
      end

      operation 579249 "__init__"
	public explicit_return_type ""
	nparams 2
	  param inout name "self" explicit_type ""
	  param in name "volume" explicit_type ""
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}super(${class}, ${p0}).__init__(${p1})
${body}
"
	
      end

      operation 232753 "~periodic_system"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;"
	
	
	
	
      end

      extra_member 450223 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      classrelation 197169 // <dependency>
	relation 196913 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 197169 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 2037167 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar & boost::serialization::base_object< platform::simulator >(*this);
    ar & imc_;
    ar & length_;
    ar & epsw_;
  };
"
	
	
	
	
      end

      extra_member 149424 "** BUILD THE SIMULATION **"
	
	cpp "// SIMULATION INITIATION
//
// Coordinate the setting up of the simulation
// trial loop.
// 
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 194352 "build_reader"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "decoder" type class_ref 1012655 // input_delegater
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Register the input file reader classes for this simulation.

 The base method registers a set of classes that should be
 simulation cell independent. Derived classes should therefore
 call this method as well as adding simulation cell dependent
 parts."
      end

      operation 706609 "do_description"
	const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
	comment " (how to output IMC)
 Details about the current geometry to be written to the
 log at the start of the simulation."
      end

      operation 577456 "do_license"
	const private explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Implement in derived classes to write the name of 
the program and any citation information."
      end

      operation 201776 "do_write_document"
	const private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " (todo: how to output IMC)
 Write an input file section.

 only throw possible should be from os.write() operation"
      end

      operation 194096 "do_generate_simulation"
	cpp_virtual public return_type class_ref 289841 // grid_generator
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}std::unique_ptr< ${type} > ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Generate an initial ensemble to run a simulation.

NOTE: region object that accepts 'set_volume' or 
a region factory that takes a volume parameter 
could be passed as an argument."
      end

      operation 241456 "do_run"
	cpp_virtual private explicit_return_type "void"
	nparams 1
	  param inout name "oslog" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Derived class implementation of run method."
      end

      operation 193712 "get_max_input_version"
	const cpp_virtual public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return 1;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  The maximum input file version to be understood by this program"
      end

      operation 218416 "set_super_looper"
	public explicit_return_type "void"
	nparams 1
	  param inout name "imc" type class_ref 256689 // igcmc
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} >& ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  this->imc_ = ${p0};
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      extra_member 149552 "** RUN SIMULATION **"
	
	cpp "// SIMULATION OWNERSHIP
//
// Manage the set of objects required to run a
// simulation.
//
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      extra_member 236209 "DISTANCES"
	
	cpp "//
// Manage distances between points
//
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 296881 "do_compute_distances"
	const private explicit_return_type "void"
	nparams 5
	  param in name "position" type class_ref 986799 // coordinate
	  param in name "coords" type class_ref 223792 // coordinate_set
	  param inout name "rij" type class_ref 270001 // array_type
	  param in name "endindex" explicit_type "size_t"
	  param in name "startindex" explicit_type "size_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}, ${p3}${v3}${)}:
${docstring}${body}
"
	
	comment "Compute the distances between any new position and existing positions.

\\post rij.size == ens.size
\\post rij[0:start_index] == 0.0
"
      end

      operation 218673 "distance_sqr"
	const public explicit_return_type "double"
	nparams 2
	  param in name "lhs" type class_ref 986799 // coordinate
	  param in name "rhs" type class_ref 986799 // coordinate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
	comment " Compute square of distance between two coordinates in 
 a periodic box."
      end

      extra_member 236081 "OBSTRUCTION"
	
	cpp "//
// Check if an object is obstructed by some fixed geoemtric
// object.
//
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 189745 "is_valid_position"
	const cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param inout name "coord" type class_ref 986799 // coordinate
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "Is a particle at the given position and radius in a valid position
in the system?

For PBC system, the coordinate is adjusted within the cube and true
always returned."
      end

      extra_member 149296 "** SAMPLE SIMULATION **"
	
	cpp "// SIMULATION INITIATION
//
// Coordinate the setting up of the simulation
// trial loop.
// 
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      extra_member 235953 "ACCESSORS"
	
	cpp "//
// Manage sub-regions within the cell
//
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 146480 "length"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->length_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "The length dimension of the periodic cube"
      end

      operation 193200 "volume"
	const cpp_virtual public explicit_return_type "double"
	nparams 1
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  return std::pow( this->length_, 3 );
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Return the current concentration of the given specie.

 For a periodic system, the volume is independent of specie, so ispec
 is always ignored (ie a valid ispec is not checked)"
      end

      operation 500656 "range_x"
	const cpp_virtual public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::pair< ${type}, ${type} > ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}std::pair< ${type}, ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return std::pair< ${type}, ${type} >( 0.0, this->length_ );
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the minimum and maximum dimension along the z coordinate"
      end

      operation 500528 "range_y"
	const cpp_virtual public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::pair< ${type}, ${type} > ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}std::pair< ${type}, ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return std::pair< ${type}, ${type} >( 0.0, this->length_ );
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the minimum and maximum dimension along the z coordinate"
      end

      operation 500400 "range_z"
	const cpp_virtual public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::pair< ${type}, ${type} > ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}std::pair< ${type}, ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return std::pair< ${type}, ${type} >( 0.0, this->length_ );
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the minimum and maximum dimension along the z coordinate"
      end

      extra_member 128048 "PERMITTIVITY"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 654129 "permittivity"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->epsw_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return self.epsw_
"
	
	comment "Get the permittivity for the region.

Note that nested regions may have different permittivity. The
permittivity of the inner-most region that contains a particular
particle is the value to use for that particle."
      end

      operation 693041 "set_permittivity"
	public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  this->epsw_ = ${p0};
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}self.epsw_ = ${p0}
"
	
	comment "Set permitivity for whole geometry"
      end
    end

    class 155568 "bulk_simulator_meta"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "Linker class between the input file and derived classes
of type 'base_simulator'

multiple = true

Implementation Notes: The simulator objects are held by
the application as owned pointers. Therefore we
can not retain a pointer to the simulator that can be
recovered after read/write serialization.  Not only
that, but the simulator objects are deleted ater their
part of the simulation has been run. In order to be
able to write a facsimile of the input file at any
time, this meta object retains the initial input data.
"
      classrelation 159280 // <generalisation>
	relation 159152 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 159280 // <generalisation>
	  b parent class_ref 1143343 // simulator_meta
      end

      classrelation 159408 // bulk_sim_ (<directional aggregation>)
	relation 159280 o-->
	  a role_name "bulk_sim_" private
	    comment " Pointer to periodic cube simulator 

 (note this has identical address to base class sim_, but different type)"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    python "${comment}${self}${name} = ${value}
"
	    classrelation_ref 159408 // bulk_sim_ (<directional aggregation>)
	  b parent class_ref 1129263 // periodic_system
      end

      attribute 181808 "missing_required_tags_"
	private explicit_type "1"
	multiplicity "*"
	stereotype "bitset"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
	comment "  Which input entrys have been seen"
      end

      class 155696 "anonymous_bulk_meta"
	visibility private stereotype "enum"
	cpp_decl "${comment}enum
 {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl "${comment}${visibility}final class ${name} {
${items}}
"
	python_decl "class ${name}:
${docstring}${members}
"
	idl_decl "${comment}enum ${name} {
${items}};
"
	explicit_switch_type ""
	
	comment " indices in missing option bitset"
	attribute 181936 "SIMULATOR_EPSW"
	  public type class_ref 155696 // anonymous_bulk_meta
	  init_value "0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment " entry 'epsw'"
	end
      end

      operation 201520 "do_read_entry"
	protected explicit_return_type "bool"
	nparams 1
	  param inout name "reader" type class_ref 313392 // input_base_reader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Read an entry in the input file

 throw an error if input file is incorrect (using UTILITY_INPUT macro)"
      end

      operation 201648 "do_read_end"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Check for completeness of input at end of section"
      end

      operation 202032 "bulk_simulator_meta"
	public explicit_return_type ""
	nparams 1
	  param inout name "sim" type class_ref 1129263 // periodic_system
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}${)}${volatile}${throw} 
: simulator_meta( ${p0} )
, bulk_sim_( &${p0} )
, missing_required_tags_()
{
  this->missing_required_tags_.set();
  ${body}
}
"
	
	
	
	
      end

      operation 202160 "~bulk_simulator_meta"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 202288 "bulk_simulator_meta"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	
	
	comment "for serialization only"
      end
    end
  end

  classview 128176 "choices"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 128048 // choices
    classdiagram 147760 "PBC choices"
      draw_all_relations default hide_attributes default hide_operations yes hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 147888 "Alternater Sampler"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 162864 "alternater_sampler"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "  Companion class to alternater_choice to broadcast the
  add/remove probabilities."
      classrelation 166576 // <generalisation>
	relation 166448 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 166576 // <generalisation>
	  b parent class_ref 1144367 // base_sampler
      end

      class 162992 "signal_type"
	visibility package 
	nactuals 1
	actual class class_ref 205231 // signal
	  rank 0 explicit_value "void (std::vector< std::pair< double, double > > const&)"
	cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 166704 // <realization>
	  relation 166576 -_-|>
	    a public
	      cpp default "${type}"
	      python "${type}"
	      classrelation_ref 166704 // <realization>
	    b parent class_ref 205231 // signal
	end
      end

      classrelation 166448 // choices_ (<aggregation>)
	relation 166320 o---
	  stereotype "vector"
	  a role_name "choices_" multiplicity "*" private
	    comment "  Set of choosers to sampler (not saved)"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} const* > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 166448 // choices_ (<aggregation>)
	  b role_name "sampler_" private
	    comment "  Sampler that is watching us."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}boost::shared_ptr< ${type} > ${name}${value};
"
	    classrelation_ref 166960 // sampler_ (<aggregation>)
      end

      classrelation 166832 // prob_signal_ (<directional composition>)
	relation 166704 *-->
	  a role_name "prob_signal_" private
	    comment "  Output of alternater probabilities"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 166832 // prob_signal_ (<directional composition>)
	  b parent class_ref 162992 // signal_type
      end

      operation 212912 "alternater_sampler"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 213040 "~alternater_sampler"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 213424 "add_alternater_choice"
	public explicit_return_type "void"
	nparams 1
	  param in name "choice" type class_ref 141744 // alternater_choice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  this->choices_.push_back( ${p0} );
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Stop watching a choice."
      end

      operation 212528 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 212784 "enrol"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}pass
"
	
	comment " Register any signals output by the object with 
 the simulator and optionally connect to any 
 simulator specific signals. The object is responsible
 for testing if a signal with the same label has been
 registered.

 The base class method does nothing."
      end

      operation 212656 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{}
"
	
	
	
	
	comment " Does nothing as this object does not store the observations
 it samples."
      end

      operation 223920 "on_sample"
	public explicit_return_type "void"
	nparams 1
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Broadcast add trial success probabilities. Does not output
data anywhere."
      end

      operation 635824 "on_report"
	public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "os" explicit_type "ostream"
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Does nothing."
      end

      operation 213808 "remove_alternater_choice"
	public explicit_return_type "void"
	nparams 1
	  param in name "choice" type class_ref 141744 // alternater_choice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Stop watching a chocie."
      end

      operation 213552 "type_label"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  return ${type}(\"alternater-choice\");
}
"
	
	
	
	
      end

      extra_member 156208 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 213936 "serialization"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar & boost::serialization::base_object< base_sampler >(*this);
    // Ignore choices_ and signal objects
  };
"
	
	
	
	
      end

      operation 217392 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " This sampler is not intended to be generated from an input file, so this 
 method does nothing."
      end
    end

    class 141744 "alternater_choice"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "Objects of this class can be used to generate a possible MC trial moves. "
      classrelation 166192 // <generalisation>
	relation 166064 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 166192 // <generalisation>
	  b parent class_ref 1102767 // gc_choice_pbc
      end

      classrelation 166960 // sampler_ (<aggregation>)
	relation_ref 166320 // <aggregation>
      end

      operation 167600 "~alternater_choice"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 167728 "alternater_choice"
	public explicit_return_type ""
	nparams 1
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw} 
${body}
"
	
	
	
	
      end

      operation 213680 "set_observer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "smplr" type class_ref 162864 // alternater_sampler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} >& ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}boost::shared_ptr< ${t0} >& ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 167984 "generate"
	public return_type class_ref 986543 // change_set
	nparams 1
	  param inout name "sys" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}std::unique_ptr< ${type} > ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Generate a new change set based on this choice type."
      end

      classrelation 136624 // <dependency>
	relation 136496 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 136624 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 168240 "alternater_choice"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}
: gc_choice_pbc()
{}"
	
	
	
	
      end

      extra_member 156336 "friend"
	
	cpp "
  friend class boost::serialization::access;
BOOST_SERIALIZATION_SPLIT_MEMBER();
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 214064 "save"
	stereotype "template"
	const cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar << boost::serialization::base_object< gc_choice_pbc >(*this);
    ar << this->sampler_;
  }
"
	
	
	
	
      end

      operation 214320 "load"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar >> boost::serialization::base_object< gc_choice_pbc >(*this);
    ar >> this->sampler_;
    this->sampler_->add_alternater_choice( this );
  }
"
	
	
	
	
      end
    end

    class 170544 "alternater_chooser"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 175664 // <generalisation>
	relation 175408 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 175664 // <generalisation>
	  b parent class_ref 170160 // base_chooser
      end

      classrelation 175792 // sampler_ (<directional aggregation>)
	relation 175536 o-->
	  stereotype "shared_ptr"
	  a role_name "sampler_" multiplicity "*" private
	    comment " The sampler for gathering add/remove success rates."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 175792 // sampler_ (<directional aggregation>)
	  b parent class_ref 162864 // alternater_sampler
      end

      attribute 199728 "type_"
	class_attribute private explicit_type "string"
	init_value "\"alternater\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  A label for the trial generated by the choice."
      end

      attribute 199600 "rate_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The relative rate of the generated choices."
      end

      operation 233392 "generate_choices"
	const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "choices" type class_ref 1026095 // base_choice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, boost::ptr_vector< ${t1} >& ${p1}${v1}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, boost::ptr_vector< ${t1} >& ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Generate and add choices to simulator."
      end

      operation 233264 "alternater_chooser"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 233136 "alternater_chooser"
	public explicit_return_type ""
	nparams 1
	  param in name "rate" explicit_type "double"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}
: sampler_()
, rate_( ${p0} )
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 233008 "~alternater_chooser"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 232880 "alternater_chooser"
	stereotype "copy"
	public explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 170544 // alternater_chooser
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw}
: sampler_(  ${p0}.sampler_ )
, rate_(  ${p0}.rate_ )
{}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 232752 "alternater_chooser"
	stereotype "move"
	public explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 170544 // alternater_chooser
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${)}${volatile}${throw}
: sampler_(  std::move( ${p0}.sampler_ ) )
, rate_(  std::move( ${p0}.rate_ ) )
{}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 232624 "operator="
	public return_type class_ref 170544 // alternater_chooser
	nparams 1
	  param in name "source" type class_ref 170544 // alternater_chooser
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract}
{
  this->swap( ${p0} );
  return *this;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 232496 "swap"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 170544 // alternater_chooser
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
   std::swap( sampler_, ${p0}.sampler_ );
   std::swap( rate_, ${p0}.rate_ );
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 232368 "make_chooser"
	class_operation public explicit_return_type "void"
	nparams 4
	  param in name "params" explicit_type "string"
	  param in name "type" explicit_type "string"
	  param in name "rate" explicit_type "double"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const std::map< ${t0}, ${t0} >& ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const std::map< ${t0}, ${t0} >& ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} & ${p3}${)}${const}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Function to add move choice objects to the simulation."
      end

      operation 241072 "description"
	const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Provide a description of the chooser state."
      end

      operation 241200 "do_write_document"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Add derived content to input file section wr[ix]. 

 only throw possible should be from os.write() operation"
      end
    end

    class 1102767 "gc_choice_pbc"
      visibility protected 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Single particle Grand canonical move generator, delegates
 move generation to add_choice/remove_choice children

 This version is for simulation in a periodic cube."
      classrelation 1243311 // <generalisation>
	relation 1205551 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 1243311 // <generalisation>
	  b parent class_ref 1026095 // base_choice
      end

      classrelation 427441 // <dependency>
	relation 426929 -_->
	  a package
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 427441 // <dependency>
	  b parent class_ref 134959 // ensemble
      end

      classrelation 399793 // adder_ (<directional composition>)
	relation 399537 *-->
	  a role_name "adder_" multiplicity "1" init_value "add_specie( ispec, self )" private
	    comment "The GC add move generator"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}(ispec, self)
"
	    classrelation_ref 399793 // adder_ (<directional composition>)
	  b multiplicity "1" parent class_ref 210609 // add_specie_pbc
      end

      classrelation 400049 // remover_ (<directional composition>)
	relation 399665 *-->
	  a role_name "remover_" multiplicity "1" init_value " ispec, self " private
	    comment "The GC remove generator."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}( ispec, self )
"
	    classrelation_ref 400049 // remover_ (<directional composition>)
	  b multiplicity "1" parent class_ref 210737 // remove_specie_pbc
      end

      operation 767793 "add_success_rate"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->adder_.success_rate ();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 2101807 "gc_choice_pbc"
	public explicit_return_type ""
	nparams 2
	  param in name "ispec" explicit_type "size_t"
	  param in name "params" explicit_type "string"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, std::map< ${t1}, ${t1} > const& ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, std::map< ${t1}, ${t1} > const& ${p1}${)}${throw}
: base_choice (${p0})
, adder_(${p0}, this)
, remover_(${p0}, this)
{
  ${body}
}
"
	
	
	
	
	comment " Create add/remove change generator

"
      end

      operation 233520 "gc_choice_pbc"
	protected explicit_return_type ""
	nparams 1
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}
: base_choice (${p0})
, adder_(${p0}, this)
, remover_(${p0}, this)
{}
"
	
	
	
	
	comment " Create add/remove change generator

"
      end

      operation 662193 "gc_choice_pbc"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}
: base_choice (0ul)
, adder_(0ul, this)
, remover_(0ul, this)
{}

"
	
	
	
	
	comment "For serialization"
      end

      operation 588081 "__init__"
	public explicit_return_type ""
	nparams 2
	  param in name "self" explicit_type ""
	  param in name "ispec" explicit_type "size_t"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(} ${p0}${v0}, ${p1}${v1} ${)}:
${docstring}super( ${class}, ${p0} ).__init__( ${p1} )
${body}
"
	
	comment " Create add/remove change generator

"
      end

      operation 144689 "~gc_choice_pbc"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
}
"
	
	
	
	
      end

      operation 2102063 "generate"
	cpp_virtual public return_type class_ref 986543 // change_set
	nparams 1
	  param inout name "sys" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}std::unique_ptr< ${type} > ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Create a particle addition/remove trial"
      end

      operation 760625 "get_adder"
	public explicit_return_type "add_specie_pbc"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return this->adder_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 760753 "get_remover"
	public explicit_return_type "remove_specie_pbc"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return this->remover_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 587185 "label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return \"GC Ind\";
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return \"GC Ind\"
"
	
      end

      operation 767921 "remove_success_rate"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->remover_.success_rate ();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 383793 "report"
	const public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	  param in name "total" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}:
${docstring}super(${class},self).report(${p0}, ${p1}, ${p2})
self.adder_.report(${p0}, ${p1}, self.attempts())
self.remover_.report(${p0}, ${p1}, self.attempts())
"
	
	comment "Report Add/Remove statistics"
      end

      operation 587313 "do_reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}super(${class},self).reset()
self.adder_.reset()
self.remover_.reset()
"
	
	comment "Report Add/Remove statistics"
      end

      extra_member 477231 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 2109743 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar & boost::serialization::base_object< base_choice >(*this);
    ar & this->adder_;
    ar & this->remover_;
  };
"
	
	
	
	
      end

      operation 212144 "make_chooser"
	class_operation public explicit_return_type "void"
	nparams 3
	  param in name "params" explicit_type "string"
	  param in name "rate" explicit_type "double"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const std::map< ${t0}, ${t0} >& ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const std::map< ${t0}, ${t0} >& ${p0}, ${t1} ${p1}, ${t2} & ${p2}${)}${const}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Function to add move choice objects to the simulation."
      end
    end

    class 210609 "add_specie_pbc"
      visibility protected 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Add particle move generator for a single specie

 (instantiated from input file via add_choice objects)"
      classrelation 327601 // <generalisation>
	relation 327345 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 327601 // <generalisation>
	  b parent class_ref 1026095 // base_choice
      end

      operation 382001 "add_specie_pbc"
	public explicit_return_type "char"
	nparams 2
	  param in name "ispec" explicit_type "size_t"
	  param inout name "parent" type class_ref 1026095 // base_choice
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}
: base_choice (${p0}, ${p1})
{}
"
	
	
	
	
	comment " Add/remove given specie within a cube

"
      end

      operation 383025 "add_specie_pbc"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;"
	
	
	
	
	comment " Default add/remove given specie (only for serialization)

"
      end

      operation 382129 "~add_specie_pbc"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}
{
  ${body}
}
"
	
	
	
	
      end

      operation 382257 "generate"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 986543 // change_set
	nparams 1
	  param inout name "sys" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}std::unique_ptr< ${type} > ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  return this->${name}(${p0}, ${p0}.get_random());
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Create a particle addition/remove trial

 (C++ forwards to two argument method)"
      end

      operation 434609 "generate"
	preserve_cpp_body_indent public return_type class_ref 986543 // change_set
	nparams 2
	  param in name "sys" type class_ref 1129135 // simulator
	  param inout name "ranf" type class_ref 463407 // random_distribution
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}std::unique_ptr< ${type} > ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
	comment " Create a particle addition/remove trial using 
 an external random number source. This
 version accepts a constant simulator object."
      end

      operation 587825 "label"
	preserve_cpp_body_indent const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return \"-- Add\";
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return \"-- Add\"
"
	
      end

      operation 382513 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ar & boost::serialization::base_object< base_choice >(*this);
      };
"
	
	
	
	
      end

      operation 587569 "__init__"
	public explicit_return_type ""
	nparams 3
	  param in name "self" explicit_type ""
	  param in name "ispec" explicit_type "size_t"
	  param in name "parent" type class_ref 1026095 // base_choice
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(} ${p0}${v0}, ${p1}${v1}, ${p2}${v2} ${)}:
${docstring}super( ${class}, ${p0} ).__init__( ${p1}, ${p2} )
${body}
"
	
	comment " Add/remove given specie

"
      end

      extra_member 135088 "friend"
	
	cpp "

  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end
    end

    class 210737 "remove_specie_pbc"
      visibility protected 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Add particle move generator for a single specie

 (instantiated from input file via add_choice objects)"
      classrelation 327857 // <generalisation>
	relation 327601 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 327857 // <generalisation>
	  b parent class_ref 1026095 // base_choice
      end

      operation 383537 "generate"
	cpp_virtual public return_type class_ref 986543 // change_set
	nparams 1
	  param inout name "sys" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}std::unique_ptr< ${type} > ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Create a particle addition/remove trial"
      end

      operation 587953 "label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return \"-- Del\";
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return \"-- Del\"
"
	
      end

      operation 383153 "remove_specie_pbc"
	public explicit_return_type ""
	nparams 2
	  param in name "ispec" explicit_type "size_t"
	  param inout name "parent" type class_ref 1026095 // base_choice
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw}
: base_choice (${p0}, ${p1})
{}
"
	
	
	
	
	comment " Add/remove given specie

"
      end

      operation 587697 "__init__"
	public explicit_return_type ""
	nparams 3
	  param in name "self" explicit_type ""
	  param in name "ispec" explicit_type "size_t"
	  param in name "parent" type class_ref 1026095 // base_choice
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}:
${docstring}super( ${class}, ${p0} ).__init__( ${p1}, ${p2} )
${body}
"
	
	comment " Add/remove given specie

"
      end

      operation 383281 "remove_specie_pbc"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}
: base_choice ()
{}
"
	
	
	
	
	comment " Default add/remove given specie (only for serialization)

"
      end

      operation 383409 "~remove_specie_pbc"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
}
"
	
	
	
	
      end

      extra_member 201521 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 383665 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar & boost::serialization::base_object< base_choice >(*this);
  }
"
	
	
	
	
      end
    end

    class 1032751 "jump_choice_pbc"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "Objects of this class define an MC move that involves a
jump within the simulation a cube. The displacement is defined by the
simulation cube length by a random number in [0,1)
for each coordinate."
      classrelation 1169583 // <dependency>
	relation 1132463 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1169583 // <dependency>
	  b parent class_ref 912431 // access
      end

      classrelation 1178031 // <generalisation>
	relation 1140911 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 1178031 // <generalisation>
	  b parent class_ref 1026095 // base_choice
      end

      classrelation 1124911 // <dependency>
	relation 1087791 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1124911 // <dependency>
	  b parent class_ref 134959 // ensemble
      end

      operation 214448 "jump_choice_pbc"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}
: base_choice(0)
{}
"
	
	
	
	
	comment " default ctor for deserialization only"
      end

      operation 1974063 "jump_choice_pbc"
	public explicit_return_type ""
	nparams 2
	  param in name "ispec" explicit_type "size_t"
	  param in name "params" explicit_type "string"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, const std::map< ${t1}, ${t1} >& ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, const std::map< ${t1}, ${t1} >& ${p1}${)}${volatile}${throw}
: base_choice(${p0})
{
  ${body}
}
"
	
	
	
	
      end

      operation 586929 "__init__"
	public explicit_return_type ""
	nparams 2
	  param inout name "self" explicit_type ""
	  param in name "ispec" explicit_type ""
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}super(${class}, ${p0}).__init__(${p1})
${body}
"
	
      end

      operation 1974191 "~jump_choice_pbc"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{}
"
	
	
	
	
      end

      operation 1974319 "generate"
	public return_type class_ref 986543 // change_set
	nparams 1
	  param inout name "sys" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}std::unique_ptr< ${type} > ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 586801 "label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return \"Jump\";
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return \"Jump\"
"
	
	comment "Name for this trial"
      end

      extra_member 449583 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 2036527 "serialize"
	stereotype "template"
	private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar & boost::serialization::base_object< base_choice >(*this);
  }
"
	
	
	
	
      end
    end
  end

  classview 128560 "IMC"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 128432 // IMC
    class 163120 "imc_meta"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 167216 // <generalisation>
	relation 166960 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 167216 // <generalisation>
	  b parent class_ref 1082671 // input_base_meta
      end

      classrelation 167472 // <dependency>
	relation 167216 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 167472 // <dependency>
	  b parent class_ref 1144367 // base_sampler
      end

      classrelation 167600 // <dependency>
	relation 167344 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 167600 // <dependency>
	  b parent class_ref 1129135 // simulator
      end

      class 163248 "sampler_generator_fn"
	visibility package stereotype "typedef" base_type class_ref 251439 // function2
	nactuals 3
	actual class class_ref 251439 // function2
	  rank 0 explicit_value "void"
	actual class class_ref 251439 // function2
	  rank 1 explicit_value "std::map< std::string, std::string > const&"
	actual class class_ref 251439 // function2
	  rank 2 explicit_value "platform::simulator&"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl "${comment}typedef ${type} ${name};
"
	explicit_switch_type ""
	
	classrelation 167728 // <realization>
	  relation 167472 -_-|>
	    a public
	      cpp default "${type}"
	      python "${type}"
	      classrelation_ref 167728 // <realization>
	    b parent class_ref 251439 // function2
	end
      end

      class 163376 "anonymous_missing_sampler_options"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum
 {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl "${comment}${visibility}final class ${name} {
${items}}
"
	python_decl "class ${name}:
${docstring}${members}
"
	idl_decl "${comment}enum ${name} {
${items}};
"
	explicit_switch_type ""
	
	comment " Indices used to check for missing options."
	attribute 190896 "SAMPLER_TYPE"
	  public type class_ref 163376 // anonymous_missing_sampler_options
	  init_value "0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment " Type of sampler option"
	end
      end

      classrelation 167856 // type_to_object_ (<directional composition>)
	relation 167600 *-->
	  stereotype "map"
	  a role_name "type_to_object_" multiplicity "*" class_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${association}, ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 167856 // type_to_object_ (<directional composition>)
	  b parent class_ref 1144239 // sampler_generator_fn
	  association_explicit_type "string"
      end

      attribute 191024 "counter_"
	class_attribute private explicit_type "size_t"
	init_value "0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      attribute 191152 "parameter_set_"
	private explicit_type "string"
	multiplicity "*"
	stereotype "map"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}, ${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
      end

      attribute 191280 "missing_required_tags_"
	private explicit_type "1"
	multiplicity "*"
	stereotype "bitset"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
	comment " Check for missing options."
      end

      attribute 191408 "type_"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The type label of this observer"
      end

      operation 215472 "imc_meta"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw} 
: input_base_meta (core::strngs::imc_label(), false, false)
, parameter_set_()
, missing_required_tags_ ()
, type_ ()
{
  this->missing_required_tags_.set();
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 215600 "~imc_meta"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 215856 "do_read_entry"
	cpp_virtual protected explicit_return_type "bool"
	nparams 1
	  param inout name "reader" type class_ref 313392 // input_base_reader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Read an entry in the input file. Return true if the entry was processed.

throw an error if input file is incorrect (using UTILITY_INPUT macro)"
      end

      operation 215984 "do_read_end"
	cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Perform checks at the end of reading a section before creating an IGCMC object
 and adding it to the simulation. This does not reset the meta data as 'multiple'
 is false."
      end

      operation 268592 "do_reset"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Reset the object"
      end
    end

    classdiagram 200369 "IGCMC Super looper"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 256689 "igcmc"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}(object):
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for IGCMC simulations to estimate the
excess chemical potential."
      classrelation 461361 // <dependency>
	relation 460721 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 461361 // <dependency>
	  b parent class_ref 176049 // estimater
      end

      classrelation 386225 // <dependency>
	relation 385969 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 386225 // <dependency>
	  b parent class_ref 1016239 // strngs
      end

      classrelation 384816 // <dependency>
	relation 384432 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 384816 // <dependency>
	  b parent class_ref 271920 // output_field
      end

      classrelation 384560 // <dependency>
	relation 384176 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 384560 // <dependency>
	  b parent class_ref 271792 // output_series
      end

      classrelation 385201 // chem_potential_ (<directional composition>)
	relation 384945 *-->
	  stereotype "vector"
	  a role_name "chem_potential_" multiplicity "*" private
	    comment "Average estimate of the chemical potential per specie."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 385201 // chem_potential_ (<directional composition>)
	  b parent class_ref 176049 // estimater
      end

      attribute 289713 "super_loop_size_"
	private explicit_type "size_t"
	init_value "100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The number of super loop iterations to perform."
      end

      attribute 289841 "super_loop_count_"
	private explicit_type "size_t"
	init_value "0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The current loop count"
      end

      operation 655409 "at_end"
	const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->super_loop_size_ <= this->super_loop_count_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return self.super_loop_size_ <= self.super_loop_count_
"
	
	comment "Whether all IGCMC loops have been performed"
      end

      operation 602673 "count"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->super_loop_count_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return self.super_loop_count_
"
	
	comment "The current loop count"
      end

      operation 488881 "description"
	const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 457777 "do_on_super_loop"
	abstract cpp_virtual private explicit_return_type "void"
	nparams 1
	  param inout name "sys" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Update the chemical potentials (in derived classes)"
      end

      operation 458289 "igcmc"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
: chem_potential_()
, super_loop_size_(100)
, super_loop_count_(0)
{}
"
	
	
	
	
      end

      operation 458417 "~igcmc"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;"
	
	
	
	
      end

      operation 458033 "on_super_loop"
	public explicit_return_type "void"
	nparams 2
	  param inout name "sys" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "Update the chemical potentials.

* Set do_repeat to true if loop count less than loop size.
* Update chemical potential by calling (defined in derived classes)
do_on_super_loop.
* Report chemical potentials."
      end

      operation 457265 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Prepare the evaluator for use with the given simulator and
stepper.

- Add self to super loop observer list"
      end

      operation 216112 "do_prepare"
	abstract cpp_virtual private explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 595761 "reset_count"
	public explicit_return_type "void"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  this->super_loop_count_ = 0;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}self.super_loop_count_ = 0
"
	
      end

      extra_member 221361 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      classrelation 385841 // <dependency>
	relation 385585 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 385841 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 457905 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
  ${p0} & chem_potential_;
  ${p0} & super_loop_size_;
  ${p0} & super_loop_count_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 458161 "set_loop_size"
	public explicit_return_type "void"
	nparams 1
	  param in name "sz" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  this->super_loop_size_ = sz;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}self.super_loop_size_ = sz
"
	
	comment "Set the super-loop size"
      end

      operation 542897 "charge_correction_factor"
	stereotype "TODO"
	const public explicit_return_type "double"
	nparams 1
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
	comment "Factor for calculating the chemical potential correction 
from non-zero charge of system. Final correction for
chemical potential of specie ispec is

-(ispec.valency * average_charge * result)

"
      end

      extra_member 156592 "python"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 595249 "__init__"
	public explicit_return_type ""
	nparams 2
	  param inout name "self" explicit_type ""
	  param in name "sim" type class_ref 1129135 // simulator
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}super(${class}, ${p0}).__init__()
${body}
"
	
      end

      operation 654001 "enrol"
	stereotype "python"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}pass
"
	
	comment "Register any signals output by the object with 
the simulator and optionally connect to any 
simulator specific signals. The object is responsible
for testing if a signal with the same label has been
registered.

The base class method does nothing."
      end

      operation 215728 "write_document"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "wr" type class_ref 163632 // input_document
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Write an input file section.

 only throw possible should be from os.write() operation

 Output from this factory method is something like:

 imc
 <call do_write_input_section>
 end
"
      end

      operation 216880 "do_write_document"
	abstract const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Add content of derived objects to an input file section.

only throw possible should be from os.write() operation"
      end

      operation 591920 "write_output"
	const private explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Write output on chemical potential estimates to os"
      end
    end

    class 256433 "malasics_igcmc"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 385329 // <generalisation>
	relation 385073 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 385329 // <generalisation>
	  b parent class_ref 256689 // igcmc
      end

      classrelation 386097 // <dependency>
	relation 385841 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 386097 // <dependency>
	  b parent class_ref 865967 // constants
      end

      classrelation 386353 // <dependency>
	relation 386097 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 386353 // <dependency>
	  b parent class_ref 1016239 // strngs
      end

      attribute 382513 "bulk_count_"
	private explicit_type "double"
	multiplicity "*"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
	comment "The average number of particles in the simulation."
      end

      attribute 359857 "specie_count_conx_"
	private type class_ref 206255 // connection
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "Connection to 'specie-count-mean' signal"
      end

      operation 488241 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 458801 "do_on_super_loop"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "sys" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Update the chemical potentials (in derived classes)"
      end

      operation 459441 "make_super_looper"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" explicit_type "string"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}std::map< ${t0}, ${t0} > const& ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}std::map< ${t0}, ${t0} > const& ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	
	
	comment "Create a new widom sampler using the given parameter set."
      end

      operation 459185 "on_specie_count_signal"
	public explicit_return_type "void"
	nparams 1
	  param in name "means" type class_ref 176049 // estimater
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const std::vector< ${t0} >& ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const std::vector< ${t0} >& ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, *args${)}:
${docstring}self.bulk_count_ = [x.mean() for x in args[0]]
"
	
	comment "Respond to signal with the average particle numbers."
      end

      operation 529841 "~malasics_igcmc"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;
"
	
	
	
	
      end

      operation 595633 "__init__"
	public explicit_return_type ""
	nparams 2
	  param inout name "self" explicit_type ""
	  param in name "sim" type class_ref 1129135 // simulator
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}super(${class}, ${p0}).__init__(${p1})
${body}
"
	
      end

      operation 595505 "__del__"
	public explicit_return_type ""
	nparams 1
	  param in name "self" explicit_type ""
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Break  up any connections"
      end

      operation 457521 "do_prepare"
	cpp_virtual private explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Prepare the evaluator for use with the given simulator and
stepper."
      end

      operation 457649 "type_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${name}_();
}
"
	
	
	
	
      end

      operation 458673 "type_label_"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${type}(\"malasics\");
}
"
	
	
	python_def "${@}${static}${abstract}def type_label${(}${)}:
${docstring}return \"malasics\"
"
	
      end

      extra_member 221489 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 458545 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
  ${p0} & boost::serialization::base_object< igcmc >(*this);
  ${p0} & bulk_count_;
}
"
	
	
	
	
      end

      operation 217776 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Write an input file section.

only throw possible should be from os.write() operation"
      end

      classrelation 385969 // <dependency>
	relation 385713 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 385969 // <dependency>
	  b parent class_ref 912431 // access
      end
    end

    class 128057 "lamperski_igcmc"
      visibility protected 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 128057 // <generalisation>
	relation 128057 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 128057 // <generalisation>
	  b parent class_ref 256689 // igcmc
      end

      classrelation 128569 // <dependency>
	relation 128569 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 128569 // <dependency>
	  b parent class_ref 1016239 // strngs
      end

      classrelation 128441 // <dependency>
	relation 128441 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 128441 // <dependency>
	  b parent class_ref 865967 // constants
      end

      attribute 422065 "bulk_count_"
	private explicit_type "double"
	multiplicity "*"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
	comment "The average number of particles in the simulation."
      end

      attribute 128185 "delta"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "Lamperski method  delta value"
      end

      attribute 422193 "specie_count_conx_"
	private type class_ref 206255 // connection
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "Connection to 'specie-count-mean' signal"
      end

      operation 128057 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 128185 "do_on_super_loop"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "sys" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Update the chemical potentials (in derived classes)"
      end

      operation 128313 "make_super_looper"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" explicit_type "string"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}std::map< ${t0}, ${t0} > const& ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}std::map< ${t0}, ${t0} > const& ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Create a new widom sampler using the given parameter set."
      end

      operation 724529 "on_specie_count_signal"
	public explicit_return_type "void"
	nparams 1
	  param in name "means" type class_ref 176049 // estimater
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const std::vector< ${t0} >& ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const std::vector< ${t0} >& ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, *args${)}:
${docstring}self.bulk_count_ = [x.mean() for x in args[0]]
"
	
	comment "Respond to signal with the average particle numbers."
      end

      operation 724401 "do_prepare"
	cpp_virtual private explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Prepare the evaluator for use with the given simulator and
stepper."
      end

      operation 128697 "type_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${name}_();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 128825 "type_label_"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${type}(\"lamperski\");
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      extra_member 128057 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      classrelation 128313 // <dependency>
	relation 128313 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 128313 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 128953 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
  ${p0} & boost::serialization::base_object< igcmc >(*this);
  ${p0} & bulk_count_;
  ${p0} & delta;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 129081 "lamperski_igcmc"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
: igcmc()
, bulk_count_()
, delta (0.1)
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 216496 "~lamperski_igcmc"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 218160 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Add type and delta information to an input file section.

only throw possible should be from os.write() operation"
      end
    end

    class 128185 "accept_igcmc"
      visibility protected 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 128697 // <generalisation>
	relation 128697 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 128697 // <generalisation>
	  b parent class_ref 256689 // igcmc
      end

      classrelation 128953 // <dependency>
	relation 128953 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 128953 // <dependency>
	  b parent class_ref 912431 // access
      end

      classrelation 129081 // <dependency>
	relation 129081 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 129081 // <dependency>
	  b parent class_ref 865967 // constants
      end

      classrelation 129209 // <dependency>
	relation 129209 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 129209 // <dependency>
	  b parent class_ref 1016239 // strngs
      end

      attribute 190512 "choices_"
	private explicit_type "double"
	multiplicity "*"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< std::pair< ${type}, ${type}> > ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
      end

      attribute 190768 "accept_conx_"
	private type class_ref 206255 // connection
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "Connection to 'alternater-choice' signal"
      end

      attribute 135609 "variant_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "this represents the number of the methods"
      end

      operation 129209 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 129337 "do_on_super_loop"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "sys" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Update the chemical potentials (in derived classes)"
      end

      operation 214704 "do_prepare"
	cpp_virtual private explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Prepare for a main simulation loop"
      end

      operation 218288 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Write an input file section.

only throw possible should be from os.write() operation"
      end

      operation 129465 "make_super_looper"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" explicit_type "string"
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}std::map< ${t0}, ${t0} > const& ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}std::map< ${t0}, ${t0} > const& ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Create a new widom sampler using the given parameter set."
      end

      operation 214960 "on_update"
	public explicit_return_type "void"
	nparams 1
	  param in name "data" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}std::vector< std::pair < ${t0},  ${t0} > > const& ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}std::vector< std::pair < ${t0},  ${t0} > > const& ${p0}${)}${const}${volatile}${throw}
{
  this->choices_ = ${p0};
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get acceptance rate data"
      end

      operation 129849 "type_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${name}_();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 129977 "type_label_"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${type}(\"accept\");
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      extra_member 128185 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 130105 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
  ${p0} & boost::serialization::base_object< igcmc >(*this);
  ${p0} & choices_;
  ${p0} & variant_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end
    end
  end

  classview 135088 "PBC observers"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 128432 // IMC
    classdiagram 193841 "Widom sampler"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 135087 "widom"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}struct ${name} {
${members}};
"
      explicit_switch_type ""
      
      comment " Widom observer class. (1D)"
      classrelation 431920 // <generalisation>
	relation 431280 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 431920 // <generalisation>
	  b parent class_ref 360496 // sampled_variable
      end

      classrelation 362673 // <dependency>
	relation 362417 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 362673 // <dependency>
	  b parent class_ref 210609 // add_specie_pbc
      end

      classrelation 1243439 // <dependency>
	relation 1205679 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1243439 // <dependency>
	  b parent class_ref 1026095 // base_choice
      end

      classrelation 1330735 // <dependency>
	relation 1292207 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1330735 // <dependency>
	  b parent class_ref 912175 // base_evaluator
      end

      classrelation 1155375 // <dependency>
	relation 1118255 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1155375 // <dependency>
	  b parent class_ref 986415 // change_atom
      end

      classrelation 1075119 // <dependency>
	relation 1037999 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1075119 // <dependency>
	  b parent class_ref 134959 // ensemble
      end

      classrelation 447921 // <dependency>
	relation 447409 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 447921 // <dependency>
	  b parent class_ref 128559 // fp_env
      end

      classrelation 448049 // <dependency>
	relation 447537 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 448049 // <dependency>
	  b parent class_ref 871087 // input_reader
      end

      classrelation 384944 // <dependency>
	relation 384560 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 384944 // <dependency>
	  b parent class_ref 271920 // output_field
      end

      classrelation 384688 // <dependency>
	relation 384304 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 384688 // <dependency>
	  b parent class_ref 271792 // output_series
      end

      classrelation 369201 // <dependency>
	relation 368945 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 369201 // <dependency>
	  b parent class_ref 1016239 // strngs
      end

      class 367152 "widom_datum"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit}
 {
${members}
};
${inlines}
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	comment "Widom based free energy estimate for one specie."
	classrelation 446128 // chem_potential_ (<directional composition>)
	  relation 445232 *-->
	    a role_name "chem_potential_" multiplicity "1" public
	      comment "The energy based chemical potential estimate"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      python "${comment}${self}${name} = ${type}()
"
	      classrelation_ref 446128 // chem_potential_ (<directional composition>)
	    b parent class_ref 176049 // estimater
	end

	classrelation 446256 // exp_chem_potential_ (<directional composition>)
	  relation 445360 *-->
	    a role_name "exp_chem_potential_" public
	      comment "The probability {exp(-energy)} based chemical potential estimate"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      python "${comment}${self}${name} = ${type}()
"
	      classrelation_ref 446256 // exp_chem_potential_ (<directional composition>)
	    b parent class_ref 176049 // estimater
	end

	attribute 407344 "count_"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment "The count of the number of add attempts completed so far in
one sampling cycle."
	end

	attribute 407472 "specie_key_"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment "The specie index of this datum."
	end

	extra_member 336816 "friend"
	  
	  cpp "
  friend class boost::serialization::access;" ""
	  java ""
	  php ""
	  python ""
	  idl ""
	end

	operation 688176 "serialize"
	  stereotype "template"
	  cpp_inline private explicit_return_type "void"
	  nparams 2
	    param inout name "ar" explicit_type "Archive"
	    param in name "version" explicit_type "unsigned int"
	  cpp_decl "    ${comment}template<class Archive>
${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & chem_potential_;
  ${p0} & exp_chem_potential_;
  ${p0} & count_;
  ${p0} & specie_key_;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	  
	end

	operation 688304 "widom_datum"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}
: chem_potential_()
, exp_chem_potential_()
, count_()
, specie_key_()
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 688944 "widom_datum"
	  public explicit_return_type ""
	  nparams 1
	    param in name "key" explicit_type "size_t"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}
: chem_potential_()
, exp_chem_potential_()
, count_()
, specie_key_(${p0})
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment "Constructor with specie key"
	end

	operation 688432 "~widom_datum"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 688560 "widom_datum"
	  stereotype "move"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "source" type class_ref 367152 // widom_datum
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${)}${volatile}${throw}
: chem_potential_(std::move(source.chem_potential_))
, exp_chem_potential_(std::move(source.exp_chem_potential_))
, count_(std::move(source.count_))
, specie_key_(std::move(source.specie_key_))
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 688688 "widom_datum"
	  stereotype "copy"
	  public explicit_return_type ""
	  nparams 1
	    param in name "source" type class_ref 367152 // widom_datum
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw}
: chem_potential_(source.chem_potential_)
, exp_chem_potential_(source.exp_chem_potential_)
, count_(source.count_)
, specie_key_(source.specie_key_)
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 688816 "operator="
	  public return_type class_ref 367152 // widom_datum
	  nparams 1
	    param in name "source" type class_ref 367152 // widom_datum
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract}
{
  this->swap(${p0});
  return *this;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 689072 "swap"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "source" type class_ref 367152 // widom_datum
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract}
{
   std::swap(this->chem_potential_, source.chem_potential_);
   std::swap(this->exp_chem_potential_, source.exp_chem_potential_);
   std::swap(this->count_, source.count_);
   std::swap(this->specie_key_, source.specie_key_);
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end
      end

      classrelation 1296687 // dist_widom_ (<directional composition>)
	relation 1258287 *-->
	  a role_name "dist_widom_" multiplicity "1" private
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 1296687 // dist_widom_ (<directional composition>)
	  b parent class_ref 1129775 // energy_distribution
      end

      classrelation 446384 // data_ (<directional composition>)
	relation 445488 *-->
	  stereotype "vector"
	  a role_name "data_" multiplicity "*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 446384 // data_ (<directional composition>)
	  b parent class_ref 367152 // widom_datum
      end

      attribute 282161 "key_labels_"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "Specie labels to use, from the input file. If empty use
all SOLUTE species."
      end

      classrelation 445872 // monitor_ (<aggregation>)
	relation 445104 o---
	  stereotype "shared_ptr"
	  a role_name "monitor_" multiplicity "*" private
	    comment "Object monitoring the simulation for add attempts."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}boost::weak_ptr< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 445872 // monitor_ (<aggregation>)
	  b role_name "parent_" multiplicity "*" private
	    comment "Widom sampler for whom we are monitoring the simulation."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 446000 // parent_ (<aggregation>)
      end

      attribute 1422127 "trials_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of trials to make per sample cycle"
      end

      attribute 282417 "ranf_"
	private type class_ref 463407 // random_distribution
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "(Justin) Use a separate random number
generator for the widom sampler so that runs of 
the main simulation should be identical regardless
of whether the Widom sampler is used or not. "
      end

      operation 488113 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters

TODO: Develop description further"
      end

      operation 222128 "do_write_document"
	const public explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Add details of widom sampler to wr[ix]."
      end

      operation 2167727 "get_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override
{
  return type_label_();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 1747631 "on_report"
	public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${throw}
{
  ${body}
}
"
	
	
	
	
	comment "Perform insertion trials to reach 'trials' attempts per sample cycle."
      end

      operation 688048 "on_sample"
	public explicit_return_type "void"
	nparams 1
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "     ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	
	
	comment "Perform insertion trials to reach 'trials' attempts per sample cycle."
      end

      operation 2167599 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Prepare Widom observer for a new simulation

 Reset all accumulated data. Build list of specie
 keys from input list of labels (key_labels) and
 adjust key_labels to contain only used keys. 
 Allocate storage for accumulating data once the
 number of species to observe is known. "
      end

      operation 686512 "specie_of_interest"
	const public explicit_return_type "bool"
	nparams 1
	  param in name "idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};

"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Is specie of given index target of Widom observation?

/nothrow"
      end

      operation 2138671 "trials"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->${name}_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "The number of trials to make per sampling cycle."
      end

      operation 434225 "type_label_"
	class_operation private explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return std::string (\"widom\");
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 434481 "update_data"
	public explicit_return_type "void"
	nparams 1
	  param in name "atom" type class_ref 986415 // change_atom
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Collect a sample from a trial"
      end

      extra_member 278577 "TODO"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 2175279 "make_sampler"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" explicit_type "string"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}std::map< ${t0}, ${t0} > const& ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}std::map< ${t0}, ${t0} > const& ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Create a new widom sampler using the given parameter set."
      end

      operation 434993 "operator="
	private return_type class_ref 135087 // widom
	nparams 1
	  param in name "other" type class_ref 135087 // widom
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type}& ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "No assignment"
      end

      extra_member 450351 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      classrelation 1170479 // <dependency>
	relation 1133359 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 1170479 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 2037295 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & boost::serialization::base_object< sampled_variable >(*this);
  ar & data_;
  ar & key_labels_;
  ar & monitor_;
  ar & trials_;
  ar & ranf_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 2037679 "widom"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
: data_()
, key_labels_()
, trials_ (0)
, ranf_ (boost::shared_ptr< boost::mt19937 >(new boost::mt19937))
{}
"
	
	
	
	
	comment "default ctor (for serialize only)"
      end

      operation 2176047 "widom"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 135087 // widom
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} = delete;
"
	
	
	
	
	comment "No copy"
      end

      operation 635696 "widom"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 135087 // widom
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${v0}${)}${volatile}${throw} = delete;
"
	
	
	
	
	comment "No move"
      end

      operation 2102575 "~widom"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end
    end

    class 367024 "widom_monitor"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "Monitor the simulation and capture add attempts occuring as
part of the standard simulation."
      classrelation 445488 // <generalisation>
	relation 444848 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 445488 // <generalisation>
	  b parent class_ref 353840 // tracked_variable
      end

      classrelation 446000 // parent_ (<aggregation>)
	relation_ref 445104 // <aggregation>
      end

      operation 686640 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override {};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "(does nothing, handled by parent widom
object)"
      end

      operation 689328 "do_write_document"
	const private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  wr.remove_section[ix];
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " (does nothing but remove section, the real write
 of document is handled in parent widom object)
"
      end

      operation 686768 "get_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return this->parent_->get_label();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "(returns parent->get_label)

/post get_label == parent.get_label"
      end

      operation 686896 "get_value"
	const public explicit_return_type "boost::any"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return this->parent_->get_value();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "(returns parent->get_value)

/post get_value == parent.get_value"
      end

      operation 687024 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override {}
"
	
	
	
	
	comment "(does nothing, handled by parent widom
object)"
      end

      operation 687152 "on_report"
	public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "(does nothing, handled by parent widom
object)"
      end

      operation 434353 "on_trial_end"
	public explicit_return_type "void"
	nparams 1
	  param in name "trial" type class_ref 986543 // change_set
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Collect data for all add attempts."
      end

      extra_member 336944 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 689200 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & boost::serialization::base_object< tracked_variable >(*this);
  ${p0} & parent_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 687280 "widom_monitor"
	public explicit_return_type ""
	nparams 1
	  param in name "parent" type class_ref 135087 // widom
	cpp_decl "    ${comment}${inline}explicit ${name}${(}boost::shared_ptr< ${t0} > ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}boost::shared_ptr< ${t0} > ${p0}${)}${throw}
: parent_(${p0})
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 687408 "~widom_monitor"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{
   this->parent_.reset();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 687536 "widom_monitor"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 367024 // widom_monitor
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 687664 "widom_monitor"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 367024 // widom_monitor
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 687792 "operator="
	private return_type class_ref 367024 // widom_monitor
	nparams 1
	  param in name "source" type class_ref 367024 // widom_monitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 687920 "widom_monitor"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end
    end
  end

  deploymentview 128047 "periodic cube"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    deploymentdiagram 537391 "CSC MC deploy"
      package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
      draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
      size A4
    end

    artifact 148784 "bulk_simulator_meta"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manual incs
#include \"core/strngs.hpp\"
#include \"core/input_help.hpp\"
#include \"utility/utility.hpp\"
// -
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 155568 // bulk_simulator_meta
      end
    end

    artifact 148401 "periodic_system"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_KEY(periodic_cube::periodic_system);

#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual includes
#include \"cscpbc/accept_igcmc.hpp\"
#include \"cscpbc/alternater_chooser.hpp\"
#include \"cscpbc/bulk_simulator_meta.hpp\"
#include \"cscpbc/gc_choice_pbc.hpp\"
#include \"cscpbc/imc_meta.hpp\"
#include \"cscpbc/jump_choice_pbc.hpp\"
#include \"cscpbc/lamperski_igcmc.hpp\"
#include \"cscpbc/malasics_igcmc.hpp\"
#include \"cscpbc/widom.hpp\"
#include \"core/constants.hpp\"
#include \"evaluator/evaluator_meta.hpp\"
#include \"evaluator/coulomb.hpp\"
#include \"observer/density_zaxis.hpp\"
#include \"observer/metropolis_sampler.hpp\"
#include \"observer/rdf_sampler.hpp\"
#include \"observer/sampler_meta.hpp\"
#include \"observer/specie_count.hpp\"
#include \"particle/specie_meta.hpp\"
#include \"particle/ensemble.hpp\"
#include \"trial/base_chooser.hpp\"
#include \"trial/choice_meta.hpp\"
#include \"trial/chooser.hpp\"
#include \"trial/grid.hpp\"
#include \"trial/move_choice.hpp\"
// -
${namespace_start}
${members}
${namespace_end}

BOOST_CLASS_EXPORT_IMPLEMENT(periodic_cube::periodic_system);

// Need to register the template types derived from base_chooser
BOOST_CLASS_EXPORT_GUID(trial::chooser< trial::move_choice >, \"trial::chooser< trial::move_choice >\");
BOOST_CLASS_EXPORT_GUID(trial::chooser< periodic_cube::gc_choice_pbc >, \"trial::chooser< periodic_cube::gc_choice_pbc >\");
BOOST_CLASS_EXPORT_GUID(trial::chooser< periodic_cube::jump_choice_pbc >, \"trial::chooser< periodic_cube::jump_choice_pbc >\");

"
      python_src "${comment}
import region
${definition}"
      associated_classes
	class_ref 1129263 // periodic_system
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 327601 "cscmc_bulk"
      stereotype "source"
      cpp_src "${comment}
// headers
#include <iostream>
#include \"core/strngs.hpp\"
#include \"core/input_reader.hpp\"
#include \"cscpbc/periodic_system.hpp\"
#include \"evaluator/base_evaluator.hpp\"
#include \"observer/base_sampler.hpp\"
#include \"platform/application.hpp\"
#include \"utility/archive_file.hpp\"

#ifndef DEBUG
#define DEBUG 0
#endif

//END


int main (int argc, char** argv)
{
   // Output the program specific description.
  platform::application::simulator_.reset( new periodic_cube::periodic_system );
   // Process the input data
   if ( not platform::application::main( argc, argv ) )
   {
      // error or help request in input
      return 1;
   }
   return 0;
}


"
      python_src "#!env python2.7

max_input_ver = 1

# Random seed value
def random_seed_value ():
  import os
  return os.urandom(4)


if __name__ == \"__main__\":
  import csc
  csc.description ()
  
  sim = csc.simulator()
  if len(sys.argv > 1): #v4q5t9
    # parse command line options.
    import argparse
    cmdln_opts = argparse.ArgumentParser(description=\"Allowed Options\")
    cmdln_opts.add_argument(\"--run\", dest=\"run\", type=int, help=\"Simulation run number.\")
    cmdln_opts.add_argument(\"--input-template\", dest=\"basename\", help=\"Plain or printf style format string for generating input filename\")
    cmdln_opts.add_argument(\"--seed\", dest=\"seed\", type=int, help=\"Simulation random seed value.\")
    cmdln_opts.add_argument(\"--restart\", dest=\"restart\", help=\"Check point file for simulation restart\")
    vm = cmdln_opts.parse_args()

    if vm.restart: # s4z4y1
      if vm.seed:
        print \"Random seed value on command line is ignored with restart.\"
      if vm.basename:
        print \"Input filename on command line is ignored with restart.\"
      if vm.run:
        print \"Run number on command line is ignored with restart.\"

      sim.read_checkpoint(vm.restart)
    else: # s4z4y1
      if vm.basename:
        sim.set_filename_base (vm.basename)
      if vm.run:
        sim.set_run_number (vm.run)

      #initialize system having got a run number
      sim.set_uuid ()
      if not vm.seed:
        vm.seed = random_seed_value ()
      print \"Random seed value : \", vm.seed, \".\"
      sim.set_random_seed (vm.seed)

      fn = sim.find_input_filename()
      print \"Reading input file '\"+fn+\"'\"
      sim.read_input_file(fn)
      sim.initialize()
    pass # s4z4y1
  else # v4q5t9
    # initialize system without any command line options.
    sim.set_uuid ()
    seedval (random_seed_value ())
    print \"Random seed value : \", seedval, \".\"
    sim.set_random_seed (seedval)
    fn = sim.find_input_filename()
    print \"Reading input file '\"+fn+\"'\"
    sim.read_input_file(fn)
    sim.initialize()
  pass #v4q5t9
  print \"BEGIN SIMULATION\"
  sim.do_enrol()
  sim.description ()
  sim.run()
  sim.description()
"
      associated_classes
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 295344 "cscmc_bulk_mpi"
      stereotype "source"
      cpp_src "${comment}
// headers
#include \"cscpbc/periodic_system.hpp\"
#include \"platform/mpi_application.hpp\"

#ifndef DEBUG
#define DEBUG 0
#endif

//END

int main (int argc, char** argv)
{
   // Output the program specific description.
  platform::mpi_application::simulator_.reset( new periodic_cube::periodic_system );
   // Process the input data
   if ( not platform::mpi_application::main( argc, argv ) )
   {
      // error or help request in input
      return 1;
   }
   return 0;
}


"
      associated_classes
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 302256 "libionch_pbc"
      stereotype "library"
      associated_artifacts
	artifact_ref 128176 // add_specie_pbc
	artifact_ref 155568 // imc_meta
	artifact_ref 651823 // widom
	artifact_ref 128944 // jump_choice_pbc
	artifact_ref 162480 // alternater_chooser
	artifact_ref 128057 // lamperski_igcmc
	artifact_ref 148401 // periodic_system
	artifact_ref 148784 // bulk_simulator_meta
	artifact_ref 128560 // remove_specie_pbc
	artifact_ref 134841 // accept_igcmc
	artifact_ref 247089 // malasics_igcmc
	artifact_ref 148912 // alternater_choice
	artifact_ref 246961 // igcmc
	artifact_ref 128048 // gc_choice_pbc
      end
    end

    artifact 128817 "cscbulk"
      stereotype "executable"
      associated_artifacts
	artifact_ref 325552 // libionch_lapack
	artifact_ref 334257 // uuid
	artifact_ref 185007 // serialization
	artifact_ref 651439 // random
	artifact_ref 332208 // libionch_gdbm_sink
	artifact_ref 302256 // libionch_pbc
	artifact_ref 694959 // libionch_trial
	artifact_ref 216239 // date_time
	artifact_ref 222768 // clapack
	artifact_ref 281519 // system
	artifact_ref 769327 // libionch_platform
	artifact_ref 327601 // cscmc_bulk
	artifact_ref 207919 // libionch_utility
	artifact_ref 769583 // libionch_observer
	artifact_ref 371376 // gdbm
	artifact_ref 617391 // libionch_particle
	artifact_ref 609327 // libionch_core
	artifact_ref 215983 // program_options
	artifact_ref 716335 // libionch_evaluator
      end
      comment " Program version to be used to create a make, cmake or jam
 build system for the project using \"Create build system\" tool."
    end

    artifact 302128 "cscbulk_mpi"
      stereotype "executable"
      associated_artifacts
	artifact_ref 325552 // libionch_lapack
	artifact_ref 334257 // uuid
	artifact_ref 185007 // serialization
	artifact_ref 651439 // random
	artifact_ref 332208 // libionch_gdbm_sink
	artifact_ref 302256 // libionch_pbc
	artifact_ref 694959 // libionch_trial
	artifact_ref 216239 // date_time
	artifact_ref 222768 // clapack
	artifact_ref 281519 // system
	artifact_ref 769327 // libionch_platform
	artifact_ref 207919 // libionch_utility
	artifact_ref 769583 // libionch_observer
	artifact_ref 301872 // mpi
	artifact_ref 345264 // libionch_platform_mpi
	artifact_ref 295344 // cscmc_bulk_mpi
	artifact_ref 617391 // libionch_particle
	artifact_ref 609327 // libionch_core
	artifact_ref 215983 // program_options
	artifact_ref 716335 // libionch_evaluator
      end
      comment " Program version to be used to create a make, cmake or jam
 build system for the project using \"Create build system\" tool."
    end
  end

  deploymentview 128048 "choices"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 162480 "alternater_chooser"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual includes
#include \"core/strngs.hpp\"
#include \"utility/fuzzy_equals.hpp\"
#include \"utility/utility.hpp\"
// -
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(periodic_cube::alternater_chooser, \"periodic_cube::alternater_chooser\");"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 170544 // alternater_chooser
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 148912 "alternater_choice"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
class alternater_choice;
${definition}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_KEY(periodic_cube::alternater_choice);
BOOST_CLASS_EXPORT_KEY(periodic_cube::alternater_sampler);
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manual includes
#include \"particle/ensemble.hpp\"
#include \"cscpbc/periodic_system.hpp\"
// -
${namespace_start}
${members}
${namespace_end}

BOOST_CLASS_EXPORT_IMPLEMENT(periodic_cube::alternater_choice);
BOOST_CLASS_EXPORT_IMPLEMENT(periodic_cube::alternater_sampler);"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 162864 // alternater_sampler
	class_ref 141744 // alternater_choice
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 128176 "add_specie_pbc"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_KEY(periodic_cube::add_specie_pbc);
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual includes
#include \"particle/ensemble.hpp\"
#include \"cscpbc/periodic_system.hpp\"
// -
${namespace_start}
${members}
${namespace_end}

BOOST_CLASS_EXPORT_IMPLEMENT(periodic_cube::add_specie_pbc);"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 210609 // add_specie_pbc
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 128048 "gc_choice_pbc"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_KEY(periodic_cube::gc_choice_pbc);

#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual includes
#include \"core/strngs.hpp\"
#include \"utility/utility.hpp\"
// -
${namespace_start}
${members}
${namespace_end}

BOOST_CLASS_EXPORT_IMPLEMENT(periodic_cube::gc_choice_pbc);"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 1102767 // gc_choice_pbc
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 128560 "remove_specie_pbc"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_KEY(periodic_cube::remove_specie_pbc);

#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual includes
#include \"particle/ensemble.hpp\"
// -
${namespace_start}
${members}
${namespace_end}

BOOST_CLASS_EXPORT_IMPLEMENT(periodic_cube::remove_specie_pbc);"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 210737 // remove_specie_pbc
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 128944 "jump_choice_pbc"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_KEY(periodic_cube::jump_choice_pbc);

#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manual includes
#include \"core/strngs.hpp\"
#include \"cscpbc/periodic_system.hpp\"
// -
${namespace_start}
${members}
${namespace_end}

BOOST_CLASS_EXPORT_IMPLEMENT(periodic_cube::jump_choice_pbc);"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 1032751 // jump_choice_pbc
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end
  end

  deploymentview 128432 "IMC"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 134841 "accept_igcmc"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manuals
//#include <boost/bind.hpp>
#include \"particle/ensemble.hpp\"
#include \"cscpbc/alternater_choice.hpp\"
#include \"cscpbc/periodic_system.hpp\"
// -
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(periodic_cube::accept_igcmc, \"periodic_cube::accept_igcmc\");"
      associated_classes
	class_ref 128185 // accept_igcmc
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------"
    end

    artifact 246961 "igcmc"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manuals
#include <boost/bind.hpp>
// -
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(periodic_cube::igcmc, \"periodic_cube::igcmc\");
"
      python_src "${comment}
${definition}"
      associated_classes
	class_ref 256689 // igcmc
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 128057 "lamperski_igcmc"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
//manual includes
#include \"cscpbc/periodic_system.hpp\"
#include \"particle/ensemble.hpp\"
#include \"utility/fuzzy_equals.hpp\"
#include <boost/bind.hpp>
//-
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(periodic_cube::lamperski_igcmc, \"periodic_cube::lamperski_igcmc\");
"
      associated_classes
	class_ref 128057 // lamperski_igcmc
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 247089 "malasics_igcmc"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manuals
#include \"cscpbc/periodic_system.hpp\"
#include \"particle/ensemble.hpp\"
#include \"utility/fuzzy_equals.hpp\"
#include <boost/bind.hpp>
// -
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(periodic_cube::malasics_igcmc, \"periodic_cube::malasics_igcmc\");
"
      python_src "${comment}
import igcmc
${definition}"
      associated_classes
	class_ref 256433 // malasics_igcmc
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 651823 "widom"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
// Default inc
#include \"utility/config.hpp\"
#include <boost/weak_ptr.hpp>
// End
${includes}
${declarations}
${namespace_start}
// fwd decl.
class widom;

${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manual includes
#include <fstream>
#include <boost/tokenizer.hpp>
// -
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(periodic_cube::widom, \"periodic_cube::widom\");
"
      associated_classes
	class_ref 367024 // widom_monitor
	class_ref 135087 // widom
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 155568 "imc_meta"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual includes
#include \"core/input_help.hpp\"
#include \"core/strngs.hpp\"
#include \"utility/utility.hpp\"
//=
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 163120 // imc_meta
      end
    end
  end

  deploymentview 134960 "Other"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 128047 "application"
      stereotype "source"
      cpp_src "${comment}
// BEGIN EXTRA INCS
#include \"utility/config.hpp\"
#include \"utility/require.hpp\"
#include \"application/application.hpp\"
#include \"application/simulator.hpp\"
#include \"core/input_delegater.hpp\"
#include \"application/application_meta.hpp\"
#include \"particle/specie_meta.hpp\"
#include \"application/simulator_meta.hpp\"
#include \"evaluator/evaluator_meta.hpp\"
#include \"observer/sampler_meta.hpp\"
#include \"observer/base_sampler.hpp\"
#include \"trial/choice.hpp\"
#include \"trial/chooser.hpp\"
#include \"trial/choice_meta.hpp\"

#include <boost/bind.hpp>
#include <fstream>
#include <iostream>
#include <limits>
#include \"core/constants.hpp\"
#include \"utility/machine.hpp\"
//END
static const std::size_t max_input_ver (1);

int main (int argc, char** argv)
{
  boost::shared_ptr< platform::application > appl (new platform::application);
  core::input_delegater decoder (max_input_ver);
  {
    // Add input decoder class to handle the base application options
    boost::shared_ptr< core::input_base_meta > delegate (new platform::application_meta(appl));
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decoder class to handle the specie definition options
    boost::shared_ptr< core::input_base_meta > delegate (new particle::specie_meta(appl->get_specie_manager ()));
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decode class to handle the simulation type options ???
    boost::shared_ptr< core::input_base_meta > delegate (new platform::simulator_meta(
          boost::bind(&platform::application::add_simulator, appl.get(), _1)));
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decoder class to handle the energy evaluator options.  This
    // handles instantiation of the requested evaluator. 
    boost::shared_ptr< core::input_base_meta > delegate (new evaluator::evaluator_meta(appl));
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decoder class for the observer types. This handles the instantiation
    // of the requested observers
    boost::shared_ptr< core::input_base_meta > delegate (new observer::sampler_meta(
          boost::bind(&platform::application::add_observer, appl.get(), _1)));
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decoder class for defining the different choices to use in the
    // simulation
    boost::shared_ptr< core::input_base_meta > delegate (new trial::choice_meta (
          boost::bind(&platform::application::add_choice, appl.get(), _1)));
    decoder.add_input_delegate (delegate);
  }
    // NOTE: The input decoders are not required to check that the final system is 
    // valid.
  if (argc > 1)
  {
    std::ifstream store (argv[1]);
    boost::archive::text_iarchive ia(store);
    ia >> *(appl.get());
    if (not utility::fp_env::env_.no_except())
    {
      std::cout << \" Floating point exception during deserialization ignored : \"
                << utility::fp_env::env_.error_message () << \"\\n\";
      utility::fp_env::env_.reset();
    }
  }
  else
  {
    // initialize system
    std::ifstream ifs (\"input.dat\");
    if (not ifs)
    {
      std::cout << \"No input file 'input.dat'\\n\";
      return 1;
    }
    std::unique_ptr< platform::bulk_simulator > sim (new platform::bulk_simulator(0,0.0));
    // The readat method currently performs what will be done by the delegator
    // when instantiating the system.
    sim->readat(ifs, *appl);
    appl->add_simulator (std::unique_ptr< platform::base_simulator >(sim.release()));
  }
  
  appl->set_uuid ();
  appl->description (std::cout);
  appl->main();
  return 0;
}
"
      associated_classes
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------

"
    end

    artifact 128689 "cscmc_appl"
      stereotype "source"
      cpp_src "${comment}
// BEGIN EXTRA INCS
#include \"utility/config.hpp\"
#include \"utility/require.hpp\"

// Input file reader header
#include \"core/input_delegater.hpp\"

// Application headers
#include \"platform/application.hpp\"
#include \"platform/application_meta.hpp\"

// Simulator related headers
#include \"platform/simulator.hpp\"
#include \"platform/simulator_meta.hpp\"
#include \"platform/periodic_system.hpp\"

// Specie reader header
#include \"particle/specie_meta.hpp\"

// Evaluator related headers
#include \"evaluator/evaluator_meta.hpp\"
#include \"evaluator/lennard_jones.hpp\"
#include \"evaluator/coulomb.hpp\"

// Data collector headers
#include \"observer/sampler_meta.hpp\"
#include \"observer/base_sampler.hpp\"
#include \"observer/d3_distribution.hpp\"
#include \"observer/metropolis_sampler.hpp\"
#include \"observer/rdf_sampler.hpp\"
#include \"observer/specie_count.hpp\"
#include \"observer/widom.hpp\"
// Super loop observers
#include \"observer/malasics_igcmc.hpp\"
#include \"observer/lamperski_igcmc.hpp\"
#include \"observer/accept_igcmc.hpp\"

// Trial type headers
#include \"trial/choice.hpp\"
#include \"trial/add_choice.hpp\"
#include \"trial/chooser.hpp\"
#include \"trial/choice_meta.hpp\"
#include \"trial/accept_choice.hpp\"

// Utility headers
#include <boost/bind.hpp>
#include <boost/program_options.hpp>
#include <fstream>
#include <iostream>
#include <limits>
#include \"core/constants.hpp\"
#include \"utility/machine.hpp\"
#include \"core/strngs.hpp\"
//END
static const std::size_t max_input_ver (1);

// Random seed value
#ifdef HAVE_NO_RANDOM_DEVICE
// This is only the case when boost::random::random_device is not defined for
// your environment. This should never be the case!
namespace
{
  unsigned int random_seed_value () 
  {
    return 859091u;
  }
}
#else
#include <boost/random/random_device.hpp>
namespace
{
  // Get random seed value from random device
  unsigned int random_seed_value()
  {
    boost::random::random_device seedgenr;
    return seedgenr() - seedgenr.min();
  }
}
#endif

int main (int argc, char** argv)
{
  boost::shared_ptr< platform::application > appl (new platform::application);
  core::input_delegater decoder (max_input_ver);
  {
    // Add input decoder class to handle the base application options
    boost::shared_ptr< core::input_base_meta > delegate (new platform::application_meta(appl));
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decoder class to handle the specie definition options
    boost::shared_ptr< core::input_base_meta > delegate (new particle::specie_meta(appl->get_specie_manager ()));
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decode class to handle the simulation type options ???
    std::unique_ptr< platform::simulator_meta > tmp_(new platform::simulator_meta);
    // Add the simulator types that this application should handle
    tmp_->type_to_object_[core::strngs::bulk_label()] = &platform::periodic_system::make_geometry;
    boost::shared_ptr< core::input_base_meta > delegate (tmp_.release());
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decoder class to handle the energy evaluator options.  This
    // handles instantiation of the requested evaluator.
    std::unique_ptr< evaluator::evaluator_meta > tmp_ (new evaluator::evaluator_meta);
    // Add the evaluator types tha t we want this application to handle
    tmp_->type_to_object_[evaluator::lennard_jones::type_label_()] = &evaluator::lennard_jones::make_evaluator;
    tmp_->type_to_object_[evaluator::coulomb::type_label_()] = &evaluator::coulomb::make_evaluator;
    boost::shared_ptr< core::input_base_meta > delegate (tmp_.release());
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decoder class for the observer types. This handles the instantiation
    // of the requested observers
    std::unique_ptr< observer::sampler_meta > tmp_ (new observer::sampler_meta);
    tmp_->type_to_object_[observer::d3_distribution::type_label_()]= &observer::d3_distribution::make_sampler;
    tmp_->type_to_object_[observer::metropolis_sampler::type_label_()]= &observer::metropolis_sampler::make_sampler;
    tmp_->type_to_object_[observer::rdf_sampler::type_label_()]= &observer::rdf_sampler::make_sampler;
    tmp_->type_to_object_[observer::specie_count::type_label_()]= &observer::specie_count::make_sampler;
    tmp_->type_to_object_[observer::widom::type_label_()]= &observer::widom::make_sampler;
    tmp_->type_to_object_[observer::malasics_igcmc::type_label_()]= &observer::malasics_igcmc::make_sampler;
    tmp_->type_to_object_[observer::lamperski_igcmc::type_label_()]= &observer::lamperski_igcmc::make_sampler;
    tmp_->type_to_object_[observer::accept_igcmc::type_label_()]= &observer::accept_igcmc::make_sampler;
    boost::shared_ptr< core::input_base_meta > delegate (tmp_.release());
    decoder.add_input_delegate (delegate);
  }
  {
    // Add input decoder class for defining the different choices to use in the
    // simulation
    std::unique_ptr< trial::choice_meta > tmp_ (new trial::choice_meta);
    tmp_->type_to_object_[\"move\"] = &trial::move_choice::make_choice;
    tmp_->type_to_object_[\"gc\"] = &trial::add_choice::make_choice;
    tmp_->type_to_object_[\"jump\"] = &trial::jump_choice::make_choice;
    tmp_->type_to_object_[\"accept\"] = &trial::accept_choice::make_choice;
    boost::shared_ptr< core::input_base_meta > delegate (tmp_.release());
    decoder.add_input_delegate (delegate);
  }
  // NOTE: The input decoders are not required to check that the final system is
  // valid.
  if (argc > 1)
  {
    namespace po = boost::program_options;
    po::options_description cmdln_opts(\"Allowed Options\");
    cmdln_opts.add_options()
      (\"run\", po::value<unsigned int>(), \"Simulation run number.\")
      (core::strngs::inputpattern_label().c_str(), po::value<std::string>(), \"Plain or printf style format string for generating input filename\")
      (\"seed\", po::value<unsigned int>(), \"Simulation random seed value.\")
      (\"restart\", po::value<std::string>(), \"Check point file for simulation restart\")
      (\"help\", \"Produce help message\");
    po::variables_map vm;
    try
    {
      po::store(po::parse_command_line(argc, argv, cmdln_opts), vm);
      po::notify(vm);
    }
    catch (std::exception &err)
    {
      std::cout << \"Error : \" << err.what() << \"\\n\";
      std::cout << cmdln_opts << \"\\n\";
      return 1;
    }

    if (vm.count(\"help\"))
    {
      std::cout << cmdln_opts << \"\\n\";
      return 1;
    }

    if (vm.count(\"restart\"))
    {
      if (vm.count(\"seed\"))
      {
        std::cout << \"Random seed value on command line is ignored with restart.\\n\";
      }
      if (vm.count(core::strngs::inputpattern_label()))
      {
        std::cout << \"Input filename on command line is ignored with restart.\\n\";
      }
      if (vm.count(\"run\"))
      {
        std::cout << \"Run number on command line is ignored with restart.\\n\";
      }

      std::ifstream store (vm[\"restart\"].as<std::string>());
      boost::archive::text_iarchive ia(store);
      ia >> *(appl.get());
      if (not utility::fp_env::env_.no_except())
      {
        std::cout << \" Floating point exception during deserialization ignored : \"
                << utility::fp_env::env_.error_message () << \"\\n\";
        utility::fp_env::env_.reset();
      }
      appl->description (std::cout);
    }
    else
    {
      if (vm.count(core::strngs::inputpattern_label()))
      {
        appl->set_filename_base (vm[core::strngs::inputpattern_label()].as<std::string>());
      }
      if (vm.count(\"run\"))
      {
        appl->set_run_number (vm[\"run\"].as<unsigned int>());
      }

      // initialize system having got a run number
      appl->set_uuid ();
      appl->description (std::cout);
      if (vm.count(\"seed\"))
      {
        unsigned int seedval (vm[\"seed\"].as<unsigned int>());
        std::cout << \"Random seed value : \" << seedval << \".\\n\";
        appl->set_random_seed (seedval);
      }
      else
      {
        unsigned int seedval (random_seed_value ());
        std::cout << \"Random seed value : \" << seedval << \".\\n\";
        appl->set_random_seed (seedval);
      }
      std::string fn (appl->find_input_filename());
      std::cout << core::strngs::horizontal_bar () << \"\\n\";
      std::cout << \"Reading input file '\"<<fn<<\"'\\n\";
      decoder.read_input_file (*appl, fn);
      std::cout << core::strngs::horizontal_bar () << \"\\n\";
      decoder.write_input_file(std::cout);
      std::cout << core::strngs::horizontal_bar () << \"\\n\";
    }
  }
  else
  {
    // initialize system
    appl->set_uuid ();
    appl->description (std::cout);
    {
      unsigned int seedval (random_seed_value ());
      std::cout << \"Random seed value : \" << seedval << \".\\n\";
      appl->set_random_seed (seedval);
    }
    std::string fn (appl->find_input_filename());
    std::cout << core::strngs::horizontal_bar () << \"\\n\";
    std::cout << \"Reading input file '\"<<fn<<\"'\\n\";
    decoder.read_input_file (*appl, fn);
    std::cout << core::strngs::horizontal_bar () << \"\\n\";
    decoder.write_input_file(std::cout);
    std::cout << core::strngs::horizontal_bar () << \"\\n\";
  }

  appl->main();
  return 0;
}

"
      associated_classes
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 307633 "cscaccept_main"
      stereotype "source"
      cpp_src "${comment}

#include \"platform/simulator.hpp\"
#include \"particle/specie.hpp\"
#include \"observer/accept_igcmc.hpp\"
#include \"observer/specie_count.hpp\"
#include \"observer/metropolis_sampler.hpp\"
#include \"observer/rdf_sampler.hpp\"
#include \"observer/widom.hpp\"
#include \"core/strngs.hpp\"
#include \"evaluator/coulomb.hpp\"
#include <iostream>

#ifndef DEBUG
#define DEBUG 0
#endif


int main(int argc, char** argv)
{
  // stepwise test of cmc
  platform::simulator sim;
  sim.set_delta( 3.0 );
  sim.set_equilibration_interval( 10 );
  sim.set_production_interval( 100 );
  sim.set_inner_loop_size( 1000 ); // #X 0
  sim.set_target_particles( 50 );

  {
    particle::specie spc1;
    spc1.set_label( \"Na\" );
    spc1.set_radius( 1.9/2 );
    spc1.set_valency( 1.0 );
    spc1.set_excess_potential( 0.0 );
    spc1.set_concentration( 0.1 );
    spc1.set_type ( particle::specie::SOLUTE );
    sim.add_specie(spc1);
  }
  {
    particle::specie spc1;
    spc1.set_label( \"Cl\" );
    spc1.set_radius( 3.62/2 );
    spc1.set_valency( -1.0 );
    spc1.set_excess_potential( 0.0 );
    spc1.set_concentration( 0.2 );
    spc1.set_type ( particle::specie::SOLUTE );
    sim.add_specie(spc1);
  }
  {
    particle::specie spc1;
    spc1.set_label( \"Ca\" );
    spc1.set_radius( 1.98/2 );
    spc1.set_valency( 2.0 );
    spc1.set_excess_potential( 0.0 );
    spc1.set_concentration( 0.05 );
    spc1.set_type ( particle::specie::SOLUTE );
    sim.add_specie(spc1);
  }
  observer::igcmc *imc;
  {
    std::map< std::string, std::string > params;
    params[\"nstep\"] = \"50\";
    imc = observer::accept_igcmc::make_sampler( params, sim );
  }
  {
    std::map< std::string, std::string > params;
    observer::specie_count::make_sampler( params, sim );
    observer::metropolis_sampler::make_sampler( params, sim );
    observer::rdf_sampler::make_sampler( params, sim );
  }
  {
    std::map< std::string, std::string > params;
    params[core::strngs::fsiwid()] = \"50\";
    params[core::strngs::fswidm()] = \"true\";
    observer::widom::make_sampler( params, sim );
  }
  {
    std::map< std::string, std::string > params;
    evaluator::coulomb::make_evaluator( params, sim );
  }
  // build initial system
  sim.initialize();
  sim.do_enrol();
  sim.description( std::cout );
  // Run IGCMC simulation
  for (size_t scalar = 5; scalar != 11; ++scalar )
  {
    // Start out with low GC rate.
    sim.set_trial_rates( { 1., 1., scalar/10.0 } );
    sim.run( std::cout );
    imc->reset_count();
  }
  sim.description( std::cout );
}
"
      associated_classes
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 281265 "newcmc"
      stereotype "source"
      cpp_src "${comment}

#include \"platform/simulator.hpp\"
#include \"particle/specie.hpp\"
#include \"observer/malasics_igcmc.hpp\"
#include \"observer/lamperski_igcmc.hpp\"
#include \"observer/specie_count.hpp\"
#include \"observer/metropolis_sampler.hpp\"
#include \"observer/rdf_sampler.hpp\"
#include \"observer/widom.hpp\"
#include \"core/strngs.hpp\"
#include \"evaluator/coulomb.hpp\"
#include <iostream>

#ifndef DEBUG
#define DEBUG 0
#endif


int main(int argc, char** argv)
{
  // stepwise test of cmc
  platform::simulator sim;
  sim.set_delta( 3.0 );
  sim.set_equilibration_interval( 10 );
  sim.set_production_interval( 100 );
  sim.set_inner_loop_size( 1000 ); // #X 0
  sim.set_target_particles( 50 );

  {
    particle::specie spc1;
    spc1.set_label( \"Na\" );
    spc1.set_radius( 1.9/2 );
    spc1.set_valency( 1.0 );
    spc1.set_excess_potential( 0.0 );
    spc1.set_concentration( 0.1 );
    spc1.set_type ( particle::specie::SOLUTE );
    sim.add_specie(spc1);
  }
  {
    particle::specie spc1;
    spc1.set_label( \"Cl\" );
    spc1.set_radius( 3.62/2 );
    spc1.set_valency( -1.0 );
    spc1.set_excess_potential( 0.0 );
    spc1.set_concentration( 0.2 );
    spc1.set_type ( particle::specie::SOLUTE );
    sim.add_specie(spc1);
  }
  {
    particle::specie spc1;
    spc1.set_label( \"Ca\" );
    spc1.set_radius( 1.98/2 );
    spc1.set_valency( 2.0 );
    spc1.set_excess_potential( 0.0 );
    spc1.set_concentration( 0.05 );
    spc1.set_type ( particle::specie::SOLUTE );
    sim.add_specie(spc1);
  }
  observer::igcmc *imc;
  {
    std::map< std::string, std::string > params;
    params[\"nstep\"] = \"50\";
    imc = observer::malasics_igcmc::make_sampler( params, sim );
  }
  {
    std::map< std::string, std::string > params;
    observer::specie_count::make_sampler( params, sim );
    observer::metropolis_sampler::make_sampler( params, sim );
    observer::rdf_sampler::make_sampler( params, sim );
  }
  {
    std::map< std::string, std::string > params;
    params[core::strngs::fsiwid()] = \"50\";
    params[core::strngs::fswidm()] = \"true\";
    observer::widom::make_sampler( params, sim );
  }
  {
    std::map< std::string, std::string > params;
    evaluator::coulomb::make_evaluator( params, sim );
  }
  // build initial system
  sim.initialize();
  sim.do_enrol();
  sim.description( std::cout );
  // Run IGCMC simulation
  for (size_t scalar = 5; scalar != 11; ++scalar )
  {
    // Start out with low GC rate.
    sim.set_trial_rates( { 1., 1., scalar/10.0 } );
    sim.run( std::cout );
    imc->reset_count();
  }
  sim.description( std::cout );
}
"
      python_src "
import csc
import sys

if __name__ == \"__main__\":
  sim = csc.Simulator()
  sim.set_delta( 3.0 )
  sim.set_equilibration_interval( 10 )
  sim.set_production_interval( 100 )
  sim.set_inner_loop_size( 1000 ) // #X 0
  sim.set_target_particles( 50 )

  sim.description( sys.stdout )

"
      associated_classes
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------"
    end
  end
end
