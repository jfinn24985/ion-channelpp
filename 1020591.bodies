class conf_test_suite
!!!1938607.cpp!!!	test_conf_ctor() : void
  ionch::conf var1;
  TS_ASSERT_EQUALS (var1.active_size(), 0);
  TS_ASSERT_EQUALS (var1.size(), 0);
  TS_ASSERT_EQUALS (var1.size(0), 0);
!!!1938735.cpp!!!	test_conf_add_particles() : void
  ionch::conf var1;
  TS_ASSERT_EQUALS (var1.active_size(), 0);
  TS_ASSERT_EQUALS (var1.size(), 0);
  TS_ASSERT_EQUALS (var1.size(0), 0);
  var1.read_finalise();
  var1.add_particle (1.0, 1.0, 1.0, 3, 0.0, 0.0, 0.0, 0.0);
  TS_ASSERT_EQUALS (var1.active_size(), 1);
  TS_ASSERT_EQUALS (var1.size(), 1);
  TS_ASSERT_EQUALS (var1.size(0), 0);
  TS_ASSERT_EQUALS (var1.size(3), 1);
  TS_ASSERT_EQUALS (var1.rx(0), 1.0);
  TS_ASSERT_EQUALS (var1.ry(0), 1.0);
  TS_ASSERT_EQUALS (var1.rz(0), 1.0);
  TS_ASSERT_DELTA(var1.r2(0), 1.414213562373095, 1.0E-9);
  TS_ASSERT_EQUALS (var1.rsx(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsy(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsz(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsr(0), 0.0);
  TS_ASSERT_EQUALS (var1.rieps(0), 0.0125);
!!!1938863.cpp!!!	test_conf_release_index() : void
  ionch::conf var1;
  TS_ASSERT_EQUALS (var1.active_size(), 0);
  TS_ASSERT_EQUALS (var1.size(), 0);
  TS_ASSERT_EQUALS (var1.size(0), 0);
  var1.read_finalise();
  var1.add_particle (1.0, 1.0, 1.0, 0, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (-1.0, 1.0, 1.0, 1, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (1.0, -1.0, 1.0, 2, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (-1.0, -1.0, 1.0, 3, 0.0, 0.0, 0.0, 0.0);
  TS_ASSERT_EQUALS (var1.active_size(), 4);
  TS_ASSERT_EQUALS (var1.size(), 4);
  TS_ASSERT_EQUALS (var1.size(0), 1);
  TS_ASSERT_EQUALS (var1.size(3), 1);
  var1.release_index (2);
  TS_ASSERT_EQUALS (var1.active_size(), 4);
  TS_ASSERT_EQUALS (var1.size(), 3);
  TS_ASSERT_EQUALS (var1.size(2), 0);
  size_t idx = var1.allocate_index (3);
  TS_ASSERT_EQUALS (idx, 2);
  TS_ASSERT_EQUALS (var1.size(3), 2);
!!!1938991.cpp!!!	test_conf_allocate_index() : void
  ionch::conf var1;
  TS_ASSERT_EQUALS (var1.active_size(), 0);
  TS_ASSERT_EQUALS (var1.size(), 0);
  TS_ASSERT_EQUALS (var1.size(0), 0);
  var1.read_finalise();
  var1.add_particle (1.0, 1.0, 1.0, 0, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (-1.0, 1.0, 1.0, 1, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (1.0, -1.0, 1.0, 2, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (-1.0, -1.0, 1.0, 3, 0.0, 0.0, 0.0, 0.0);
  TS_ASSERT_EQUALS (var1.active_size(), 4);
  TS_ASSERT_EQUALS (var1.size(), 4);
  TS_ASSERT_EQUALS (var1.size(0), 1);
  TS_ASSERT_EQUALS (var1.size(3), 1);
  size_t idx = var1.allocate_index (2);
  TS_ASSERT_EQUALS (idx, 4);
  TS_ASSERT_EQUALS (var1.active_size(), 5);
  TS_ASSERT_EQUALS (var1.size(), 5);
  TS_ASSERT_EQUALS (var1.size(2), 2);
!!!1939119.cpp!!!	test_conf_set_position() : void
  ionch::conf var1;
  TS_ASSERT_EQUALS (var1.active_size(), 0);
  TS_ASSERT_EQUALS (var1.size(), 0);
  TS_ASSERT_EQUALS (var1.size(0), 0);
  var1.read_finalise();
  size_t idx = var1.allocate_index (2);
  TS_ASSERT_EQUALS (idx, 0);
  TS_ASSERT_EQUALS (var1.active_size(), 1);
  TS_ASSERT_EQUALS (var1.size(), 1);
  TS_ASSERT_EQUALS (var1.size(2), 1);
  TS_ASSERT_EQUALS (var1.specie_index(0), 2);
  TS_ASSERT_EQUALS (var1.rx(0), 0.0);
  TS_ASSERT_EQUALS (var1.ry(0), 0.0);
  TS_ASSERT_EQUALS (var1.rz(0), 0.0);
  TS_ASSERT_EQUALS (var1.r2(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsx(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsy(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsz(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsr(0), 0.0);
  TS_ASSERT_EQUALS (var1.rieps(0), 1.0);
  var1.set_position (0, 1.0, 1.0, 1.0, 1.414213562373095, 2.0);
  TS_ASSERT_EQUALS (var1.rx(0), 1.0);
  TS_ASSERT_EQUALS (var1.ry(0), 1.0);
  TS_ASSERT_EQUALS (var1.rz(0), 1.0);
  TS_ASSERT_EQUALS (var1.r2(0), 1.414213562373095);
  TS_ASSERT_EQUALS (var1.rsx(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsy(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsz(0), 0.0);
  TS_ASSERT_EQUALS (var1.rsr(0), 0.0);
  TS_ASSERT_EQUALS (var1.rieps(0), 0.5);
!!!1939247.cpp!!!	test_conf_serialise() : void
  ionch::conf var1;
  TS_ASSERT_EQUALS (var1.active_size(), 0);
  TS_ASSERT_EQUALS (var1.size(), 0);
  TS_ASSERT_EQUALS (var1.size(0), 0);
  var1.read_finalise();
  var1.add_particle (1.0, 1.0, 1.0, 0, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (-1.0, 1.0, 1.0, 1, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (1.0, -1.0, 1.0, 2, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (-1.0, -1.0, 1.0, 3, 0.0, 0.0, 0.0, 0.0);
  var1.release_index (2);
  std::stringstream store;
  {
    boost::archive::text_oarchive oa(store);
    // write class instance to archive
    oa << var1;
  }

  var1.reset ();
  TS_ASSERT_EQUALS (var1.active_size(), 0);
  TS_ASSERT_EQUALS (var1.size(), 0);
  TS_ASSERT_EQUALS (var1.size(0), 0);
  TS_ASSERT_EQUALS (var1.size(3), 0);

  {
    boost::archive::text_iarchive ia(store);
    // get class instance from archive
    ia >> var1;
  }

  TS_ASSERT_EQUALS (var1.active_size(), 4);
  TS_ASSERT_EQUALS (var1.size(), 3);
  TS_ASSERT_EQUALS (var1.size(0), 1);
  TS_ASSERT_EQUALS (var1.size(1), 1);
  TS_ASSERT_EQUALS (var1.size(2), 0);
  TS_ASSERT_EQUALS (var1.size(3), 1);
  size_t idx = var1.allocate_index (3);
  TS_ASSERT_EQUALS (idx, 2);
  TS_ASSERT_EQUALS (var1.size(3), 2);
!!!1939375.cpp!!!	test_conf_index_from_specie() : void
  ionch::conf var1;
  TS_ASSERT_EQUALS (var1.active_size(), 0);
  TS_ASSERT_EQUALS (var1.size(), 0);
  TS_ASSERT_EQUALS (var1.size(0), 0);
  var1.read_finalise();
  var1.add_particle (1.0, 1.0, 1.0, 0, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (-1.0, 1.0, 1.0, 1, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (1.0, -1.0, 1.0, 2, 0.0, 0.0, 0.0, 0.0);
  var1.add_particle (-1.0, -1.0, 1.0, 3, 0.0, 0.0, 0.0, 0.0);
  TS_ASSERT_EQUALS (var1.active_size(), 4);
  TS_ASSERT_EQUALS (var1.size(), 4);
  TS_ASSERT_EQUALS (var1.size(0), 1);
  TS_ASSERT_EQUALS (var1.size(3), 1);
  size_t idx = var1.allocate_index (2);
  TS_ASSERT_EQUALS (idx, 4);
  TS_ASSERT_EQUALS (var1.active_size(), 5);
  TS_ASSERT_EQUALS (var1.size(), 5);
  TS_ASSERT_EQUALS (var1.size(2), 2);

  TS_ASSERT_EQUALS (var1.index_from_specie(2, 0), 2);
  TS_ASSERT_EQUALS (var1.index_from_specie(2, 1), 4);
