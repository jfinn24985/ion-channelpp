class imc_meta
!!!215472.cpp!!!	imc_meta()
if (0 == counter_)
{
   const std::string seclabel( core::strngs::imc_label() );
   // ----------------------------------------
   // add section
   // ----------------------------------------

   //   Specie input section definition
   core::input_help::exemplar().add_section( seclabel,
         "Super-looper input section definition.  In addition to the listed options, each individual "
         "sampler subtype may have its own specific options." );

   // ----------------------------------------
   // add parameters
   // ----------------------------------------

   //  type : [required] trial subtype
   {
      const std::string description("[required, string] sampler subtype (see documentation for valid subtypes).");
      core::input_help::exemplar().add_option( seclabel, core::strngs::fstype(), description );
   }
}
++counter_;

!!!215856.cpp!!!	do_read_entry(inout reader : input_reader) : bool
if (reader.name().find(core::strngs::fstype()) == 0)
{
   // --------------------
   // Evaluator type
   UTILITY_INPUT(not reader.value().empty(), "Sampler type must have a value.", this->section_label());
   std::string val (reader.dequote(reader.value()));
   UTILITY_INPUT(type_to_object_.count(val) != 0, "Sampler type ["+val+"] does not name a valid sampler for this application (see documentation).", this->section_label());
   this->type_ = val;
   missing_required_tags_.reset(SAMPLER_TYPE);
}
else
{
   // --------------------
   // Choice specific parameters
   UTILITY_INPUT (0 == this->parameter_set_.count (reader.name()), ("keyword \""+reader.name()+"\" appears more than once in a single in specie section"), core::strngs::fsspec());
   this->parameter_set_.insert (std::make_pair(reader.name(), reader.value()));
}
return true;
!!!215984.cpp!!!	do_read_end(inout sim : simulator) : void
UTILITY_INPUT( not this->missing_required_tags_.any(), "Not all required tags were present.", this->section_label() );

// Call the generator functional to create and add
// super-looper object to simulator.
this->type_to_object_[ this->type_ ]( this->parameter_set_, sim );
!!!268592.cpp!!!	do_reset() : void
this->parameter_set_.clear();
this->missing_required_tags_.reset();
