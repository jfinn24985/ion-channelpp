class input_node
!!!550576.cpp!!!	getline(out line : string) : void
if (this->pos_ > this->buffer_.size())
{
   // Handle case of reading past last line of file
   line.clear();
   return;
}
else if (this->pos_ == this->buffer_.size())
{
   // Handle case of last line of file being '\n{EOF}'
   line.clear();
   ++this->pos_;
   return;
}
else
{
   std::string::size_type ipos = this->buffer_.find('\n', this->pos_);
   // Handle case of last line of buffer when ipos = npos
   if (ipos == std::string::npos)
   {
      line = this->buffer_.substr( this->pos_, ipos );
      this->pos_ = this->buffer_.size();
   }
   else
   {
      line = this->buffer_.substr( this->pos_, ipos - this->pos_ );
      this->pos_ = ipos + 1;
   }
}
++this->line_no_;
!!!878384.cpp!!!	read_stream_(inout ais : istream) : bool
if( ais )
{
  // read stream into temp buffer
  std::string temp_buffer;
  ais.seekg( 0, std::ios::end );
  std::streampos length = ais.tellg();
  ais.seekg( 0, std::ios::beg );
  temp_buffer.reserve( length );
  temp_buffer.assign( ( std::istreambuf_iterator<char>( ais ) ), ( std::istreambuf_iterator<char>() ) );
  // If all ok, swap temp buffer with out buffer.
  std::swap( temp_buffer, this->buffer_ );
  this->rewind();
  return true;
}
else
{
  return false;
}

!!!878256.cpp!!!	set_buffer(in filename : path, inout ais : istream) : bool
this->path_ = boost::filesystem::absolute( filename ).string();
// read stream into our buffer
return this->read_stream_( ais );
!!!551088.cpp!!!	set_buffer(in filename : path) : bool
this->path_ = boost::filesystem::absolute( filename ).string();
// read file into our buffer stream
std::ifstream ifs( this->path_.c_str() );
return this->read_stream_( ifs );
!!!551216.cpp!!!	set_buffer(in filename : path, in buffer : string) : bool
this->path_ = boost::filesystem::absolute( filename ).string();
std::swap( this->buffer_, buffer );
this->rewind();
return true;
