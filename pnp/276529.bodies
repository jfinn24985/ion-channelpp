class binary_estimate
!!!618033.cpp!!!	append(in success : bool) : void
if (0 != this->count_)
{
  if (success)
  {
    std::size_t tails (this->count_ - this->heads_);
    this->variance_ += double(tails*tails)/double(this->count_*(this->count_+1));
  }
  else
  {
    this->variance_ += double(this->heads_*this->heads_)/double(this->count_*(this->count_+1));
  }
}
else
{
  this->variance_ = double(success ? 1 : 0);
}
// Increment counter here as we need the old count when
// calculating the variance.
++(this->count_);
// Increment heads on success
if (success)
{
  ++(this->heads_);
}
!!!618033.python!!!	append(in success : bool) : void
if 0 != self.count_:
  if success:
    tails = self.count_ - self.heads_
    self.variance_ += float(tails*tails)/float(self.count_*(self.count_+1))
  else:
    self.variance_ += float(self.heads_*self.heads_)/float(self.count_*(self.count_+1))
else:
  self.variance_ = 1.0 if success else 0.0
# Increment counter here as we need the old count when
# calculating the variance.
self.count_ += 1
# Increment heads on success
if success:
  self.heads_ += 1
