format 75
"scripts" // scripts
  revision 64
  modified_by 48 "finnerty"
  owner 48 "finnerty"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  python_dir "scripts"
  package_ref 335663 // library

  classview 334767 "filedata"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 203311 // merge
    comment " Module for managing access to the row-orient data files produced as output by
 the 'channel' program."
    classdiagram 385967 "filedata module"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    sequencediagram 386095 "read a file"
      show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
      overlapping_bars size A4
    end

    class 351663 "FieldType"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "  This base class defines the set of constants that are used by
  derived classes to categories the fields in a row oriented data
  file.
"
      attribute 403119 "IGNORED"
	class_attribute const_attribute public explicit_type "uint"
	init_value "0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "the entry in this field is not to be output

All entries are simply ignored and nothing is output"
      end

      attribute 403247 "CONSTANT"
	class_attribute const_attribute public explicit_type "uint"
	init_value "1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The entries in this field should be constant across the data set.

The value of the first entry in the data set  is output. No
check is performed to ensure all the values match."
      end

      attribute 402991 "SERIAL"
	class_attribute const_attribute public explicit_type "uint"
	init_value "2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " A numerical value when result is made up from sequential approximation 
 of a single value.  Each member of the data set has equal weight.

 A 'non-value' is supported that causes result from an entry to be 
 (optionally) ignored. Handling of 'bad' values (eg '******') is controlable."
      end

      attribute 402863 "VALUE"
	class_attribute const_attribute public explicit_type "uint"
	init_value "3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " A numerical value that is to be averaged across the data set 
 that is weghted by a simulations total number of steps.

 A 'non-value' is supported that causes result from an entry to 
 be (optionally) ignored. Handling of 'bad' values (eg '******') is controlable."
      end

      attribute 1059375 "CSERIAL"
	class_attribute const_attribute public explicit_type "uint"
	init_value "4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " A numerical value when result is made up from sequential approximation 
 of a single value.  Each member of the data set has equal weight adjusted
 by relative concentration.

 A 'non-value' is supported that causes result from an entry to be 
 (optionally) ignored. Handling of 'bad' values (eg '******') is controlable."
      end

      attribute 1059247 "CVALUE"
	class_attribute const_attribute public explicit_type "uint"
	init_value "5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " A numerical value that is to be averaged across the data set 
 that is weghted by a simulations total number of steps and
 by relative concentration.

 A 'non-value' is supported that causes result from an entry to 
 be (optionally) ignored. Handling of 'bad' values (eg '******') is controlable."
      end

      attribute 1079215 "TSERIAL"
	class_attribute const_attribute public explicit_type "uint"
	init_value "6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " A numerical value when each row of the output file represents a particular
 iteration of the simulation.  Each member of the data row therefore has 
 equal weight.

 The difficulty with this type of data set is that the number of rows may be
 different."
      end

      attribute 402735 "LABEL"
	class_attribute const_attribute public explicit_type "uint"
	init_value "7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The field contains a string label that must match across the data set.

The first entry is assumed correct and all others are checked against 
it.  The equality across the data set is exact (ignoring leading/trailing 
white space)"
      end

      attribute 402607 "KEY"
	class_attribute const_attribute public explicit_type "uint"
	init_value "8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Fields of this type contain a number that should match across the data set. 

 That all values match is always checked, with equality across the data set optionally 
 being 'fuzzy'."
      end

      attribute 1065903 "SUM"
	class_attribute public explicit_type ""
	init_value "9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  Value indicating that the result is some type of sum."
      end

      attribute 1058863 "label"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The name of the field/column"
      end

      attribute 1058991 "unit"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The unit of the field/column"
      end

      attribute 1059119 "type"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  One of the FieldType enum constants that define how to interpret the field value."
      end

      operation 1480751 "__init__"
	public explicit_return_type ""
	nparams 2
	  param inout name "self" explicit_type ""
	  param in name "alist" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
      end
    end

    class 350895 "FileDefinition"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "  Describe the contents of a given output file

 Objects of this class map field descriptors to elements in an array
 generated by splitting a line.  The default is to split a line on
 blanks, but use of the python 'csv' module or a regular expression
 should be supported.  The field descriptors indicate how the field
 should be manipulated when generating a merged result (see the
 field-type enumeration).  Example actions can be to ignore, match,
average and weight-average the field.

+ More +

The ionch produces files containing sets of related information.
The filenames contain a key part identifying the data type, a key
part identifying the species or salts it represents and a numerical
suffix for the run number.

A record object represents a single data type with entries for
each specie or salt (if relevant) key.  Accessing the item for each
key returns a cursor object that can be used to iterate over the
rows of data for the given specie/salt key and data type.  Each row
from the cursor will contain the weighted average of dependent data
from each run.
"
      classrelation 933039 // field_list (<directional composition>)
	relation 903727 *-->
	  stereotype "list"
	  a role_name "field_list" multiplicity "*" private
	    comment "List of fields for a record

invariant: non-empty list of field objects"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 933039 // field_list (<directional composition>)
	  b parent class_ref 351663 // FieldType
      end

      attribute 403375 "file_definition_dict"
	class_attribute public type class_ref 350895 // FileDefinition
	multiplicity "*"
	init_value "dict()"
	stereotype "list"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " A dictionary of file definitions"
      end

      attribute 404527 "filename_format"
	const_attribute public explicit_type "short"
	init_value "outfmt"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "regular expression for defining the output filename

invariant: outformat_ is a non-null string"
      end

      attribute 835503 "is_serial"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  Is the file data set a series?"
      end

      attribute 404399 "key"
	const_attribute public explicit_type "string"
	init_value "akey"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " A key string that matches the first part of names of files with this data
 definition
 
 invariant: non-empty string"
      end

      attribute 404015 "subkeys"
	const_attribute public explicit_type "int"
	init_value "asubkey"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The number of subkey components. Generally 1 or 2."
      end

      operation 518575 "check_invariant"
	public explicit_return_type ""
	nparams 1
	  param in name "self" type class_ref 350895 // FileDefinition
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Check this object conforms to its invariants"
      end

      operation 488879 "generate_dictionary"
	class_operation public explicit_return_type "void"
	nparams 0
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "Make a list of record objects that map file name REs to field lists."
      end

      operation 490543 "__init__"
	public explicit_return_type ""
	nparams 5
	  param in name "self" explicit_type ""
	  param in name "akey" explicit_type "string"
	  param in name "asubkey" explicit_type "int"
	  param in name "outfmt" explicit_type "string"
	  param in name "fieldlist" explicit_type "uint"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}, ${p3}${v3}, ${p4}${v4}${)}:
${docstring}super(${class}, ${p0}).__init__()
${body}
"
	
	comment "Generate an object to store information about a file type."
      end

      operation 1487279 "labels"
	public explicit_return_type ""
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Get a list of column labels"
      end

      operation 518447 "__len__"
	public explicit_return_type ""
	nparams 1
	  param in name "self" type class_ref 350895 // FileDefinition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  The number of fields in each row"
      end
    end

    class 852783 "Selectivity"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " This class calculates the selectivity between ions in a set of ResultSet objects.

 Usage:
  Construct a selectivity object, giving the two ions you think are present in the results
  and the z-coordinate range you want to use
'''  selobj = Selectivity(\"Ion1\",\"Ion2\")
'''  selobj.set_occupancy_range()

   You can pass the ResultSet objects piecewise using
'''   selobj.add_result_set (rs)
  to caclulate the selectivity using simple occupancy or if you want to calculate the 
  selectivity using slope conductance instead
'''   selobj.add_result_slope_conductance (rs)
  After adding all the result sets you can compute the selectivity
'''   selobj.compute()

  Alternately you can pass the ResultSet objects in a list-like object.  This will
  calculate the selectivity based on the simple occupancy
'''   self.compute(rslist)

  You can reuse a selectivity object to process other results by
'''  selobj.reset()
  This resets the occupancies, fits and selectivity.

  You can access the current occupancy data set using
'''  selobj.get_occupancies()
  This is different to accessing occupancies directly as the returned array is sorted
  by the log ratio column.  Once the selectivity has been calculated using 'compute' 
  you can get the predicted values for any log ratio using
'''  selobj.predicted(lr)
  or get the input data set as for 'get_occupancies' with two extra columns containing
  the corresponding predicted values using
'''  selobj.get_predicted()
  These methods are intended to make it simpler to generate data sets for plotting.

  To get the dose response data and fitting statistics you access 'fits'.  This
  is a dictionary with the ion names as keys.  The value is a list-like object
  with the first item being the fitted parameters.  For details of the subsequent
  items refer to 'scipy.optimize.leastsq' as the list is the return value of that
  method."
      attribute 1045551 "fits"
	private explicit_type ""
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  Dictionary of estimated parameters"
      end

      attribute 1045295 "ion_names"
	private explicit_type "tuple"
	init_value "( ionone, iontwo )"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The names of the ions to calculate the selectivity for"
      end

      attribute 1072687 "ion_subnames"
	private explicit_type "{}"
	init_value "{}"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "If a specie is made up from multiple subspecies, the object needs to know the subspecies.  This
dictionary must consist of the summed ion name as key and its subspecies as a list-like value."
      end

      attribute 1045423 "occupancies"
	private explicit_type ""
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The results to analyze"
      end

      attribute 1045679 "selectivity"
	private explicit_type ""
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      attribute 1052207 "zmin"
	private explicit_type "float"
	init_value "-2.5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      attribute 1052335 "zmax"
	private explicit_type "float"
	init_value "2.5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      operation 1466543 "__init__"
	public explicit_return_type ""
	nparams 3
	  param inout name "self" explicit_type ""
	  param in name "ionone" explicit_type "string"
	  param in name "iontwo" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}:
${docstring}${body}
"
	
	comment " Create a selectivity processor object. The ionone and iontwo parameters must match the 
 names of ions in the results sets that will be passed to the object."
      end

      operation 1466799 "add_result_set"
	public explicit_return_type ""
	nparams 2
	  param in name "self" explicit_type ""
	  param in name "aresult" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}self._add_result_set(${p1}, lambda x: x['conc'].mean())
"
	
	comment "  Add the occupancy data from the given result set into the
 current working set."
      end

      operation 1500463 "_add_result_set"
	public explicit_return_type ""
	nparams 3
	  param in name "self" explicit_type ""
	  param in name "aresult" explicit_type ""
	  param in name "processor" explicit_type ""
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}:
${docstring}${body}
"
	
      end

      operation 1466927 "add_result_slope_conductance"
	public explicit_return_type ""
	nparams 2
	  param in name "self" explicit_type ""
	  param in name "aresult" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "  Get the occupancy data from the given result set as the slope conductance"
      end

      operation 1474223 "check_ions_to_use"
	public explicit_return_type ""
	nparams 2
	  param in name "self" explicit_type ""
	  param in name "aresult" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "  (Private) Verify that the object's ions are in the aresult data set."
      end

      operation 1466671 "compute"
	public explicit_return_type ""
	nparams 2
	  param in name "self" explicit_type ""
	  param in name "results" explicit_type ""
	    defaultvalue "None"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "  Calculate the selectivity from the given results objects.  If the results parameter is None (default)
  then all the sets of results should previously have been added to the object via 'add_result_set'.

  REQUIRE: more than two valid occupancy data sets."
      end

      operation 1467567 "get_occupancies"
	public explicit_return_type ""
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the occupancy values as a sorted array with columns 'logratio, occ_ion1, occ_ion2'

 Will return None if no occupancy data has been added"
      end

      operation 1467439 "get_predicted"
	public explicit_return_type ""
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the occupancy values that went into the result along with predicted results. 
 Column order is 'logratio, occ_ion1, occ_ion2, pred_ion1, pred_ion2'

 Will return None if no occupancy data has been added or compute has not been
 called"
      end

      operation 1467183 "predicted"
	public explicit_return_type ""
	nparams 2
	  param in name "self" explicit_type ""
	  param in name "logratio" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment " Compute predicted values of occupancy for the given logratio.

 Return None if compute has not been called"
      end

      operation 1467055 "reset"
	public explicit_return_type ""
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Reset the collected occupancy data to there initial values."
      end

      operation 1474095 "set_occupancy_range"
	public explicit_return_type ""
	nparams 3
	  param in name "self" explicit_type ""
	  param in name "amin" explicit_type "float"
	  param in name "amax" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}:
${docstring}${body}
"
	
	comment "  Set the range over which to look for results.  This function can only be called
  when no result sets have been added to the object."
      end
    end
  end

  classview 341423 "fileinp"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 203311 // merge
    comment " Module to handle managing access to the 'channel' input file
 format."
    classdiagram 392751 "input file"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 684207 "InputFileReader"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " This class is the base class for reading files with the structure
 of the 'channel' input file format.  It can validate the structure
 of such files but is not required to validate the contents.

 What it understands:

 + The file is a free-form line-oriented format composed of sections
   containing name/value content pairs.

  + Free-form here means that the content can appear in any order
    and multiple whitespace is not important.

  + Line-oriented here means that the contents of a single line are
    interpreted together rather than interpreting the file word-by-word.

 + Comments begin with the character '#' and continue to the end
   of the current line.

 + White space is used to separate words.  Quotes are not treated
   specially.  For example \"hello world\" is treated as [\"hello]
   and [world\"] and not [\"hello world\"].

 + Sections begin when any non-special word is encountered outside
   a section.  If there is more than one word on this line, the
   other words are taken as options to the section.

  + Sections can not be nested.

  + Sections end with the word \"end\" as the first word on a line.

  + Within a section a line either begins with the word \"end\", \"n\"
   or is split at the end of the first word into a name/value pair
   of strings.  Note that ignoring quotes means ``\"hello world\"``
   is treated as name = [\"hello] and value = [world\"] if it
   appears as the first element on a line.  However, ``greeting \"
   Hello World \"`` on a line is treated as name = [greeting] and
   value = [\" Hello World \"] with the quotes retained.  Compare
   this to ``greeting Hello World   # note whitespace before comment``
   where we get value = [Hello World].

  + A line in a section with the name \"n\" must be followed by an
   integer.  The integer indicates the number of non-empty lines,
   after removing comments and whitespace, that are combined into
   a list as the value.

 + The \"include\" label outside any section is used to include the
   contents of other files.  Multiple nesting is allowed up to a
   set limit.

 + The \"fileversion\" label outside any section is used to identify
   the file structure and content version of the input file.  It
   is optional and assumed to be whatever the current 'channel'
   program uses.

 + The labels \"end\", \"fileversion\", \"include\" and \"n\" are not special
   keywords.  They only have special meaning when used in the
   specific ways listed above.

 What it does:

 + Objects of this class return the content as a series of pairs
   on calls to the ``next`` operation.

 + Whether this pair starts a section or is within a section
   depends on the value of ``in_section``.  

 + The class knows that \"fileversion\" and \"include\" do not start
   a section if ``in_section`` is False.

 + The \"end\" label to end a section raises a StopIteration 
   exception and no pair is returned.

 + File inclusion via \"include\" is completely transparent. 
   Monitoring the value of include_depth is the only way to
   see if the current content is from a included file. The
   top-most file is include depth 1.

 Example usage:

  reader = fileinp()
  reader.open (filename)
  for outer in reader:
    # use str for second element as it may be None.
    # it is an error if the first element is None.
    print \"OUTER: [\"+outer[0]+\"] = [\"+str(outer[1])+\"]\"
    if reader.in_section:
      for inner in reader:
        print \"INNER: [\"+inner[0]+\"] = [\"+str(inner[1])+\"]\"
 
"
      attribute 849071 "max_depth"
	class_attribute const_attribute public explicit_type "int"
	init_value "16"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The maximum allowed size of the include stack"
      end

      attribute 849327 "base"
	private explicit_type "string"
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The base directory"
      end

      attribute 848943 "file_stack"
	private explicit_type "istream"
	multiplicity "*"
	stereotype "list"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
	comment "  The stack of included files"
      end

      attribute 849199 "in_section"
	private explicit_type "bool"
	init_value "False"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  Are we in a section?"
      end

      operation 1188783 "in_section"
	public explicit_return_type "bool"
	nparams 0
	
	
	
	
	
	comment "  Are we currently within a section?"
      end

      operation 1188911 "include_depth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return len(self.file_stack)
"
	
	comment "  The number of include levels of the current input source.  The
  initial file is at level 1."
      end

      operation 1189039 "__iter__"
	public return_type class_ref 684207 // InputFileReader
	nparams 0
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return self
"
	
	comment "  Return iteration object"
      end

      operation 1188655 "next"
	public explicit_return_type "std::pair< string, any >"
	nparams 0
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Get the next name/value.  

  A StopIteration exception is raised at the end of each section and at the end of the
  top level input file."
      end

      operation 1188527 "open"
	public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "string"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1189167 "_strip"
	public explicit_return_type "string"
	nparams 1
	  param in name "line" explicit_type "string"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Remove any comments and whitespace.  Note 
  that quotes are ignored so '#' are always seen."
      end

      operation 1189295 "_split"
	public explicit_return_type "string"
	nparams 1
	  param in name "line" explicit_type "string"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Split line into a name-value pair"
      end

      operation 1189935 "use"
	public explicit_return_type "void"
	nparams 2
	  param in name "ais" explicit_type "istream"
	  param in name "basedir" explicit_type "string"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "  Alternative to 'open' that takes the top-level file from the given stream.  If
  any files are included then the basedir must be given unless it is the current
  directory."
      end
    end

    class 684463 "Input2XyzTranslater"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      attribute 849455 "atom_map"
	private explicit_type "string"
	multiplicity "*"
	stereotype "map"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
	comment "  Map of channel 2-letter codes to standard atom abbreviation.  Entries
  are only required if the 2-letter code is different to the standard."
      end

      attribute 849583 "use_centre"
	private explicit_type "bool"
	init_value "False"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  Whether to output the centre-points of mobile ions or the ions
 themselves"
      end

      operation 1189807 "main"
	public explicit_return_type "void"
	nparams 2
	  param in name "argc" explicit_type "int"
	  param in name "argv" explicit_type "char"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Process the command line and perform the requested actions"
      end

      operation 1189679 "process"
	public explicit_return_type "void"
	nparams 3
	  param in name "inputfile" explicit_type "string"
	  param in name "outputfile" explicit_type "string"
	  param in name "basedir" explicit_type "string"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}, ${p2}${v2}${)}:
${docstring}${body}
"
	
	comment "  Convert data from the given input file into an XYZ file"
      end
    end
  end

  classview 334895 "simulation dictionary"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 203311 // merge
    comment "  Module for handling the IonChannel project 'channel' log files. "
    classdiagram 386223 "filelog"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 832943 "ResultSet"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}(dict):
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " A set of data tables that represent the results of the simulation.

 This class is derived from the dict type"
      classrelation 926255 // _base (<directional composition>)
	relation 897071 *-->
	  a role_name "_base" multiplicity "1" private
	    comment "  The core simulation information used to identify the simulation's datasets.  This is
  an object of type fileooo. "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}(0)
"
	    classrelation_ref 926255 // _base (<directional composition>)
	  b parent class_ref 832815 // SummaryReader
      end

      operation 1437615 "available"
	public explicit_return_type "bool"
	nparams 1
	  param in name "key" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Does this simulation have the requested dataset.

  The key is either a string or tuple of strings that make up a key. The
  key directly translates to the filenames used, with the filename stem 
  being the components of the key separated by '-'.  This stem is then
  followed by the run number and optionally 'dat'."
      end

      operation 1446063 "concentration"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return self._base.${name}
"
	
	comment " Get the simulation UUID"
      end

      operation 1445295 "digest"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return str(self._base)
"
	
	comment " Key parameters of the simulation"
      end

      operation 1445807 "directory"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return self._base.${name}
"
	
	comment " Get the simulation UUID"
      end

      operation 1437743 "__getitem__"
	public explicit_return_type ""
	nparams 1
	  param in name "key" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Get the dataset.

  This throws an exception if the dataset is not available.  It reads the dataset
  into the cache if it is not already present."
      end

      operation 1444527 "__init__"
	public explicit_return_type ""
	nparams 2
	  param inout name "self" explicit_type ""
	  param in name "filename" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}, *args, **kwargs${)}:
${docstring}super(${class}, ${p0}).__init__(self, *args, **kwargs)
${body}
"
	
	comment "  Create a simulation dictionary.  The filename must be present and be set to the
  */res/o.XXX file for the simulation."
      end

      operation 1445039 "ionic_strength"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return self._base.${name}
"
	
	comment " Get the simulation UUID"
      end

      operation 1445423 "ratio"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return self._base.${name}
"
	
	comment " Get the simulation UUID"
      end

      operation 1437871 "_read_datafile"
	public explicit_return_type ""
	nparams 1
	  param in name "filename" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Get the dataset contained in the given file."
      end

      operation 1445167 "report"
	public explicit_return_type "string"
	nparams 2
	  param in name "self" explicit_type ""
	  param in name "aos" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}return ${p0}._base.${name}(${p1})
"
	
	comment " Get the simulation UUID"
      end

      operation 1444783 "run"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return self._base.${name}
"
	
	comment " Get the simulation UUID"
      end

      operation 1444911 "steps"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return self._base.${name}
"
	
	comment " Get the simulation UUID"
      end

      operation 1460015 "temperature"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return self._base.${name}
"
	
	comment " Get the simulation UUID"
      end

      operation 1445935 "trys_per_step"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return self._base.${name}
"
	
	comment " Get the simulation UUID"
      end

      operation 1444655 "uuid"
	public explicit_return_type "string"
	nparams 1
	  param in name "self" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}return self._base.${name}
"
	
	comment " Get the simulation UUID"
      end
    end

    class 839599 "ResultSetMerger"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "  Class that combines several related simulations into a single simulation result set."
      classrelation 926511 // <generalisation>
	relation 897199 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 926511 // <generalisation>
	  b parent class_ref 832943 // ResultSet
      end

      attribute 1025327 "solute_ions"
	private explicit_type ""
	init_value "list(SummaryReader.ion_names)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  List of ions that are subject to concentration based scaling."
      end

      attribute 1025455 "structural_ions"
	private explicit_type ""
	init_value "list()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  List of ions that do not need concentration based scaling."
      end

      operation 1446447 "__init__"
	public explicit_return_type ""
	nparams 4
	  param inout name "self" explicit_type ""
	  param in name "filename" explicit_type ""
	  param in name "*args" explicit_type ""
	  param in name "**kwargs" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}, ${p2}${v2}, ${p3}${v3}${)}:
${docstring}super(${class}, ${p0}).__init__(${p1}, ${p2}, ${p3})
${body}
"
	
      end

      operation 1445679 "_write_summary"
	public explicit_return_type "void"
	nparams 2
	  param in name "self" explicit_type ""
	  param in name "datalist" explicit_type "any"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "  Create a fake 'res/o.XXX' log file for the merged documents based on
  their weighted results."
      end

      operation 1446575 "merge"
	public explicit_return_type "void"
	nparams 1
	  param in name "self" type class_ref 839599 // ResultSetMerger
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Builds a set of merged data from the given digest list."
      end
    end

    class 832815 "SummaryReader"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " This class processes a 'o.XXX' file to obtain the number of steps
 and the other information not available elsewhere.
"
      attribute 834351 "concentration"
	private explicit_type "dict"
	init_value "{}"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The dictionary of ion codenames to concentrations."
      end

      attribute 1032239 "digest_columns"
	class_attribute private explicit_type ""
	init_value "( \"Run\",\"Trials\", \"Ratio\", \"UUID\", \"RootPath\", \"Temperature\", \"IonicStr\", \"Ions\" )
"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The labels for the digest columns"
      end

      attribute 834991 "directory"
	private explicit_type "short"
	init_value "None"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The name of the directroy the log file is in"
      end

      attribute 833967 "ion_names"
	class_attribute public explicit_type "string"
	multiplicity "*"
	init_value "( \"NN\", \"KK\", \"CC\", \"N1\", \"K1\", \"C1\", \"Cl\", \"Ca\", \"Ka\", \"Li\", \"Na\", \"K2\", \"K3\", \"N2\", \"N3\", \"C0\", \"C2\", \"C3\", \"C4\")"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The list of particle code names to recognise"
      end

      attribute 834479 "ionic_strength"
	private explicit_type "double"
	init_value "0.0"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The ionic strength"
      end

      attribute 835119 "ratio"
	private explicit_type "double"
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The ratio of sodium to the other cation concentration"
      end

      attribute 833583 "run"
	const_attribute public explicit_type "long"
	init_value "run"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The run number of this log file"
      end

      attribute 834223 "steps"
	public explicit_type "long"
	init_value "0"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The number of MC 'steps' at the last checkpoint"
      end

      attribute 1038767 "temperature"
	private explicit_type "float"
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The temperature of the simulation"
      end

      attribute 834095 "trys_per_step"
	public explicit_type "long"
	init_value "1"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The number of inner MC trials per MC 'step'"
      end

      attribute 1018031 "uuid"
	private explicit_type "string"
	init_value "\"\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "Uinque identifier for the simulation"
      end

      operation 1181999 "__cmp__"
	public explicit_return_type "int"
	nparams 1
	  param in name "other" type class_ref 832815 // SummaryReader
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self,${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1437487 "get_values"
	public explicit_return_type "tuple"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "  Return the object's data as a tuple"
      end

      operation 1437359 "__init__"
	public explicit_return_type ""
	nparams 2
	  param inout name "self" explicit_type ""
	  param in name "run" explicit_type "uint"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "  Initalise a log record"
      end

      operation 1437231 "process"
	public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "string"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1437103 "report"
	public explicit_return_type "void"
	nparams 1
	  param in name "aos" explicit_type "ostream"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Make a summary of the simulation"
      end

      operation 1436975 "set_values"
	public explicit_return_type "void"
	nparams 1
	  param in name "valuelist" explicit_type "any"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Set the object's data from a tuple as generated by get_value or similar"
      end

      operation 1436847 "set_from_string"
	public explicit_return_type "void"
	nparams 1
	  param in name "line" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Interpret the line as if it was generated by __str__ method"
      end

      operation 1436719 "__str__"
	public explicit_return_type "string"
	nparams 0
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "  Outputs a digest of the simulation:

  Fields are: 'run' '[ion1]' ... '[ionN]' 'trials' 'ionic_str' '[M1]/[M2]' 'UUID' 'root_path'
 "
      end

      operation 1453487 "write_digest_columns"
	class_operation public explicit_return_type ""
	nparams 1
	  param in name "aos" explicit_type "ostream"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Outputs column labels for the digest, mainly aligned with the digest fields
 "
      end

      operation 1733679 "commandline_add"
	class_operation public explicit_return_type ""
	nparams 1
	  param in name "parser" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Add class specific actions to command line parser"
      end

      operation 1733807 "commandline_action"
	class_operation public explicit_return_type ""
	nparams 1
	  param in name "result" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Add class specific actions to command line parser"
      end
    end

    class 677679 "LogfileReader"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " This class processes a log file to obtain the number of steps.  In this
 version this class has a significant penalty over using it base class. It
 remains in the library as a potential starting point for parseing the 
 log file for run progress data.
"
      classrelation 919727 // <generalisation>
	relation 890543 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 919727 // <generalisation>
	  b parent class_ref 832815 // SummaryReader
      end

      attribute 834863 "filename"
	private explicit_type "string"
	init_value "None"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The name of the log file"
      end

      attribute 833839 "log_regex"
	public explicit_type "re"
	init_value "re.compile (\"log[.](\" + str(run) + \"[.][0-9]*[.]|[0-9]*[.]\" + str(run) + \"[.])txt$\")"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  A regular expression for matching log filenames with"
      end

      operation 1180591 "__init__"
	public explicit_return_type ""
	nparams 2
	  param inout name "self" explicit_type ""
	  param in name "run" explicit_type "uint"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}super(${class}, ${p0}).__init__(${p1})
${body}
"
	
	comment "  Initalise a log record"
      end

      operation 1181487 "process"
	public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "string"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Process the log file for the required data values"
      end
    end
  end

  classview 334639 "stats"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 203311 // merge
    classdiagram 385839 "stats module"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 677295 "Running"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "  Reduce the data set pushed into the object to a mean and a variance"
      attribute 833199 "count"
	public explicit_type "long"
	init_value "None"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The current count"
      end

      attribute 833455 "maximum"
	public explicit_type "double"
	init_value "None"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The sample set's maximum value"
      end

      attribute 832943 "mean"
	public explicit_type "double"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The current mean"
      end

      attribute 833327 "minimum"
	public explicit_type "double"
	init_value "None"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The sample set's minimum value"
      end

      attribute 833071 "variance"
	public explicit_type "double"
	init_value "None"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The current variance"
      end

      operation 1179311 "clear"
	public explicit_return_type "void"
	nparams 0
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "  Reset the internal state"
      end

      operation 1180463 "push"
	public explicit_return_type "void"
	nparams 2
	  param in name "number" explicit_type "double"
	  param in name "weight" explicit_type "double"
	    defaultvalue "1"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "  Extend two parameter push to allow items to have an associated weight"
      end

      operation 1180335 "__str__"
	public explicit_return_type "string"
	nparams 0
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end
    end
  end

  classview 222511 "post-processing"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 203311 // merge
    classdiagram 234287 "merge"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 351535 "MergeApplication"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class manages the merging of a set of simulations started 
with the same set of simulation variables except for possibly
different random number seeds. The set of results from one 
simulation are identified by a run number. 

The output data of the experiment consists of the statistical
average of each simulation run.  The role of this class is to
obtain and output these averaged data.  Note that some of the 
merged results will be a weighted average from each run, where
the weight is determined from the number of iterations a run
has performed. The weighting used is the square root of the 
iteration count.

Simulations produce several types of data.  This might be a
single multiple dimensional values, either as an average or
separate values from each iteration point.  Each unique independent
value (and its associated dependent variables) are identified
by a unique ID key.  These keys are arbitrary and serve only
to distinguish between data sets.


* Manager class

RESPONSIBILITIES
* Generate list of runs and associated run weights
* loop over data-sets averaging each data-set found.
"
      attribute 835375 "target_ionic_strength"
	private explicit_type "double"
	init_value "None"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  The target ionic concentration used to normalise some data files."
      end

      attribute 835887 "merge_regex"
	private explicit_type "regex"
	init_value "re.compile (\"merge[.](?P<run>\\d\\d\\d)\")"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  Regex to match standard merge filename"
      end

      operation 489775 "main"
	public explicit_return_type "void"
	nparams 2
	  param in name "argc" explicit_type "int"
	  param in name "argv" explicit_type "char"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Process the command line and perform the requested actions"
      end

      operation 489519 "process"
	public explicit_return_type "void"
	nparams 2
	  param in name "self" type class_ref 351535 // MergeApplication
	  param in name "path" explicit_type "string"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "Loop over the data sets, generating merged results for each one."
      end
    end

    class 846255 "DigestApplication"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class manages the merging of a set of simulations started 
with the same set of simulation variables except for possibly
different random number seeds. The set of results from one 
simulation are identified by a run number. 

The output data of the experiment consists of the statistical
average of each simulation run.  The role of this class is to
obtain and output these averaged data.  Note that some of the 
merged results will be a weighted average from each run, where
the weight is determined from the number of iterations a run
has performed. The weighting used is the square root of the 
iteration count.

Simulations produce several types of data.  This might be a
single multiple dimensional values, either as an average or
separate values from each iteration point.  Each unique independent
value (and its associated dependent variables) are identified
by a unique ID key.  These keys are arbitrary and serve only
to distinguish between data sets.


* Manager class

RESPONSIBILITIES
* Generate list of runs and associated run weights
* loop over data-sets averaging each data-set found.
"
      attribute 1032111 "summary_regex"
	private explicit_type "regex"
	init_value "re.compile (\"o[.](?P<run>\\d\\d\\d)\")"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  Regex to match standard summary filename"
      end

      operation 1453231 "main"
	public explicit_return_type "void"
	nparams 2
	  param in name "argc" explicit_type "int"
	  param in name "argv" explicit_type "char"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Process the command line and perform the requested actions"
      end
    end

    class 859311 "MergeSubspeciesApplication"
      visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class manages the merging of results for subspecies into
a common specie set. It adds new data sets to an simulation.

Simulations produce several types of data. 


* Manager class

RESPONSIBILITIES
* Merge data-sets from subspecies.
"
      attribute 1197103 "merge_ions"
	private explicit_type ""
	init_value "[( 'KK', ( 'Ka', 'K1' )), ( 'NN', ( 'Na', 'N1' ))]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The ions to merge (can be specified on command line)"
      end

      attribute 1072559 "source_regex"
	private explicit_type "regex"
	init_value "re.compile (\"o[.](?P<run>\\d\\d\\d)\")"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  Regex to match standard simulation description filename"
      end

      operation 1493807 "main"
	public explicit_return_type "void"
	nparams 2
	  param in name "argc" explicit_type "int"
	  param in name "argv" explicit_type "char"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Process the command line and perform the requested actions"
      end

      operation 1493935 "process"
	public explicit_return_type "void"
	nparams 2
	  param in name "self" type class_ref 859311 // MergeSubspeciesApplication
	  param in name "path" explicit_type "string"
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "Loop over the data sets, generating merged results for each one.

@param path: The 'o.XXX' simulation output file."
      end
    end

    class 966447 "ExtractSelectivity"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Script to manage the process of extracting the selectivity
 information from sets of simulations.

 This is script is a work in progress that might need to be adjusted
 for individual cases.

 USAGE: The arguments to the program are the range, two ion names and a digest file

  <script> 2.5 NN KK thedigest.txt

 All information messages are printed to stderr, output is to stdout

"
      operation 1740335 "main"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Process the command line and perform the requested actions"
      end
    end
  end

  deploymentview 203311 "merge"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 551471 "digest"
      stereotype "source"
      python_src "${comment}
import re
${import}
${definition}


if __name__ == '__main__':

    DigestApplication().main ()

    
"
      associated_classes
	class_ref 846255 // DigestApplication
      end
      comment " VERSION: $svn:id$

 (c) September 2012, Justin Finnerty and German Research School for
 Simulation Science GmbH

 INTENT

 The purpose of this script is to create a digest of simulations in the
 given directory, summary file or current directory.  The form of the
 digest output by this script is that required for creating merge files.

 The columns of the digest are:
  'run' '[ion1]' ... '[ionN]' 'trials' 'ionic_str' '[M1]/[M2]' 'UUID' 'root_path'

 COMMAND LINE

  <program> [-i filename1 filename2 filename3]

  -i Set of input files, if filename is a directory it is searched
       for `o.XXX` like files.  This search is also used on the
       current directory when no files are specified.

"
    end

    artifact 445487 "filedata"
      stereotype "source"
      python_src "#!/usr/bin/python2.7
${comment}
${import}

import re
${definition}
"
      associated_classes
	class_ref 351663 // FieldType
	class_ref 350895 // FileDefinition
      end
      comment " VERSION: $svn:id$

 (c) April 2012, Justin Finnerty and German Research School for
 Simulation Science GmbH

  Classes in this file are used to interpret data oriented files.
"
    end

    artifact 452271 "fileinp"
      stereotype "source"
      python_src "${comment}
${import}
${definition}


if __name__ == \"__main__\":

  import sys
  reader = fileinp()
  reader.open(sys.argv[1])

  for outer in reader:
    print \"OUTER: [\"+outer[0]+\"] = [\"+str(outer[1])+\"]\"
    if reader.in_section:
      for inner in reader:
        print \"INNER: [\"+inner[0]+\"] = [\"+str(inner[1])+\"]\"

"
      associated_classes
	class_ref 684207 // InputFileReader
      end
    end

    artifact 445743 "filelog"
      stereotype "source"
      python_src "${comment}
import os, re
${import}
${definition}
"
      associated_classes
	class_ref 677679 // LogfileReader
      end
      comment " VERSION: $svn:id$

 (c) April 2012, Justin Finnerty and German Research School for
 Simulation Science GmbH

 The purpose of this script is to extract concentration and simulation
 trial information from a set of log files.


"
    end

    artifact 452399 "inp2xyz"
      stereotype "source"
      python_src "${comment}
${import}
${definition}


if __name__ == \"__main__\":
  Input2XyzTranslater().main()
"
      associated_classes
	class_ref 684463 // Input2XyzTranslater
      end
    end

    artifact 294575 "merge"
      stereotype "source"
      python_src "${comment}
import re
${import}
${definition}


if __name__ == '__main__':

    MergeApplication().main ()

    
"
      associated_classes
	class_ref 351535 // MergeApplication
      end
      comment " VERSION: $svn:id$

 (c) April 2012, Justin Finnerty and German Research School for
 Simulation Science GmbH

 INTENT

 The purpose of this script is to merge calculations performed with
 the same initial parameters.  This version of the program requires
 the user to construct merge files containing the definitions of
 the simulations to merge.  These merge definition files are created
 from the output of the filelog program.

 The reason for switching to python is to allow easier adaptation
 for changing result file forms

 DATA SET TO MERGE

 The script accepts an input file containing the filenames and data
 derived from the simulation log file for each simulation data set
 to merge.

 DATA FILE WEIGHT

 The weighting of the various data sets is based on information
 from the merge input file and the type of data begin merged

 OUTPUT FILE

 The current directory is used to store the merged output files.

 COMMAND LINE

  <program> [-s ionicStr] [-i filename1 filename2 filename3]

  -s Scale concentration/density data to the given bulk ionic
     strength.

  -i Set of input files, if filename is a directory it is serached
       for `merge.000` like files.  This search is also used on the
       current directory when no files are specified.

"
    end

    artifact 544943 "simdict"
      stereotype "source"
      python_src "${comment}
${import}
class MissingData(ValueError):
    pass

${definition}"
      associated_classes
	class_ref 832815 // SummaryReader
	class_ref 832943 // ResultSet
	class_ref 839599 // ResultSetMerger
      end
      comment " VERSION: $svn:id$

 (c) September 2012, Justin Finnerty and German Research School for
 Simulation Science GmbH

 The purpose of this script is to provide a dictionary like interface
 to simulation result set."
    end

    artifact 445615 "statutil"
      stereotype "source"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 677295 // Running
      end
      comment " VERSION: $svn:id$

 (c) April 2012, Justin Finnerty and German Research School for
 Simulation Science GmbH

  Classes in this module reduce a set of data using a statistics process."
    end

    artifact 557999 "simproc"
      stereotype "source"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 852783 // Selectivity
      end
    end

    artifact 564527 "mergesubspecie"
      stereotype "source"
      python_src "${comment}
${import}
import re
import simdict, filedata
${definition}


if __name__ == '__main__':

    MergeSubspeciesApplication().main ()

    
"
      associated_classes
	class_ref 859311 // MergeSubspeciesApplication
      end
      comment " VERSION: $svn:id$

 (c) April 2012, Justin Finnerty and German Research School for
 Simulation Science GmbH

 INTENT

 The purpose of this script is to merge subspecie datasets.

 DATA SETS TO MERGE

 ::TODO::

 COMMAND LINE

  <program> [-i filename1 filename2 filename3]

  -i Set of input files, if filename is a directory it is serached
       for `merge.000` like files.  This search is also used on the
       current directory when no files are specified.

"
    end

    artifact 571055 "extract_selectivity"
      stereotype "source"
      python_src "${comment}
${import}
${definition}

if __name__ == \"__main__\":

    ExtractSelectivity().main ()"
      associated_classes
	class_ref 966447 // ExtractSelectivity
      end
      comment " VERSION: $svn:id$

 (c) April 2014, Justin Finnerty and German Research School for
 Simulation Science GmbH

 INTENT

 The purpose of this script is to extract channel occupancy and calculate
 selectviity.

 DATA SETS TO MERGE

 ::TODO::

 COMMAND LINE

  <program> [-h]

  -h Generate help text along with latest option summary.

"
    end
  end
end
