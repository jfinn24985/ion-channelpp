format 75
"evaluator test" // evaluator::evaluator test
  revision 83
  modified_by 48 "finnerty"
  owner 48 "finnerty"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "evaluator/evaluator_test"
  cpp_src_dir "evaluator/evaluator_test"
  cpp_namespace "evaluator"
  classview 141616 "Evaluator test cases"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 141488 // evaluator unit test 
    classdiagram 167600 "Evaluator test cases"
      draw_all_relations default hide_attributes yes hide_operations yes hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 237104 "patch_matrix_fixture"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "  Model of induced_charge to tes

 read/write inverted A matrix and patches.
 generate patches from geometry"
      attribute 260272 "alfa_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Scale factor = kT . echg / (4 * pi * eps0 * angstrom  * epsw )"
      end

      attribute 280368 "dxf_"
	private explicit_type "double"
	init_value "4.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      attribute 280240 "dxw_"
	private explicit_type "double"
	init_value "4.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      attribute 261552 "epsw_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " permittivity of water/media"
      end

      attribute 261680 "epspr_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " permittivity of protein"
      end

      attribute 280624 "expected_size_"
	private explicit_type "size_t"
	init_value "620"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The expected number of tiles in grid from the parameters
 defined in this class."
      end

      attribute 280496 "nsub_"
	private explicit_type "size_t"
	init_value "10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      attribute 260400 "zl1_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Pore half length and centre for vestibule arc"
      end

      attribute 260528 "zl2_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Channel half length (zl1 + rlvest)"
      end

      attribute 260656 "zl3_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Centr for membrane arc (zl1 + rlvest - rlmemb)"
      end

      attribute 260784 "rl1_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Pore radius"
      end

      attribute 260912 "rl2_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Radial from rotation axis of centre of vestibule arc (rl1 + rlvest)"
      end

      attribute 261040 "rl3_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "  Radial from rotation axis of centre of membrane arc (rl4 - rlmemb)"
      end

      attribute 261168 "rl4_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Protein outer radius"
      end

      attribute 261296 "rlvest_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Vestibule arc radius"
      end

      attribute 261424 "rlmemb_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Membrane arc radius"
      end

      attribute 280752 "temperature_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Membrane arc radius"
      end

      extra_member 219696 "LIFETIME"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 363312 "patch_matrix_fixture"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
${body}
"
	
	
	
	
	comment "As change particle : change particle Coulomb interactions are calculated
in the same way as change particle : config particle, the __init__ method
makes _do_change_contribution an alias for _do_contribution. The
nspec argument is the number of interacting species."
      end

      operation 363440 "patch_matrix_fixture"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 237104 // patch_matrix_fixture
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 363568 "patch_matrix_fixture"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 237104 // patch_matrix_fixture
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 363696 "~patch_matrix_fixture"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 363824 "operator="
	private return_type class_ref 237104 // patch_matrix_fixture
	nparams 1
	  param in name "source" type class_ref 237104 // patch_matrix_fixture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      extra_member 219952 "ACCESS"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 368048 "alfa"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 395568 "dxf"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 395440 "dxw"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 367792 "epsw"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 367920 "epspr"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 395824 "expected_grid_size"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->expected_size_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 395696 "nsub"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 368432 "rl1"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 368560 "rl2"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 368688 "rl3"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 368816 "rl4"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 368944 "rlvest"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 369072 "rlmemb"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 395952 "temperature"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 367664 "zl1"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 368176 "zl2"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 368304 "zl3"
	const public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
   return this->${name}_;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      extra_member 220080 "ACTION"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 369712 "define_grid"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "grid" type class_ref 1005615 // icc_surface_grid
	  param inout name "os_log" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Defining the patch grid.

 \\pre grid.empty
"
      end
    end

    class 217136 "evaluator_test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 231216 // <dependency>
	relation 230960 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 231216 // <dependency>
	  b parent class_ref 986415 // change_atom
      end

      classrelation 823984 // <dependency>
	relation 823088 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 823984 // <dependency>
	  b parent class_ref 779183 // coulomb
      end

      classrelation 816816 // <dependency>
	relation 815920 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 816816 // <dependency>
	  b parent class_ref 566192 // evaluator_definition
      end

      classrelation 816688 // <dependency>
	relation 815792 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 816688 // <dependency>
	  b parent class_ref 439344 // evaluator_manager
      end

      classrelation 824112 // <dependency>
	relation 823216 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 824112 // <dependency>
	  b parent class_ref 1143599 // evaluator_meta
      end

      classrelation 1119152 // <dependency>
	relation 1118256 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1119152 // <dependency>
	  b parent class_ref 694064 // hard_sphere_overlap
      end

      classrelation 850864 // <dependency>
	relation 849968 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 850864 // <dependency>
	  b parent class_ref 1005871 // integrator
      end

      classrelation 844336 // <dependency>
	relation 843440 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 844336 // <dependency>
	  b parent class_ref 579248 // lennard_jones
      end

      classrelation 830768 // <dependency>
	relation 829872 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 830768 // <dependency>
	  b parent class_ref 546351 // localizer
      end

      classrelation 1132976 // <dependency>
	relation 1132080 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1132976 // <dependency>
	  b parent class_ref 700592 // object_overlap
      end

      operation 848944 "evaluator_manager_lifetime"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1793200 "evaluator_manager_methods_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Directly tested
 serialize
 description
 empty
 get_evaluators
 permittivity
 size
 temperature
 write_document
 compute_potential
 build_input_delegater

Tested in trial simulation
 on_conclude_trial
 prepare
"
      end

      operation 1370032 "evaluator_definition_lifetime"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1369520 "evaluator_meta_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1409072 "input_unknown_parameter_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1408432 "input_no_type_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1408560 "input_type_no_value_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1401904 "input_type_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1380272 "coulomb_lifetime_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1380144 "coulomb_static_method_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1380528 "coulomb_evaluator_r1_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Calculate total potential with two particles of +/-1 valency 1 Angstrom
 apart. "
      end

      operation 1380400 "coulomb_evaluator_r2_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Calculate total potential with two particles of +/-1 valency 2 Angstrom
 apart. "
      end

      operation 1380656 "coulomb_evaluator_d4r1_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Calculate total potential with four particles of +/-1 valency
 arranged in a 1 Angstrom square. "
      end

      operation 1380784 "coulomb_evaluator_d8r1_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Calculate total potential with eight particles of +/-1 valency
 arranged in a  1 Angstrom cube. 

  ** includes serialization test **"
      end

      operation 1401520 "evaluator_meta_coulomb_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 2028720 "hard_sphere_overlap_lifetime_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 2028592 "hard_sphere_overlap_static_method_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 2028976 "hard_sphere_overlap_evaluator_d8r1_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Check overlap with single particle add/move on ensemble with eight particles 
 of +/-1 valency arranged in a  1 Angstrom cube.

  ** includes serialization test **"
      end

      operation 2028848 "hard_sphere_overlap_evaluator_multi_d8r1_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Check overlap with multiple particle add/move on ensemble with eight particles 
 of +/-1 valency arranged in a  1 Angstrom cube."
      end

      operation 2090800 "evaluator_meta_hard_sphere_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 2071088 "object_overlap_lifetime_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 2070960 "object_overlap_static_method_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 2071216 "object_overlap_evaluator_serialization_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Check object overlap with single particle add/move on ensemble with eight particles 
 of +/-1 valency arranged in a  1 Angstrom cube. Include serialization test."
      end

      operation 2077744 "object_overlap_evaluator_cell_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Check overlap with particle add/move in membrane containing cell."
      end

      operation 2090928 "evaluator_meta_object_overlap_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1394352 "localizer_lifetime_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1394224 "localizer_static_method_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1401008 "localizer_methods_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1401136 "localizer_evaluator_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1408688 "evaluator_meta_localizer_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1408944 "input_localizer_no_mobk_value_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1401776 "input_localizer_bad_mobk_value_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1424176 "lennard_jones_lifetime_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1423920 "lennard_jones_static_method_tests"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1425072 "lennard_jones_param_different_size_list_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Attempt to build evaluator with bad params"
      end

      operation 1425200 "lennard_jones_no_epsilon_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Attempt to build evaluator with bad params"
      end

      operation 1425328 "lennard_jones_no_sigma_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Attempt to build evaluator with bad params"
      end

      operation 1425456 "lennard_jones_different_species_in_list_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Attempt to build evaluator with bad params"
      end

      operation 1425584 "lennard_jones_different_species_to_pman_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Attempt to build evaluator with bad params"
      end

      operation 1425712 "lennard_jones_extra_species_to_pman_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Attempt to build evaluator with bad params"
      end

      operation 1424944 "lennard_jones_missing_species_to_pman_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Attempt to build evaluator with bad params"
      end

      operation 1424432 "lennard_jones_evaluator_d8r1_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Calculate total potential with eight particles of +/-1 valency
 arranged in a  1 Angstrom cube.  (eps=sig=1.0)

  ** includes serialization test **"
      end

      operation 1424304 "lennard_jones_evaluator_d8r1_v2_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Calculate total potential with eight particles of +/-1 valency
 arranged in a  1 Angstrom cube. (eps=1, sig!=1)

  ** includes serialization test **"
      end

      operation 1424560 "lennard_jones_evaluator_d8r1_v3_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Calculate total potential with eight particles of +/-1 valency
 arranged in a  1 Angstrom cube.  (eps!=1 , sig=1.0)

  ** includes serialization test **"
      end

      operation 1424688 "lennard_jones_evaluator_d8r1_v4_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Calculate total potential with eight particles of +/-1 valency
 arranged in a  1 Angstrom cube. (eps!=1, sig!=1)

  ** includes serialization test **"
      end

      operation 1425840 "evaluator_meta_lennard_jones_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1425968 "input_lennard_jones_unknown_parameter_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1426096 "input_lennard_jones_different_size_list_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1426224 "input_lennard_jones_no_epsilon_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1426352 "input_lennard_jones_no_sigma_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1426480 "input_lennard_jones_different_species_in_list_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1426608 "input_lennard_jones_different_species_to_pman_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1426736 "input_lennard_jones_extra_species_to_pman_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1424816 "input_lennard_jones_missing_species_to_pman_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 359216 "arc_integrator_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 362160 "cylinder_integrator_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 363056 "wall_integrator_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 369200 "patch_matrix_fixture_test"
	stereotype "TODO"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 363184 "icc_surface_grid_test"
	stereotype "TODO"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 395312 "icc_matrix_test"
	stereotype "TODO"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 410032 "induced_charge_test"
	stereotype "TODO"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 421168 "legendre_test"
	stereotype "TODO"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "
"
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end
    end

    class 264880 "legendre"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Class to calculate charge on surface tiles"
      class 265008 "matrix_type"
	visibility package stereotype "typedef" base_type class_ref 203825 // multi_array
	nactuals 3
	actual class class_ref 203825 // multi_array
	  rank 0 explicit_value "int"
	actual class class_ref 203825 // multi_array
	  rank 1 explicit_value "2"
	actual class class_ref 203825 // multi_array
	  rank 2 explicit_value ""
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl "${comment}typedef ${type} ${name};
"
	explicit_switch_type ""
	
	classrelation 289840 // <realization>
	  relation 289584 -_-|>
	    a public
	      cpp default "${type}"
	      python "${type}"
	      classrelation_ref 289840 // <realization>
	    b parent class_ref 203825 // multi_array
	end
      end

      attribute 313776 "max_n"
	private explicit_type "size_t"
	init_value "0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The current maximum size of the binomial distribution."
      end

      attribute 313904 "binom"
	private type class_ref 265008 // matrix_type
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Matrix of coefficients."
      end

      operation 442032 "compute"
	public explicit_return_type "double"
	nparams 2
	  param in name "l" explicit_type "size_t"
	  param in name "xin" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Compute legendre term.

 \\param l : ordinal
 \\param xin : starting value"
      end

      operation 441904 "combination"
	public explicit_return_type "double"
	nparams 2
	  param in name "n" explicit_type "size_t"
	  param in name "k" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Expand binomial up to size n"
      end
    end
  end

  deploymentview 141488 "evaluator unit test "
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 202544 "evaluator_fixture"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// -
#include \"core/constants.hpp\"
#include \"utility/utility.hpp\"
// -
#include <array>
// -
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 237104 // patch_matrix_fixture
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 202288 "evaluator_test"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

#define BOOST_TEST_MODULE evaluator_test
#include <boost/test/unit_test.hpp>

${includes}
// Manuals
#include \"core/input_delegater.hpp\"
#include \"core/input_document.hpp\"
#include \"core/input_error.hpp\"
#include \"core/input_help.hpp\"
#include \"core/input_preprocess.hpp\"
#include \"core/strngs.hpp\"
#include \"geometry/geometry_manager.hpp\"
#include \"geometry/membrane_cylinder_region.hpp\"
#include \"geometry/periodic_cube_region.hpp\"
#include \"particle/ensemble.hpp\"
#include \"particle/particle_manager.hpp\"
#include \"particle/specie.hpp\"
//#include \"platform/platform_test/simulator_fixture.hpp\"
//#include \"platform/platform_test/simulator_test_dummy.hpp\"
// - 
//#include <array>
#include <bitset>
//#include <fstream>
#include <type_traits>
//-
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 217136 // evaluator_test
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 202416 "evaluator_exec"
      stereotype "executable"
      associated_artifacts
	artifact_ref 185007 // serialization
	artifact_ref 194353 // unit_test_framework
	artifact_ref 202288 // evaluator_test
	artifact_ref 207919 // libionch_utility
	artifact_ref 215855 // filesystem
	artifact_ref 215983 // program_options
	artifact_ref 216239 // date_time
	artifact_ref 222768 // clapack
	artifact_ref 281519 // system
	artifact_ref 334257 // uuid
	artifact_ref 449840 // libionch_geometry
	artifact_ref 609327 // libionch_core
	artifact_ref 617391 // libionch_particle
	artifact_ref 651439 // random
	artifact_ref 716335 // libionch_evaluator
      end
      ncouples 2
      key "butter flags" value "-DBOOST_TEST_DYN_LINK"
      key "butter install" value "NONE"
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end
  end
end
