format 75
"platform test" // platform::platform test
  revision 53
  modified_by 48 "finnerty"
  owner 48 "finnerty"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "platform/platform_test"
  cpp_src_dir "platform/platform_test"
  cpp_namespace "platform"
  classview 461615 "TS application test suites"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 335023 // application test suite deployment
    classdiagram 154544 "Platform tests"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 217264 "simulator_fixture"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} 
{
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Class to set up and clean up a dumm simulator class"
      classrelation 231728 // sim (<directional composition>)
	relation 231472 *-->
	  stereotype "unique_ptr"
	  a role_name "sim" multiplicity "0..1" public
	    comment " Dummy simulator"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 231728 // sim (<directional composition>)
	  b parent class_ref 191024 // simulator_test_dummy
      end

      operation 312240 "simulator_fixture"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
: sim( new platform::simulator_test_dummy )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312368 "~simulator_fixture"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312496 "simulator_fixture"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 217264 // simulator_fixture
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312752 "simulator_fixture"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 217264 // simulator_fixture
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312624 "operator="
	private return_type class_ref 217264 // simulator_fixture
	nparams 1
	  param in name "source" type class_ref 217264 // simulator_fixture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312880 "add_solute_species"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Add solute specie definitions with predefined particles."
      end

      operation 313008 "add_localized_species"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Add a localized specie (with predefined location/centroid)"
      end

      operation 421296 "add_solute_specie_definitions"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Add solute specie definitions with predefined particles."
      end
    end

    class 191024 "simulator_test_dummy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "  Minimal concrete simulator class for testing"
      classrelation 224688 // <dependency>
	relation 224432 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 224688 // <dependency>
	  b parent class_ref 289841 // grid_generator
      end

      classrelation 197552 // <generalisation>
	relation 197296 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 197552 // <generalisation>
	  b parent class_ref 1129135 // simulator
      end

      operation 267568 "build_reader"
	cpp_virtual private explicit_return_type "void"
	nparams 1
	  param inout name "decoder" type class_ref 1012655 // input_delegater
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Register the input file meta classes for this simulation."
      end

      operation 319536 "do_compute_distances"
	const private explicit_return_type "void"
	nparams 5
	  param in name "position" type class_ref 986799 // coordinate
	  param in name "coords" type class_ref 223792 // coordinate_set
	  param inout name "rij" type class_ref 270001 // array_type
	  param in name "endindex" explicit_type "size_t"
	  param in name "startindex" explicit_type "size_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}
{
  ${body}
}
"
	
	
	
	
	comment "Compute the distances between given position and existing positions.

\\pre rij.size <= ens.size
\\post rij[0:startindex] === 0
\\post rij[ens.size:] undefined"
      end

      operation 267440 "do_generate_simulation"
	cpp_virtual private return_type class_ref 289841 // grid_generator
	nparams 1
	  param inout name "oslog" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
   return std::unique_ptr< ${type} >{};
}

"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Pass ensemble to derived classes so they can generate
 the initial set of particles."
      end

      operation 585136 "do_license"
	const private explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Implement in derived classes to write the name of 
the program and any citation information."
      end

      operation 267312 "get_max_input_version"
	const cpp_virtual private explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw} override
{
  return 1ul;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  The maximum input file version to be understood by this program"
      end

      operation 267056 "is_valid_position"
	const cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param inout name "coord" type class_ref 986799 // coordinate
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw} override
{
  return true;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment " Is a particle at the given position and radius in a valid position
 in the system?"
      end

      operation 266928 "volume"
	const cpp_virtual public explicit_return_type "double"
	nparams 1
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw} override
{
  return 1.0;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Return the accessible volume of the given specie."
      end

      operation 266800 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw} override {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Write extra data of derived simulator object into the input
 document object at the given section."
      end

      operation 267696 "simulator_test_dummy"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 267824 "~simulator_test_dummy"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 501424 "range_x"
	const cpp_virtual public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::pair< ${type}, ${type} > ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}std::pair< ${type}, ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return std::pair< ${type}, ${type} >( 0.0, 1.0 );
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the minimum and maximum dimension along the z coordinate"
      end

      operation 501296 "range_y"
	const cpp_virtual public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::pair< ${type}, ${type} > ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}std::pair< ${type}, ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return std::pair< ${type}, ${type} >( 0.0, 1.0 );
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the minimum and maximum dimension along the z coordinate"
      end

      operation 501168 "range_z"
	const cpp_virtual public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::pair< ${type}, ${type} > ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}std::pair< ${type}, ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return std::pair< ${type}, ${type} >( 0.0, 1.0 );
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the minimum and maximum dimension along the z coordinate"
      end
    end

    class 911791 "channel_test_suite"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      operation 1657775 "test_set_temperature"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " test 'set_temperature()' + 'beta()' + 'temperature()' + 'qstar()'

 Part 1 : beta, temperature and qstar throw error if called before set_temp

 Part 2 : set_temperature requires argument in range (260,380)

 Part 3 : after calling set_temperature -> beta, temperature and qstar have
          correct values."
      end

      operation 1657903 "test_set_run_number"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " test 'set_run_number()' + 'firun' + 'fuuid'

 Part 1: firun and fuuid are unset before set_run_number

 Part 2: firun and fuuid are set after set_run_number
       firun = %03d and fuuid has 16 chars

 Part 3: second call to set_run_number changes fuuid."
      end

      operation 1658031 "test_serialize"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} ;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end
    end
  end

  deploymentview 335023 "application test suite deployment"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 182704 "simulator_test_dummy"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manual includes
#include \"particle/ensemble.hpp\"
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 191024 // simulator_test_dummy
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 209072 "simulator_fixture"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 217264 // simulator_fixture
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 209200 "libtest_platform"
      stereotype "library"
      associated_artifacts
	artifact_ref 182704 // simulator_test_dummy
	artifact_ref 209072 // simulator_fixture
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end
  end

  classview 220208 "application test suite"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 176688 // application test suite
    classdiagram 338736 "Platform tests"
      draw_all_relations no hide_attributes yes hide_operations yes hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 666800 "platform_test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1063600 // <dependency>
	relation 1062704 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1063600 // <dependency>
	  b parent class_ref 667440 // serial_storage
      end

      classrelation 1070128 // <dependency>
	relation 1069232 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1070128 // <dependency>
	  b parent class_ref 659760 // simulation_manager
      end

      classrelation 1091248 // <dependency>
	relation 1090352 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1091248 // <dependency>
	  b parent class_ref 673968 // storage_meta
      end

      class 667312 "simple_storage_manager"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	comment " Simple derived class version of storage manager. 

 NOTE: Abstract virtual functions are declared but not
 defined (so can not be called!)."
	classrelation 1050160 // <generalisation>
	  relation 1049264 ---|>
	    a public
	      cpp default "${type}"
	      python "${type}"
	      classrelation_ref 1050160 // <generalisation>
	    b parent class_ref 659888 // storage_manager
	end

	classrelation 1050288 // <dependency>
	  relation 1049392 -_->
	    a default
	      cpp default "#include in source"
	      python "${type}"
	      classrelation_ref 1050288 // <dependency>
	    b parent class_ref 912431 // access
	end

	attribute 812464 "thelog"
	  public type class_ref 254383 // stringstream
	  multiplicity "*"
	  stereotype "shared_ptr"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${stereotype}()
"
	  idl_decl ""
	  comment " "
	end

	attribute 818992 "param_"
	  private explicit_type "string"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	operation 1841584 "compute_output_dir"
	  const public explicit_return_type "string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return ${type}();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Computer the output directory for the current simulator object
 from the output_dir_fmt template."
	end

	operation 1841456 "find_input_filename"
	  const public explicit_return_type "std::string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return ${type}();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Generate a series of possible filenames and return
 the first filename that is found. Throw an error if no
 filenames are found. The template string is processed
 using 'printf' like function.

 For a filename_base of \"input.%03d.inp\" and run number
 of 11 the filenames checked for will be:

  * input.011.inp

  * input.inp

 \\post exists(return val)
"
	end

	operation 1907760 "get_label"
	  const public explicit_return_type "string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override
{
  return std::string( \"simple\" );
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " A word used to idenitfy the storage manager type in the input file."
	end

	operation 1921840 "get_value"
	  const public explicit_return_type "string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->param_;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 1907888 "on_restart"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " When restarting a simulation from a checkpoint file the
 previous invocation may have been a parallel execution. In
 this case the storage_manager class must reconnect to
 the parallel subjobs and restart them from the subjob's
 checkpoint files.
"
	end

	operation 1835952 "open_output"
	  cpp_virtual public return_type class_ref 313520 // base_sink
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return boost::shared_ptr< ${type} >();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Create/open the simulation's output sink."
	end

	operation 1835824 "open_input"
	  cpp_virtual public return_type class_ref 313392 // input_base_reader
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return boost::shared_ptr< ${type} >();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Create/open the simulation's input stream."
	end

	operation 1835696 "open_checkpoint"
	  public explicit_return_type "ostream"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return boost::shared_ptr< ${type} >();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Create/open the simulation's checkpoint stream."
	end

	operation 1835568 "open_log"
	  cpp_virtual private explicit_return_type "ostream"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return this->thelog;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Create the system's log output stream."
	end

	operation 1908272 "set_parameters"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "params" explicit_type "string"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const std::map< ${t0}, ${t0} >& ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const std::map< ${t0}, ${t0} >& ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Set optional parameters (from the input file)."
	end

	operation 1836336 "simple_storage_manager"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}
: storage_manager()
, thelog( new std::stringstream )
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 1836080 "~simple_storage_manager"
	  cpp_virtual public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	extra_member 699184 "friend boost...access"
	  
	  cpp "
  friend class boost::serialization::access;" ""
	  java ""
	  php ""
	  python ""
	  idl ""
	end

	operation 1836208 "serialize"
	  stereotype "template"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "ar" explicit_type "Archive"
	    param in name "version" explicit_type "unsigned int"
	  cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
  {
    ar & boost::serialization::base_object< platform::storage_manager >( *this );
    ar & param_;
  }"
	  
	  
	  
	  
	end

	operation 1921712 "add_definition"
	  class_operation public explicit_return_type "void"
	  nparams 1
	    param inout name "meta" type class_ref 673968 // storage_meta
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 1921968 "type_label_"
	  class_operation public explicit_return_type "string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  const std::string result{ \"test\" };
  return result;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end
      end

      operation 1821232 "mockup_particle_manager"
	class_operation public return_type class_ref 446128 // particle_manager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Mockup set of realistic species.

  specie_count = 5
  solute = \"Na\" (x2 particles) and \"Cl\" (x1 particle)
  mobile = \"CA\" (x1 particle)
  flexible = \"CO\" (x1 particle)
  channel only = \"OX\" (x1 particle)
  "
      end

      operation 1821360 "mockup_geometry_manager"
	class_operation public return_type class_ref 452656 // geometry_manager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Create geometry manager with PBC cube \"cell\" and 
 open cube \"bulk\" regions."
      end

      operation 1821872 "base_storage_manager_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Use minimal derived class to test base class storage manager operations.

Tested methods
  * checkpoint_name
  * default_checkpoint_name
  * default_filename_base
  * default_output_dir_fmt
  * default_output_name
  * default_run_number
  * filename_base
  * output_dir_fmt
  * output_name
  * run_number
  * serialize
  * set_checkpoint_name
  * set_filename_base
  * set_output_dir_fmt
  * set_output_name
  * set_run_number
Not tested (undefined in simple_storage_manager)
  checkpoint_path
  compute_output_dir
  find_input_filename
  output_path
  open_output
  open_input
  open_checkpoint
  open_log
  get_log (undefined because open_log is undefined.)

"
      end

      operation 1855152 "serial_storage_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment "Test of local and serial execution storage manager.
"
      end

      operation 1855024 "serial_storage_method_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Use minimal derived class to test base class storage manager operations.

Tested methods
  * checkpoint_name
  * default_checkpoint_name
  * default_filename_base
  * default_output_dir_fmt
  * default_output_name
  * default_run_number
  * filename_base
  * output_dir_fmt
  * output_name
  * run_number
  * serialize
  * set_checkpoint_name
  * set_filename_base
  * set_output_dir_fmt
  * set_output_name
  * set_run_number
Not tested (undefined in simple_storage_manager)
  * checkpoint_path
  * compute_output_dir
  * find_input_filename
  * output_path
  * open_output
  * open_input
  * open_checkpoint
  ** open_log
  ** get_log (should see message on cout!)

"
      end

      operation 1861808 "serial_storage_input_filename_noexist"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file resolves to no files."
      end

      operation 1861936 "serial_storage_input_filename_is_dir"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file resolves to directory."
      end

      operation 1862064 "serial_storage_input_filename_is_not_accessible"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not accessible,"
      end

      operation 1862192 "serial_storage_input_filename_is_not_readable"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not readable"
      end

      operation 1863600 "serial_storage_open_output_output_directory_is_not_directory"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not readable"
      end

      operation 1863472 "serial_storage_open_output_output_directory_is_not_accessible"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir not readable"
      end

      operation 1863344 "serial_storage_open_output_output_directory_is_0W0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only writable"
      end

      operation 1863216 "serial_storage_open_output_output_directory_is_RW0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 1863088 "serial_storage_open_output_output_directory_is_0WX"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only exec + writable (PASSES)"
      end

      operation 1862960 "serial_storage_open_output_output_directory_is_R0X"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 1862320 "serial_storage_open_checkpoint_output_directory_is_not_directory"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not readable"
      end

      operation 1862448 "serial_storage_open_checkpoint_output_directory_is_not_accessible"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir not readable"
      end

      operation 1862576 "serial_storage_open_checkpoint_output_directory_is_0W0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only writable"
      end

      operation 1862704 "serial_storage_open_checkpoint_output_directory_is_RW0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 1862832 "serial_storage_open_checkpoint_output_directory_is_0WX"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only exec + writable (PASSES)"
      end

      operation 1823920 "serial_storage_open_checkpoint_output_directory_is_R0X"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 1823024 "simulation_manager_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test simulation_manager ctor"
      end

      operation 1822000 "simulation_manager_methods_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Methods tested
  * equilibration_interval
  * production_interval
  * set_equilibration_interval
  * set_production_interval
  * serialize
  run
  do_license
  do_write_document
"
      end

      operation 1914928 "storage_meta_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test simulation_manager ctor"
      end

      operation 1914800 "storage_meta_methods_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Methods tested
  * add_type
  * has_type"
      end

      operation 1915056 "run_input_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of storage_meta and simple_storage_manager."
      end

      operation 1824048 "run_input_type_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1824176 "run_input_type_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1824304 "run_input_duplicate_type_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1824432 "run_input_checkname_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1824560 "run_input_outname_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1824688 "run_input_outdir_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1824816 "run_input_inputpattern_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      extra_member 697648 "TODO"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 1824944 "trial_input_rate_nonnumber_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825072 "trial_input_duplicate_rate_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825200 "trial_input_specielist_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825328 "trial_input_duplicate_specielist_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825456 "trial_input_move_delta_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825584 "trial_input_move_delta_negative_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825712 "trial_input_move_delta_zero_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825840 "trial_input_move_delta_nonnumber_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825968 "trial_input_move_duplicate_delta_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1826096 "trial_input_move_unknown_parameter_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1822128 "add_specie_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end
    end
  end

  deploymentview 176688 "application test suite"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 596784 "platform_test"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(platform::platform_test::simple_storage_manager, \"platform_test::simple_storage_manager\" );"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif
#define BOOST_TEST_MODULE platform_test
#include <boost/test/unit_test.hpp>

${includes}
// Manuals
#include \"core/input_delegater.hpp\"
//#include \"core/input_document.hpp\"
//#include \"core/input_help.hpp\"
#include \"core/input_preprocess.hpp\"
//#include \"core/strngs.hpp\"
//#include \"utility/fuzzy_equals.hpp\"
//#include \"utility/random.hpp\"
//#include \"utility/utility.hpp\"
// -
#include <fstream>
// - 
${namespace_start}
${members}
${namespace_end}
"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 666800 // platform_test
      end
    end

    artifact 596656 "platform_exec"
      stereotype "executable"
      associated_artifacts
	artifact_ref 185007 // serialization
	artifact_ref 194353 // unit_test_framework
	artifact_ref 207919 // libionch_utility
	artifact_ref 215855 // filesystem
	artifact_ref 216239 // date_time
	artifact_ref 281519 // system
	artifact_ref 332080 // libionch_zip_sink
	artifact_ref 332208 // libionch_gdbm_sink
	artifact_ref 334257 // uuid
	artifact_ref 371376 // gdbm
	artifact_ref 449840 // libionch_geometry
	artifact_ref 596784 // platform_test
	artifact_ref 597040 // libionch_newplatform
	artifact_ref 603696 // zip
	artifact_ref 609327 // libionch_core
	artifact_ref 617391 // libionch_particle
	artifact_ref 651439 // random
	artifact_ref 694959 // libionch_trial
	artifact_ref 716335 // libionch_evaluator
	artifact_ref 769583 // libionch_observable
      end
      ncouples 2
      key "butter flags" value "-DBOOST_TEST_DYN_LINK"
      key "butter install" value "NONE"
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end
  end
end
