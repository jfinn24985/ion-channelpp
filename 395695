format 75
"platform test" // platform::platform test
  revision 90
  modified_by 48 "finnerty"
  owner 48 "finnerty"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "platform/platform_test"
  cpp_src_dir "platform/platform_test"
  cpp_namespace "platform"
  classview 461615 "TS application test suites"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 335023 // application test suite deployment
    classdiagram 154544 "Platform tests"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 217264 "simulator_fixture"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} 
{
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Class to set up and clean up a dumm simulator class"
      classrelation 231728 // sim (<directional composition>)
	relation 231472 *-->
	  stereotype "unique_ptr"
	  a role_name "sim" multiplicity "0..1" public
	    comment " Dummy simulator"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 231728 // sim (<directional composition>)
	  b parent class_ref 191024 // simulator_test_dummy
      end

      operation 312240 "simulator_fixture"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
: sim( new platform::simulator_test_dummy )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312368 "~simulator_fixture"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312496 "simulator_fixture"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 217264 // simulator_fixture
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312752 "simulator_fixture"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 217264 // simulator_fixture
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312624 "operator="
	private return_type class_ref 217264 // simulator_fixture
	nparams 1
	  param in name "source" type class_ref 217264 // simulator_fixture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 312880 "add_solute_species"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Add solute specie definitions with predefined particles."
      end

      operation 313008 "add_localized_species"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Add a localized specie (with predefined location/centroid)"
      end

      operation 421296 "add_solute_specie_definitions"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Add solute specie definitions with predefined particles."
      end
    end

    class 191024 "simulator_test_dummy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "  Minimal concrete simulator class for testing"
      classrelation 224688 // <dependency>
	relation 224432 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 224688 // <dependency>
	  b parent class_ref 289841 // grid_generator
      end

      classrelation 197552 // <generalisation>
	relation 197296 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 197552 // <generalisation>
	  b parent class_ref 1129135 // simulator
      end

      operation 267568 "build_reader"
	cpp_virtual private explicit_return_type "void"
	nparams 1
	  param inout name "decoder" type class_ref 1012655 // input_delegater
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Register the input file meta classes for this simulation."
      end

      operation 319536 "do_compute_distances"
	const private explicit_return_type "void"
	nparams 5
	  param in name "position" type class_ref 986799 // coordinate
	  param in name "coords" type class_ref 223792 // coordinate_set
	  param inout name "rij" type class_ref 270001 // array_type
	  param in name "endindex" explicit_type "size_t"
	  param in name "startindex" explicit_type "size_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}
{
  ${body}
}
"
	
	
	
	
	comment "Compute the distances between given position and existing positions.

\\pre rij.size <= ens.size
\\post rij[0:startindex] === 0
\\post rij[ens.size:] undefined"
      end

      operation 267440 "do_generate_simulation"
	cpp_virtual private return_type class_ref 289841 // grid_generator
	nparams 1
	  param inout name "oslog" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
   return std::unique_ptr< ${type} >{};
}

"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Pass ensemble to derived classes so they can generate
 the initial set of particles."
      end

      operation 585136 "do_license"
	const private explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Implement in derived classes to write the name of 
the program and any citation information."
      end

      operation 267312 "get_max_input_version"
	const cpp_virtual private explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw} override
{
  return 1ul;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  The maximum input file version to be understood by this program"
      end

      operation 267056 "is_valid_position"
	const cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param inout name "coord" type class_ref 986799 // coordinate
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw} override
{
  return true;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment " Is a particle at the given position and radius in a valid position
 in the system?"
      end

      operation 266928 "volume"
	const cpp_virtual public explicit_return_type "double"
	nparams 1
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw} override
{
  return 1.0;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Return the accessible volume of the given specie."
      end

      operation 266800 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw} override {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Write extra data of derived simulator object into the input
 document object at the given section."
      end

      operation 267696 "simulator_test_dummy"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 267824 "~simulator_test_dummy"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 501424 "range_x"
	const cpp_virtual public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::pair< ${type}, ${type} > ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}std::pair< ${type}, ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return std::pair< ${type}, ${type} >( 0.0, 1.0 );
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the minimum and maximum dimension along the z coordinate"
      end

      operation 501296 "range_y"
	const cpp_virtual public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::pair< ${type}, ${type} > ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}std::pair< ${type}, ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return std::pair< ${type}, ${type} >( 0.0, 1.0 );
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the minimum and maximum dimension along the z coordinate"
      end

      operation 501168 "range_z"
	const cpp_virtual public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::pair< ${type}, ${type} > ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}std::pair< ${type}, ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return std::pair< ${type}, ${type} >( 0.0, 1.0 );
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get the minimum and maximum dimension along the z coordinate"
      end
    end

    class 911791 "channel_test_suite"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      operation 1657775 "test_set_temperature"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " test 'set_temperature()' + 'beta()' + 'temperature()' + 'qstar()'

 Part 1 : beta, temperature and qstar throw error if called before set_temp

 Part 2 : set_temperature requires argument in range (260,380)

 Part 3 : after calling set_temperature -> beta, temperature and qstar have
          correct values."
      end

      operation 1657903 "test_set_run_number"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " test 'set_run_number()' + 'firun' + 'fuuid'

 Part 1: firun and fuuid are unset before set_run_number

 Part 2: firun and fuuid are set after set_run_number
       firun = %03d and fuuid has 16 chars

 Part 3: second call to set_run_number changes fuuid."
      end

      operation 1658031 "test_serialize"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} ;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end
    end
  end

  deploymentview 335023 "application test suite deployment"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 182704 "simulator_test_dummy"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manual includes
#include \"particle/ensemble.hpp\"
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 191024 // simulator_test_dummy
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 209072 "simulator_fixture"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 217264 // simulator_fixture
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 209200 "libtest_platform"
      stereotype "library"
      associated_artifacts
	artifact_ref 182704 // simulator_test_dummy
	artifact_ref 209072 // simulator_fixture
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end
  end

  classview 220208 "application test suite"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 176688 // application test suite
    classdiagram 338736 "Platform tests"
      draw_all_relations default hide_attributes yes hide_operations yes hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 666800 "platform_test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Unit tests for the simulation class and related classes.

 Includes:  simulation, simulation_definition, simulation_meta"
      classrelation 1063600 // <dependency>
	relation 1062704 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1063600 // <dependency>
	  b parent class_ref 667440 // serial_storage
      end

      classrelation 1105328 // <dependency>
	relation 1104432 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1105328 // <dependency>
	  b parent class_ref 632368 // simulation
      end

      classrelation 1111984 // <dependency>
	relation 1111088 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1111984 // <dependency>
	  b parent class_ref 674224 // simulation_definition
      end

      classrelation 1070128 // <dependency>
	relation 1069232 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1070128 // <dependency>
	  b parent class_ref 659760 // simulation_manager
      end

      classrelation 1111856 // <dependency>
	relation 1110960 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1111856 // <dependency>
	  b parent class_ref 1143343 // simulator_meta
      end

      classrelation 1098544 // <dependency>
	relation 1097648 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1098544 // <dependency>
	  b parent class_ref 681008 // standard_simulation
      end

      classrelation 1091248 // <dependency>
	relation 1090352 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1091248 // <dependency>
	  b parent class_ref 673968 // storage_meta
      end

      operation 1821232 "mockup_particle_manager"
	class_operation private return_type class_ref 446128 // particle_manager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Mockup set of realistic species.

  specie_count = 5
  solute = \"Na\" (x2 particles) and \"Cl\" (x1 particle)
  mobile = \"CA\" (x1 particle)
  flexible = \"CO\" (x1 particle)
  channel only = \"OX\" (x1 particle)
  "
      end

      operation 1821360 "mockup_geometry_manager"
	class_operation private return_type class_ref 452656 // geometry_manager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Create geometry manager with PBC cube \"cell\" and 
 open cube \"bulk\" regions."
      end

      operation 1999920 "canon_input"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Test input file content."
      end

      operation 1948592 "simulation_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test simulation ctor"
      end

      operation 1966512 "simulation_modify_method_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test simulation access/modify methods"
      end

      operation 1986480 "simulation_license_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test license method (without/with sim_manager)"
      end

      operation 1986608 "simulation_program_description_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test simulation access/modify methods"
      end

      operation 1955248 "simulation_definition_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test simulation_definition ctor"
      end

      operation 1955376 "simulator_meta_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test simulator meta ctor"
      end

      operation 1955120 "simulator_meta_input_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test defining simulation object from input.

 * using standard_simulation simulation manager."
      end

      operation 1965104 "simulator_input_type_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825072 "simulator_input_duplicate_type_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825200 "simulator_input_type_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825328 "simulator_input_inner_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1962928 "simulator_input_inner_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1966256 "simulator_input_name_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1824944 "simulator_input_name_empty_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1963184 "simulator_input_nstep_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1963056 "simulator_input_nstep_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1963440 "simulator_input_naver_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1963312 "simulator_input_naver_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1963696 "simulator_input_isave_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1963568 "simulator_input_isave_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1963952 "simulator_input_ntarg_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1963824 "simulator_input_ntarg_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1964208 "simulator_input_epsw_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1964080 "simulator_input_epsw_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1964336 "simulator_input_epsw_negative_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1964464 "simulator_input_epsw_zero_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1964976 "simulator_input_kelvin_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1964848 "simulator_input_kelvin_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1964720 "simulator_input_kelvin_negative_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1964592 "simulator_input_kelvin_zero_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1966128 "simulator_input_no_type_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1966000 "simulator_input_no_inner_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1966384 "simulator_input_no_nstep_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1965744 "simulator_input_no_naver_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1965616 "simulator_input_no_isave_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1965488 "simulator_input_no_ntarg_test_PASS"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1965360 "simulator_input_no_epsw_test_PASS"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1965232 "simulator_input_no_kelvin_test_PASS"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1965872 "simulator_input_no_name_test_PASS"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1825584 "full_simulation_build_input_delegate_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Create simulation stage 1: read full input."
      end

      operation 2020144 "full_simulation_read_input_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Create simulation stage 1: read full input."
      end

      operation 1979696 "full_simulation_generate_sim_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Generate simulation stage 2: generate starting configuration."
      end

      operation 1979824 "full_simulation_echo_input_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Create simulation stage 3: get description and echo input."
      end

      operation 1993136 "full_simulation_read_echo_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Create simulation stage 3: check reading of echoed input."
      end

      operation 2012976 "full_simulation_description_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Create simulation stage 4: describe the system after being read."
      end

      operation 2006448 "full_simulation_prepare_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Create simulation stage 4: prepare system for a simulation."
      end

      operation 2020272 "full_simulation_prepare_description_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Create simulation stage 4: describe the system after calling prepare."
      end

      operation 1999792 "full_simulation_run_loop_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Create simulation stage 5: run a simulation."
      end

      operation 2019504 "full_simulation_main_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Build and run a simulation."
      end

      extra_member 697648 "TODO"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end
    end

    class 714032 "sim_manager_test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Unit tests for the simulation_manager and derived classes

 Includes: simulation_manager, standard_simulation, imc_simulation,
   imc_update, chemical_potential_update, malasics_igcmc, lamperski_igcmc"
      classrelation 1156528 // <dependency>
	relation 1155632 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1156528 // <dependency>
	  b parent class_ref 256689 // imc_simulation
      end

      classrelation 1147952 // <dependency>
	relation 1147056 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1147952 // <dependency>
	  b parent class_ref 632368 // simulation
      end

      classrelation 1148080 // <dependency>
	relation 1147184 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1148080 // <dependency>
	  b parent class_ref 674224 // simulation_definition
      end

      classrelation 1148208 // <dependency>
	relation 1147312 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1148208 // <dependency>
	  b parent class_ref 659760 // simulation_manager
      end

      classrelation 1148336 // <dependency>
	relation 1147440 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1148336 // <dependency>
	  b parent class_ref 1143343 // simulator_meta
      end

      classrelation 1148464 // <dependency>
	relation 1147568 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1148464 // <dependency>
	  b parent class_ref 681008 // standard_simulation
      end

      class 720944 "simple_updater"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1156656 // <generalisation>
	  relation 1155760 ---|>
	    a public
	      cpp default "${type}"
	      python "${type}"
	      classrelation_ref 1156656 // <generalisation>
	    b parent class_ref 707504 // imc_update
	end

	operation 2139568 "description"
	  const cpp_virtual public explicit_return_type "void"
	  nparams 1
	    param inout name "os" explicit_type "ostream"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Log message descibing the itearation update and its parameters"
	end

	operation 2139696 "do_write_part_document"
	  const cpp_virtual public explicit_return_type "void"
	  nparams 2
	    param inout name "wr" type class_ref 163632 // input_document
	    param in name "ix" explicit_type "size_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	  
	  comment " Add content of update into IMC section of an input file section.

only throw possible should be from os.write() operation"
	end

	operation 2139824 "prepare"
	  cpp_virtual public explicit_return_type "void"
	  nparams 1
	    param inout name "sim" type class_ref 632368 // simulation
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment "Prepare the updater before running a series of simulation steps"
	end

	operation 2139952 "update"
	  cpp_virtual public explicit_return_type "void"
	  nparams 2
	    param inout name "sys" type class_ref 632368 // simulation
	    param inout name "oslog" explicit_type "ostream"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Perform update after each IMC cycle."
	end

	extra_member 755376 "friend"
	  
	  cpp "
  friend class boost::serialization::access;" ""
	  java ""
	  php ""
	  python ""
	  idl ""
	end

	operation 2140208 "serialize"
	  stereotype "template"
	  cpp_inline private explicit_return_type "void"
	  nparams 2
	    param inout name "ar" explicit_type "Archive"
	    param in name "version" explicit_type "unsigned int"
	  cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
  ${p0} & boost::serialization::base_object< imc_update >(*this);
}
"
	  
	  
	  
	  
	end
      end

      operation 2116016 "canon_input"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Test input file content."
      end

      operation 2119984 "simulation_manager_methods_test"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "sman" type class_ref 659760 // simulation_manager
	  param in name "label" explicit_type "string"
	  param in name "lic_text" explicit_type "string"
	  param in name "entries" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} > ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, std::vector< ${t3} > ${p3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}boost::shared_ptr< ${t0} > ${p0}, ${t1} ${p1}, ${t2} ${p2}, std::vector< ${t3} > ${p3}${)}${const}${throw}
{
  ${body}
}
"
	
	
	
	
	comment " (using standard_simulation)
 Methods tested
  * equilibration_interval
  * production_interval
  * set_equilibration_interval
  * set_production_interval
  * serialize
  * description
  run
  * license
  write_part_document
  * type_label
"
      end

      operation 2119856 "standard_simulation_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test standard_simulation ctor (also simulation_manager)"
      end

      operation 2139312 "imc_simulation_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test standard_simulation ctor (also simulation_manager)"
      end

      operation 2140336 "imc_simulation_method_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test standard_simulation ctor (also simulation_manager)"
      end

      operation 2140592 "input_malasics_update_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test defining simulation object from input.

 * using imc_simulation "
      end

      operation 2140720 "input_lamperski_update_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test defining simulation object from input.

 * using imc_simulation "
      end

      operation 2141360 "simulator_input_imc_no_keywords_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2142384 "simulator_input_imc_missing_update_keyword_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2142128 "simulator_input_imc_update_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2142256 "simulator_input_imc_update_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2141488 "simulator_input_imc_niter_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2141616 "simulator_input_imc_niter_negative_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2141744 "simulator_input_imc_niter_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2141872 "simulator_input_imc_niter_zero_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2142000 "simulator_input_imc_niter_one_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2141232 "simulator_input_lamperski_delta_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2141104 "simulator_input_lamperski_delta_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2140976 "simulator_input_lamperski_delta_negative_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 2140848 "simulator_input_lamperski_delta_zero_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2148912 "malasics_simulation_main_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Build and run a simulation."
      end

      operation 2155440 "lamperski_simulation_main_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Build and run a simulation."
      end

      extra_member 748592 "TODO"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end
    end

    class 714288 "storage_manager_test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Unit test for the storage_manager and derived classes.

 Includes: storage_manager, serial_storage, storage_definition, storage_meta"
      classrelation 1148976 // <dependency>
	relation 1148080 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1148976 // <dependency>
	  b parent class_ref 667440 // serial_storage
      end

      classrelation 1149104 // <dependency>
	relation 1148208 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1149104 // <dependency>
	  b parent class_ref 632368 // simulation
      end

      classrelation 1149232 // <dependency>
	relation 1148336 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1149232 // <dependency>
	  b parent class_ref 674224 // simulation_definition
      end

      classrelation 1149360 // <dependency>
	relation 1148464 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1149360 // <dependency>
	  b parent class_ref 659760 // simulation_manager
      end

      classrelation 1149488 // <dependency>
	relation 1148592 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1149488 // <dependency>
	  b parent class_ref 1143343 // simulator_meta
      end

      classrelation 1149616 // <dependency>
	relation 1148720 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1149616 // <dependency>
	  b parent class_ref 681008 // standard_simulation
      end

      classrelation 1149744 // <dependency>
	relation 1148848 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1149744 // <dependency>
	  b parent class_ref 673968 // storage_meta
      end

      class 714416 "simple_storage_manager"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	comment " Simple derived class version of storage manager. 

 NOTE: Abstract virtual functions are declared but not
 defined (so can not be called!)."
	classrelation 1149872 // <generalisation>
	  relation 1148976 ---|>
	    a public
	      cpp default "${type}"
	      python "${type}"
	      classrelation_ref 1149872 // <generalisation>
	    b parent class_ref 659888 // storage_manager
	end

	classrelation 1150000 // <dependency>
	  relation 1149104 -_->
	    a default
	      cpp default "#include in source"
	      python "${type}"
	      classrelation_ref 1150000 // <dependency>
	    b parent class_ref 912431 // access
	end

	attribute 859568 "thelog"
	  public type class_ref 254383 // stringstream
	  multiplicity "*"
	  stereotype "shared_ptr"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${stereotype}()
"
	  idl_decl ""
	  comment " "
	end

	attribute 859696 "param_"
	  private explicit_type "string"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	operation 2126384 "compute_output_dir"
	  const public explicit_return_type "string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return ${type}();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Computer the output directory for the current simulator object
 from the output_dir_fmt template."
	end

	operation 2224176 "compute_seed"
	  const cpp_virtual public explicit_return_type "size_t"
	  nparams 1
	    param in name "seed" explicit_type "size_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  return ${p0};
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Make a unique seed for a simulation based on the given seed value.

 For serial simulations this method should be a no-op. For 
 parallel simulations it should produce a unique and
 reproducable seed value for each simulation."
	end

	operation 2126512 "do_description"
	  const private explicit_return_type "void"
	  nparams 1
	    param inout name "os" explicit_type "ostream"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Details about the current storage object."
	end

	operation 2126640 "do_write_document"
	  const private explicit_return_type "void"
	  nparams 2
	    param inout name "wr" type class_ref 163632 // input_document
	    param in name "ix" explicit_type "size_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	  
	  comment " Write extra data of derived simulator object into the input
 document object at the given section."
	end

	operation 2126768 "find_input_filename"
	  const public explicit_return_type "std::string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return ${type}();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Generate a series of possible filenames and return
 the first filename that is found. Throw an error if no
 filenames are found. The template string is processed
 using 'printf' like function.

 For a filename_base of \"input.%03d.inp\" and run number
 of 11 the filenames checked for will be:

  * input.011.inp

  * input.inp

 \\post exists(return val)
"
	end

	operation 2126896 "get_label"
	  const public explicit_return_type "string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override
{
  return std::string( \"simple\" );
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " A word used to idenitfy the storage manager type in the input file."
	end

	operation 2127024 "get_value"
	  const public explicit_return_type "string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->param_;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 2264112 "main"
	  cpp_virtual public explicit_return_type "bool"
	  nparams 3
	    param in name "argc" explicit_type "int"
	    param in name "argv" explicit_type "char"
	    param inout name "sim" type class_ref 632368 // simulation
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ** ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ** ${p1}, ${t2} & ${p2}${)}${const}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 2127280 "open_output"
	  cpp_virtual public return_type class_ref 313520 // base_sink
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return boost::shared_ptr< ${type} >();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Create/open the simulation's output sink."
	end

	operation 2127408 "open_input"
	  cpp_virtual public return_type class_ref 313392 // input_base_reader
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return boost::shared_ptr< ${type} >();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Create/open the simulation's input stream."
	end

	operation 2127536 "open_checkpoint"
	  public explicit_return_type "ostream"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return boost::shared_ptr< ${type} >();
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Create/open the simulation's checkpoint stream."
	end

	operation 2127664 "open_log"
	  cpp_virtual private explicit_return_type "ostream"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  return this->thelog;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Create the system's log output stream."
	end

	operation 2127792 "set_parameters"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "params" explicit_type "string"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const std::map< ${t0}, ${t0} >& ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const std::map< ${t0}, ${t0} >& ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment " Set optional parameters (from the input file)."
	end

	operation 2127920 "simple_storage_manager"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}
: storage_manager()
, thelog( new std::stringstream )
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 2128048 "~simple_storage_manager"
	  cpp_virtual public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	extra_member 748720 "friend boost...access"
	  
	  cpp "
  friend class boost::serialization::access;" ""
	  java ""
	  php ""
	  python ""
	  idl ""
	end

	operation 2128176 "serialize"
	  stereotype "template"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "ar" explicit_type "Archive"
	    param in name "version" explicit_type "unsigned int"
	  cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
  {
    ar & boost::serialization::base_object< platform::storage_manager >( *this );
    ar & param_;
  }"
	  
	  
	  
	  
	end

	operation 2128304 "add_definition"
	  class_operation public explicit_return_type "void"
	  nparams 1
	    param inout name "meta" type class_ref 673968 // storage_meta
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 2128432 "type_label_"
	  class_operation public explicit_return_type "string"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  const std::string result{ \"test\" };
  return result;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end
      end

      operation 2128816 "canon_input"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Test input file content."
      end

      operation 2128944 "base_storage_manager_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Use minimal derived class to test base class storage manager operations.

Tested methods
  * checkpoint_name
  * default_checkpoint_name
  * default_filename_base
  * default_output_dir_fmt
  * default_output_name
  * default_run_number
  * filename_base
  * output_dir_fmt
  * output_name
  * run_number
  * serialize
  * set_checkpoint_name
  * set_filename_base
  * set_output_dir_fmt
  * set_output_name
  * set_run_number
Not tested (undefined in simple_storage_manager)
  checkpoint_path
  compute_output_dir
  find_input_filename
  output_path
  open_output
  open_input
  open_checkpoint
  open_log
  get_log (undefined because open_log is undefined.)

"
      end

      operation 2129072 "serial_storage_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment "Test of local and serial execution storage manager.
"
      end

      operation 2129200 "serial_storage_method_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Use minimal derived class to test base class storage manager operations.

Tested methods
  * checkpoint_name
  * default_checkpoint_name
  * default_filename_base
  * default_output_dir_fmt
  * default_output_name
  * default_run_number
  * filename_base
  * output_dir_fmt
  * output_name
  * run_number
  * serialize
  * set_checkpoint_name
  * set_filename_base
  * set_output_dir_fmt
  * set_output_name
  * set_run_number
Not tested (undefined in simple_storage_manager)
  * checkpoint_path
  * compute_output_dir
  * find_input_filename
  * output_path
  * open_output
  * open_input
  * open_checkpoint
  ** open_log
  ** get_log (should see message on cout!)

"
      end

      operation 2129328 "serial_storage_input_filename_noexist"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file resolves to no files."
      end

      operation 2129456 "serial_storage_input_filename_is_dir"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file resolves to directory."
      end

      operation 2129584 "serial_storage_input_filename_is_not_accessible"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not accessible,"
      end

      operation 2129712 "serial_storage_input_filename_is_not_readable"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not readable"
      end

      operation 2129840 "serial_storage_open_output_output_directory_is_not_directory"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not readable"
      end

      operation 2129968 "serial_storage_open_output_output_directory_is_not_accessible"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir not readable"
      end

      operation 2130096 "serial_storage_open_output_output_directory_is_0W0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only writable"
      end

      operation 2130224 "serial_storage_open_output_output_directory_is_RW0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 2130352 "serial_storage_open_output_output_directory_is_0WX"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only exec + writable (PASSES)"
      end

      operation 2130480 "serial_storage_open_output_output_directory_is_R0X"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 2130608 "serial_storage_open_checkpoint_output_directory_is_not_directory"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not readable"
      end

      operation 2130736 "serial_storage_open_checkpoint_output_directory_is_not_accessible"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir not readable"
      end

      operation 2130864 "serial_storage_open_checkpoint_output_directory_is_0W0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only writable"
      end

      operation 2130992 "serial_storage_open_checkpoint_output_directory_is_RW0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 2131120 "serial_storage_open_checkpoint_output_directory_is_0WX"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only exec + writable (PASSES)"
      end

      operation 2131248 "serial_storage_open_checkpoint_output_directory_is_R0X"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 2131376 "storage_meta_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test simulation_manager ctor"
      end

      operation 2131504 "storage_meta_methods_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Methods tested
  * add_type
  * has_type"
      end

      operation 2131632 "run_input_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of storage_meta and simple_storage_manager."
      end

      operation 2131760 "run_input_type_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2131888 "run_input_type_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2132016 "run_input_duplicate_type_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2132144 "run_input_checkname_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2132272 "run_input_outname_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2132400 "run_input_outdir_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2132528 "run_input_inputpattern_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2132656 "standard_simulation_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test standard_simulation ctor (also simulation_manager)"
      end

      operation 2132784 "simulation_manager_methods_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " (using standard_simulation)
 Methods tested
  * equilibration_interval
  * production_interval
  * set_equilibration_interval
  * set_production_interval
  * serialize
  run
  do_license
  do_write_document
"
      end

      extra_member 748848 "TODO"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end
    end

    class 727472 "imc_convergence_test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Unit tests for the simulation_manager and derived classes

 Includes: simulation_manager, standard_simulation, imc_simulation,
   imc_update, chemical_potential_update, malasics_igcmc, lamperski_igcmc"
      classrelation 1163184 // <dependency>
	relation 1162288 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1163184 // <dependency>
	  b parent class_ref 256689 // imc_simulation
      end

      classrelation 1163312 // <dependency>
	relation 1162416 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1163312 // <dependency>
	  b parent class_ref 632368 // simulation
      end

      classrelation 1163696 // <dependency>
	relation 1162800 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1163696 // <dependency>
	  b parent class_ref 1143343 // simulator_meta
      end

      operation 2165168 "malasics_simulation_main_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Build and run a simulation."
      end

      operation 2165296 "lamperski_simulation_main_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Build and run a simulation."
      end

      operation 2195120 "trial_log_simulation_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Build and run a simulation that outputs trial log data."
      end
    end

    class 753712 "mpi_storage_test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Unit tests for the MPI storage_manager."
      classrelation 1197872 // <dependency>
	relation 1196976 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1197872 // <dependency>
	  b parent class_ref 747184 // mpi_storage
      end

      classrelation 1196848 // <dependency>
	relation 1195952 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1196848 // <dependency>
	  b parent class_ref 632368 // simulation
      end

      classrelation 1196976 // <dependency>
	relation 1196080 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1196976 // <dependency>
	  b parent class_ref 674224 // simulation_definition
      end

      classrelation 1197104 // <dependency>
	relation 1196208 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1197104 // <dependency>
	  b parent class_ref 659760 // simulation_manager
      end

      classrelation 1197232 // <dependency>
	relation 1196336 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1197232 // <dependency>
	  b parent class_ref 1143343 // simulator_meta
      end

      classrelation 1197360 // <dependency>
	relation 1196464 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1197360 // <dependency>
	  b parent class_ref 681008 // standard_simulation
      end

      classrelation 1197488 // <dependency>
	relation 1196592 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1197488 // <dependency>
	  b parent class_ref 673968 // storage_meta
      end

      operation 2220080 "canon_input"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Test input file content."
      end

      operation 2220336 "mpi_storage_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment "Test of mpi execution storage manager.
"
      end

      operation 2220464 "mpi_storage_method_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Use minimal derived class to test base class storage manager operations.

Tested methods
  * checkpoint_name
  * default_checkpoint_name
  * default_filename_base
  * default_output_dir_fmt
  * default_output_name
  * default_run_number
  * filename_base
  * output_dir_fmt
  * output_name
  * run_number
  * serialize
  * set_checkpoint_name
  * set_filename_base
  * set_output_dir_fmt
  * set_output_name
  * set_run_number
Not tested (undefined in simple_storage_manager)
  * checkpoint_path
  * compute_output_dir
  * find_input_filename
  * output_path
  * open_output
  * open_input
  * open_checkpoint
  ** open_log
  ** get_log (should see message on cout!)

"
      end

      operation 2220592 "mpi_storage_input_filename_noexist"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file resolves to no files."
      end

      operation 2220720 "mpi_storage_input_filename_is_dir"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file resolves to directory."
      end

      operation 2220848 "mpi_storage_input_filename_is_not_accessible"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not accessible,"
      end

      operation 2220976 "mpi_storage_input_filename_is_not_readable"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not readable"
      end

      operation 2221104 "mpi_storage_open_output_output_directory_is_not_directory"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not readable"
      end

      operation 2221232 "mpi_storage_open_output_output_directory_is_not_accessible"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir not readable"
      end

      operation 2221360 "mpi_storage_open_output_output_directory_is_0W0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only writable"
      end

      operation 2221488 "mpi_storage_open_output_output_directory_is_RW0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 2221616 "mpi_storage_open_output_output_directory_is_0WX"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only exec + writable (PASSES)"
      end

      operation 2221744 "mpi_storage_open_output_output_directory_is_R0X"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 2221872 "mpi_storage_open_checkpoint_output_directory_is_not_directory"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when input file not readable"
      end

      operation 2222000 "mpi_storage_open_checkpoint_output_directory_is_not_accessible"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir not readable"
      end

      operation 2222128 "mpi_storage_open_checkpoint_output_directory_is_0W0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only writable"
      end

      operation 2222256 "mpi_storage_open_checkpoint_output_directory_is_RW0"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 2222384 "mpi_storage_open_checkpoint_output_directory_is_0WX"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only exec + writable (PASSES)"
      end

      operation 2222512 "mpi_storage_open_checkpoint_output_directory_is_R0X"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test what happens when output dir only readable + writable"
      end

      operation 2222896 "run_input_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of storage_meta and simple_storage_manager."
      end

      operation 2223024 "run_input_type_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2223152 "run_input_type_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2223280 "run_input_duplicate_type_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2223408 "run_input_checkname_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2223536 "run_input_outname_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2223664 "run_input_outdir_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 2223792 "run_input_inputpattern_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      extra_member 782768 "TODO"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 2271024 "full_simulation_main_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Build and run a simulation."
      end
    end
  end

  deploymentview 176688 "application test suite"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 596784 "platform_test"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif
#define BOOST_TEST_MODULE platform_test
#include <boost/test/unit_test.hpp>

${includes}
// Manuals
#include \"core/input_document.hpp\"
#include \"core/input_delegater.hpp\"
#include \"core/input_help.hpp\"
#include \"core/input_preprocess.hpp\"
#include \"core/strngs.hpp\"
#include \"evaluator/evaluator_manager.hpp\" // for simulation serialization
#include \"geometry/geometry_manager.hpp\"   // for simulation serialization
#include \"geometry/periodic_cube_region.hpp\"
#include \"observable/base_observable.hpp\"  // for simulation serialization
#include \"observable/report_manager.hpp\"   // for simulation serialization
#include \"particle/ensemble.hpp\"           // for simulation serialization
#include \"particle/particle_manager.hpp\"   // for simulation serialization
#include \"trial/choice_manager.hpp\"        // for simulation serialization
#include \"trial/base_chooser.hpp\"          // for simulation serialization
#include \"trial/choice.hpp\"                // for simulation serialization
#include \"utility/gdbm_sink.hpp\"
//#include \"utility/XXrandomXX.hpp\"
//#include \"utility/XXutilityXX.hpp\"
// -
#include <fstream>
// - 
${namespace_start}
${members}
${namespace_end}
"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 666800 // platform_test
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 663344 "sim_manager_test"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif
#define BOOST_TEST_MODULE sim_manager_test
#include <boost/test/unit_test.hpp>

${includes}
// Manuals
#include \"core/input_document.hpp\"
#include \"core/input_delegater.hpp\"
//#include \"core/input_help.hpp\"
#include \"core/input_preprocess.hpp\"
#include \"core/strngs.hpp\"
#include \"evaluator/evaluator_manager.hpp\" // for simulation serialization
//#include \"geometry/geometry_manager.hpp\"   // for simulation serialization
#include \"geometry/periodic_cube_region.hpp\"// For sims
//#include \"observable/base_observable.hpp\"  // for simulation serialization
//#include \"observable/report_manager.hpp\"   // for simulation serialization
//#include \"particle/ensemble.hpp\"           // for simulation serialization
#include \"particle/particle_manager.hpp\"   // for simulation serialization
#include \"platform/serial_storage.hpp\"     // for sims
//#include \"trial/choice_manager.hpp\"        // for simulation serialization
//#include \"trial/base_chooser.hpp\"          // for simulation serialization
//#include \"trial/choice.hpp\"                // for simulation serialization
#include \"utility/gdbm_sink.hpp\"           // For sims
//#include \"utility/XXrandomXX.hpp\"
//#include \"utility/XXutilityXX.hpp\"
// -
#include <fstream>
// - 
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID( platform::sim_manager_test::simple_updater, \"platform::sim_manager_test::simple_updater\" );
"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 714032 // sim_manager_test
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 663472 "storage_manager_test"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(platform::storage_manager_test::simple_storage_manager, \"storage_manager_test::simple_storage_manager\" );"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif
#define BOOST_TEST_MODULE storage_manager_test
#include <boost/test/unit_test.hpp>

${includes}
// Manuals
#include \"core/input_delegater.hpp\"
#include \"core/input_help.hpp\"
#include \"core/input_preprocess.hpp\"
#include \"core/strngs.hpp\"
#include \"evaluator/evaluator_manager.hpp\" // for simulation serialization
#include \"geometry/geometry_manager.hpp\"   // for simulation serialization
#include \"geometry/periodic_cube_region.hpp\"
#include \"observable/base_observable.hpp\"  // for simulation serialization
#include \"observable/report_manager.hpp\"   // for simulation serialization
#include \"particle/ensemble.hpp\"           // for simulation serialization
#include \"particle/particle_manager.hpp\"   // for simulation serialization
#include \"trial/choice_manager.hpp\"        // for simulation serialization
#include \"trial/base_chooser.hpp\"          // for simulation serialization
#include \"trial/choice.hpp\"                // for simulation serialization
#include \"utility/gdbm_sink.hpp\"
//#include \"utility/XXrandomXX.hpp\"
//#include \"utility/XXutilityXX.hpp\"
// -
#include <fstream>
// - 
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 714288 // storage_manager_test
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 670000 "imc_convergence_test"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

#define BOOST_TEST_MODULE imc_convergence_test
#include <boost/test/unit_test.hpp>

${includes}
// Manuals
#include \"core/input_document.hpp\"
#include \"core/input_delegater.hpp\"
//#include \"core/input_help.hpp\"
#include \"core/input_preprocess.hpp\"
#include \"core/strngs.hpp\"
#include \"evaluator/evaluator_manager.hpp\" // for simulation serialization
//#include \"geometry/geometry_manager.hpp\"   // for simulation serialization
#include \"geometry/periodic_cube_region.hpp\"// For sims
//#include \"observable/base_observable.hpp\"  // for simulation serialization
//#include \"observable/report_manager.hpp\"   // for simulation serialization
//#include \"particle/ensemble.hpp\"           // for simulation serialization
#include \"particle/particle_manager.hpp\"   // for simulation serialization
#include \"platform/serial_storage.hpp\"     // for sims
//#include \"trial/choice_manager.hpp\"        // for simulation serialization
//#include \"trial/base_chooser.hpp\"          // for simulation serialization
//#include \"trial/choice.hpp\"                // for simulation serialization
#include \"utility/gdbm_sink.hpp\"           // For sims
//#include \"utility/XXrandomXX.hpp\"
//#include \"utility/XXutilityXX.hpp\"
// -
#include <fstream>
// - 
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 727472 // imc_convergence_test
      end
    end

    artifact 596656 "platform_exec"
      stereotype "executable"
      associated_artifacts
	artifact_ref 185007 // serialization
	artifact_ref 194353 // unit_test_framework
	artifact_ref 207919 // libionch_utility
	artifact_ref 215855 // filesystem
	artifact_ref 216239 // date_time
	artifact_ref 281519 // system
	artifact_ref 332080 // libionch_zip_sink
	artifact_ref 332208 // libionch_gdbm_sink
	artifact_ref 334257 // uuid
	artifact_ref 371376 // gdbm
	artifact_ref 449840 // libionch_geometry
	artifact_ref 596784 // platform_test
	artifact_ref 597040 // libionch_newplatform
	artifact_ref 603696 // zip
	artifact_ref 609327 // libionch_core
	artifact_ref 617391 // libionch_particle
	artifact_ref 651439 // random
	artifact_ref 694959 // libionch_trial
	artifact_ref 716335 // libionch_evaluator
	artifact_ref 769583 // libionch_observable
      end
      ncouples 2
      key "butter flags" value "-DBOOST_TEST_DYN_LINK"
      key "butter install" value "NONE"
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 663088 "sim_manager_exec"
      stereotype "executable"
      associated_artifacts
	artifact_ref 185007 // serialization
	artifact_ref 194353 // unit_test_framework
	artifact_ref 207919 // libionch_utility
	artifact_ref 215855 // filesystem
	artifact_ref 216239 // date_time
	artifact_ref 281519 // system
	artifact_ref 332080 // libionch_zip_sink
	artifact_ref 332208 // libionch_gdbm_sink
	artifact_ref 334257 // uuid
	artifact_ref 371376 // gdbm
	artifact_ref 449840 // libionch_geometry
	artifact_ref 597040 // libionch_newplatform
	artifact_ref 603696 // zip
	artifact_ref 609327 // libionch_core
	artifact_ref 617391 // libionch_particle
	artifact_ref 651439 // random
	artifact_ref 663344 // sim_manager_test
	artifact_ref 694959 // libionch_trial
	artifact_ref 716335 // libionch_evaluator
	artifact_ref 769583 // libionch_observable
      end
      ncouples 2
      key "butter flags" value "-DBOOST_TEST_DYN_LINK"
      key "butter install" value "NONE"
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 663216 "storage_manager_exec"
      stereotype "executable"
      associated_artifacts
	artifact_ref 185007 // serialization
	artifact_ref 194353 // unit_test_framework
	artifact_ref 207919 // libionch_utility
	artifact_ref 215855 // filesystem
	artifact_ref 216239 // date_time
	artifact_ref 281519 // system
	artifact_ref 332080 // libionch_zip_sink
	artifact_ref 332208 // libionch_gdbm_sink
	artifact_ref 334257 // uuid
	artifact_ref 371376 // gdbm
	artifact_ref 449840 // libionch_geometry
	artifact_ref 597040 // libionch_newplatform
	artifact_ref 603696 // zip
	artifact_ref 609327 // libionch_core
	artifact_ref 617391 // libionch_particle
	artifact_ref 651439 // random
	artifact_ref 663472 // storage_manager_test
	artifact_ref 694959 // libionch_trial
	artifact_ref 716335 // libionch_evaluator
	artifact_ref 769583 // libionch_observable
      end
      ncouples 2
      key "butter flags" value "-DBOOST_TEST_DYN_LINK"
      key "butter install" value "NONE"
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 670128 "imc_convergence_exec"
      stereotype "executable"
      associated_artifacts
	artifact_ref 185007 // serialization
	artifact_ref 194353 // unit_test_framework
	artifact_ref 207919 // libionch_utility
	artifact_ref 215855 // filesystem
	artifact_ref 216239 // date_time
	artifact_ref 281519 // system
	artifact_ref 332080 // libionch_zip_sink
	artifact_ref 332208 // libionch_gdbm_sink
	artifact_ref 334257 // uuid
	artifact_ref 371376 // gdbm
	artifact_ref 449840 // libionch_geometry
	artifact_ref 597040 // libionch_newplatform
	artifact_ref 603696 // zip
	artifact_ref 609327 // libionch_core
	artifact_ref 617391 // libionch_particle
	artifact_ref 651439 // random
	artifact_ref 670000 // imc_convergence_test
	artifact_ref 694959 // libionch_trial
	artifact_ref 716335 // libionch_evaluator
	artifact_ref 769583 // libionch_observable
      end
      ncouples 2
      key "butter flags" value "-DBOOST_TEST_DYN_LINK"
      key "butter install" value "NONE"
    end

    artifact 683440 "mpi_storage_test"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

#define BOOST_TEST_MODULE mpi_manager_test
#include <boost/test/unit_test.hpp>

${includes}
// Manuals
#include \"core/input_delegater.hpp\"
#include \"core/input_help.hpp\"
#include \"core/input_preprocess.hpp\"
#include \"core/strngs.hpp\"
#include \"evaluator/evaluator_manager.hpp\" // for simulation serialization
#include \"geometry/geometry_manager.hpp\"   // for simulation serialization
#include \"geometry/periodic_cube_region.hpp\"
#include \"observable/base_observable.hpp\"  // for simulation serialization
#include \"observable/report_manager.hpp\"   // for simulation serialization
#include \"particle/ensemble.hpp\"           // for simulation serialization
#include \"particle/particle_manager.hpp\"   // for simulation serialization
#include \"trial/choice_manager.hpp\"        // for simulation serialization
#include \"trial/base_chooser.hpp\"          // for simulation serialization
#include \"trial/choice.hpp\"                // for simulation serialization
#include \"utility/gdbm_sink.hpp\"
//#include \"utility/XXrandomXX.hpp\"
//#include \"utility/XXutilityXX.hpp\"
// -
#include <fstream>
// - 
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 753712 // mpi_storage_test
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 683568 "mpi_storage_exec"
      stereotype "executable"
      associated_artifacts
	artifact_ref 185007 // serialization
	artifact_ref 194353 // unit_test_framework
	artifact_ref 207919 // libionch_utility
	artifact_ref 215855 // filesystem
	artifact_ref 216239 // date_time
	artifact_ref 281519 // system
	artifact_ref 301872 // mpi
	artifact_ref 332080 // libionch_zip_sink
	artifact_ref 332208 // libionch_gdbm_sink
	artifact_ref 334257 // uuid
	artifact_ref 345264 // libionch_platform_mpi
	artifact_ref 371376 // gdbm
	artifact_ref 449840 // libionch_geometry
	artifact_ref 597040 // libionch_newplatform
	artifact_ref 603696 // zip
	artifact_ref 609327 // libionch_core
	artifact_ref 617391 // libionch_particle
	artifact_ref 651439 // random
	artifact_ref 683440 // mpi_storage_test
	artifact_ref 694959 // libionch_trial
	artifact_ref 716335 // libionch_evaluator
	artifact_ref 769583 // libionch_observable
      end
      ncouples 2
      key "butter flags" value "-DBOOST_TEST_DYN_LINK"
      key "butter install" value "NONE"
    end
  end
end
