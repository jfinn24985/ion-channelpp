format 75
"observer" // observer
  revision 173
  modified_by 48 "finnerty"
  owner 48 "finnerty"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  stereotype "library"
  cpp_h_dir "observer"
  cpp_src_dir "observer"
  cpp_namespace "observer"
  python_dir "cmc"
  classview 328111 "samplers"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 341807 // Observer deployment
    classdiagram 630959 "Base observer hierachy"
      draw_all_relations default hide_attributes no hide_operations yes hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 134705 "Outcome overview"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 491695 "Trial sampler classes"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 206897 "Class attribute relations"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 1144111 "sampler_meta"
      visibility protected 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1314735 // <generalisation>
	relation 1276207 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 1314735 // <generalisation>
	  b parent class_ref 1082671 // input_base_meta
      end

      classrelation 300081 // <dependency>
	relation 299825 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 300081 // <dependency>
	  b parent class_ref 1144367 // base_sampler
      end

      classrelation 217137 // <dependency>
	relation 216881 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 217137 // <dependency>
	  b parent class_ref 1129135 // simulator
      end

      class 1144239 "sampler_generator_fn"
	visibility package stereotype "typedef" base_type class_ref 251439 // function2
	nactuals 3
	actual class class_ref 251439 // function2
	  rank 0 explicit_value "void"
	actual class class_ref 251439 // function2
	  rank 1 explicit_value "std::map< std::string, std::string > const&"
	actual class class_ref 251439 // function2
	  rank 2 explicit_value "platform::simulator&"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl "${comment}typedef ${type} ${name};
"
	explicit_switch_type ""
	
	classrelation 217009 // <realization>
	  relation 216753 -_-|>
	    a public
	      cpp default "${type}"
	      python "${type}"
	      classrelation_ref 217009 // <realization>
	    b parent class_ref 251439 // function2
	end
      end

      class 156080 "anonymous_missing_sampler_options"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum
 {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl "${comment}${visibility}final class ${name} {
${items}}
"
	python_decl "class ${name}:
${docstring}${members}
"
	idl_decl "${comment}enum ${name} {
${items}};
"
	explicit_switch_type ""
	
	comment " Indices used to check for missing options."
	attribute 183216 "SAMPLER_TYPE"
	  public type class_ref 156080 // anonymous_missing_sampler_options
	  init_value "0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment " Type of sampler option"
	end

	attribute 198960 "SAMPLER_TAG_COUNT"
	  public type class_ref 156080 // anonymous_missing_sampler_options
	  init_value "1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment " The number of required tags"
	end
      end

      classrelation 1314991 // type_to_object_ (<directional composition>)
	relation 1276463 *-->
	  stereotype "map"
	  a role_name "type_to_object_" multiplicity "*" class_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${association}, ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 1314991 // type_to_object_ (<directional composition>)
	  b parent class_ref 1144239 // sampler_generator_fn
	  association_explicit_type "string"
      end

      attribute 1445551 "counter_"
	class_attribute private explicit_type "size_t"
	init_value "0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      attribute 1445423 "parameter_set_"
	private explicit_type "string"
	multiplicity "*"
	stereotype "map"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}, ${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
      end

      attribute 183088 "missing_required_tags_"
	private explicit_type "SAMPLER_TAG_COUNT"
	multiplicity "*"
	stereotype "bitset"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
	comment " Check for missing options."
      end

      attribute 1445295 "type_"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The type label of this observer"
      end

      operation 2166703 "sampler_meta"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw} 
: input_base_meta (core::strngs::sampler_label(), true, true)
, parameter_set_()
, missing_required_tags_ ()
, type_ ()
{
  this->missing_required_tags_.set();
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 2166191 "~sampler_meta"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 204208 "do_read_entry"
	cpp_virtual protected explicit_return_type "bool"
	nparams 1
	  param inout name "reader" type class_ref 313392 // input_base_reader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Read an entry in the input file. Return true if the entry was processed.

throw an error if input file is incorrect (using UTILITY_INPUT macro)"
      end

      operation 204336 "do_read_end"
	cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Perform checks at the end of reading a section."
      end

      operation 268336 "do_reset"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Reset the object"
      end
    end

    class 1144367 "base_sampler"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "Perform sampling of a simulation that leads to some estimated
result. 

The system issues signals rather thana standardized
set of virtual functions to manage object interaction during
the simulation. The 'enrol' and 'prepare' methods are
the hooks to firstly register and then connect to signals.

Standard operation:
- create sampler and add to simulator : sim.add_observer(...);
- after input file has been reador the system is deserialized 
the owning simulator calls enrol : obs.enrol(sim); This 
should register any signals produced by the sampler (and 
optionally connect to simulator signals).
- before every simulation sequence the simulator object
calls 'prepare' on its children. The children should connect
to signals of interest to them and setup internal state in
preparation for the simulation. At this point the sampler
should have connected to all signals of interest.
- simulator runs the simulation, issuing 'inner-loop',
'outer-loop', 'report' and 'checkpoint' signals.
- at any point the simulator may call serialize to 
archive the simulation.
- destructor is called.


The observer_meta class and make_XXX methods for a particular
derived class are responsible for determining if an observer 
is useable with the given simulation type.  This mechanism
allows make_XXX methods to choose between particular derived 
types that sample the same 'observation' in different
simulation subtypes (bulk, channel etc).
"
      classrelation 438960 // <dependency>
	relation 438320 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 438960 // <dependency>
	  b parent class_ref 634799 // any
      end

      operation 487217 "description"
	abstract const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 664368 "get_label"
	abstract const cpp_virtual public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "The human readable label of this variable.

General format will be \"{type-label}[:obj-label]\"

For derived classes that will only have a single 
sampler instantiated, this label will be the same
as the sampler type-label in the input document."
      end

      operation 650160 "get_value"
	abstract const cpp_virtual public explicit_return_type "boost::any"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve the current value of the variable."
      end

      operation 225585 "prepare"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Prepare the sampler for use with the given simulator. Reset
all data."
      end

      operation 607152 "on_report"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Save statistical data to permanent storage"
      end

      classrelation 1315247 // <dependency>
	relation 1276719 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 1315247 // <dependency>
	  b parent class_ref 912431 // access
      end

      extra_member 496815 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 2146735 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 2175151 "~base_sampler"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}  = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 2166319 "write_document"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "wr" type class_ref 163632 // input_document
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Add an input file section to wr.

 Output of this method is something like

 sampler
 <call do_write_input_section>
 end
"
      end

      operation 216752 "do_write_document"
	abstract const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Update wr[ix] section with information from the derived class."
      end

      operation 664496 "base_sampler"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 664624 "base_sampler"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 1144367 // base_sampler
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 664752 "base_sampler"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 1144367 // base_sampler
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 664880 "operator="
	private return_type class_ref 1144367 // base_sampler
	nparams 1
	  param in name "source" type class_ref 1144367 // base_sampler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end
    end

    class 353840 "tracked_variable"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "A dependent variable that may obtain a new value after every 
trial."
      classrelation 424752 // <generalisation>
	relation 424112 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 424752 // <generalisation>
	  b parent class_ref 1144367 // base_sampler
      end

      operation 649520 "on_trial_end"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "trial" type class_ref 986543 // change_set
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Update variable after every trial."
      end

      classrelation 425008 // <dependency>
	relation 424368 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 425008 // <dependency>
	  b parent class_ref 912431 // access
      end

      extra_member 323760 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 649264 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & boost::serialization::base_object< base_sampler >(*this);
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Save variable to checkpoint"
      end

      operation 657200 "tracked_variable"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 657328 "~tracked_variable"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 657456 "tracked_variable"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 353840 // tracked_variable
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 657584 "tracked_variable"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 353840 // tracked_variable
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${v0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 657712 "operator="
	private return_type class_ref 353840 // tracked_variable
	nparams 1
	  param in name "source" type class_ref 353840 // tracked_variable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end
    end

    class 360496 "sampled_variable"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "A dependent variable that is sampled from the simulation at regular 
intervals.

The samping interval should have been chosen by the simulator to 
enhance the independence of successive samples."
      classrelation 424880 // <generalisation>
	relation 424240 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 424880 // <generalisation>
	  b parent class_ref 1144367 // base_sampler
      end

      operation 607280 "on_sample"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Accumulate data after a sequence of trials."
      end

      classrelation 425136 // <dependency>
	relation 424496 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 425136 // <dependency>
	  b parent class_ref 912431 // access
      end

      extra_member 330288 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 665648 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & boost::serialization::base_object< base_sampler >(*this);
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Save variable to checkpoint"
      end

      operation 665520 "sampled_variable"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 665392 "~sampled_variable"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 665264 "sampled_variable"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 360496 // sampled_variable
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 665136 "sampled_variable"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 360496 // sampled_variable
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${v0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 665008 "operator="
	private return_type class_ref 360496 // sampled_variable
	nparams 1
	  param in name "source" type class_ref 360496 // sampled_variable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end
    end

    class 340656 "report_manager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "Manage statistical accumlators

Design concept.

The report manager provides an interface between the statistics samplers
and the rest of the simulation.  Samplers register to collect data in
either the inner loop (tracked_variable) or outer loop (sampled_variable). During the simulation the simulator
calls on_trial_end and on_sample of the manager, which then calls the
registered samplers. At some point the simulator calls on_report which
signals the samplers to save aggregated data to permanent storage. The
report_manager manages the connection between the samplers and storage.

The system uses shared pointers to the samplers. On checkpointing the
report_manager will pass on write_document and serialize calls to the
samplers. This ensures that any samplers not shared with another object
will be correctly saved.
"
      classrelation 411696 // variables_ (<directional aggregation>)
	relation 411056 o-->
	  stereotype "vector"
	  a role_name "variables_" multiplicity "*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${association}< ${type} > > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 411696 // variables_ (<directional aggregation>)
	  b parent class_ref 353840 // tracked_variable
	  association_explicit_type "shared_ptr"
      end

      classrelation 432176 // samples_ (<directional aggregation>)
	relation 431536 o-->
	  stereotype "vector"
	  a role_name "samples_" multiplicity "*" private
	    comment "Sampled data from the simulation."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${association}< ${type} > > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 432176 // samples_ (<directional aggregation>)
	  b parent class_ref 360496 // sampled_variable
	  association_explicit_type "shared_ptr"
      end

      classrelation 391856 // sink_ (<directional composition>)
	relation 391344 *-->
	  stereotype "shared_ptr"
	  a role_name "sink_" multiplicity "1..*" private
	    comment "Manages serialization of output data to long-term storage."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 391856 // sink_ (<directional composition>)
	  b parent class_ref 313520 // base_sink
      end

      extra_member 316976 "LIFETIME"
	
	cpp "// LIFETIME METHODS

" "// LIFETIME METHODS

"
	java ""
	php ""
	python ""
	idl ""
      end

      operation 614064 "report_manager"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw}
${body}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 614192 "~report_manager"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 614320 "report_manager"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 614448 "report_manager"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 614576 "operator="
	private return_type class_ref 340656 // report_manager
	nparams 1
	  param in name "source" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      classrelation 391728 // <dependency>
	relation 391216 -_->
	  stereotype "friend"
	  a package
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 391728 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 606128 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  // data_source_ not serialized.
  ar & this->variables_;
  ar & this->samples_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      extra_member 317104 "MODIFY"
	
	cpp "// MODIFY METHODS

" "// MODIFY METHODS

"
	java ""
	php ""
	python ""
	idl ""
      end

      operation 672176 "add_sample"
	public explicit_return_type "void"
	nparams 1
	  param in name "var" type class_ref 360496 // sampled_variable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} > ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}boost::shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "add sampled variable to list.

/pre not has_sample(var.label())"
      end

      operation 650544 "add_tracked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "var" type class_ref 353840 // tracked_variable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} > ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}boost::shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "add variable to list.

/pre not has_tracked(var.label())"
      end

      operation 605232 "on_trial_end"
	public explicit_return_type "void"
	nparams 1
	  param in name "trial" type class_ref 986543 // change_set
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Accumulate data after every trial"
      end

      operation 605360 "on_sample"
	public explicit_return_type "void"
	nparams 1
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Accumulate data after a sequence of trials"
      end

      operation 607024 "on_report"
	public explicit_return_type "void"
	nparams 2
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get all samplers to save statistical data to permanent storage"
      end

      operation 606000 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	
	
	comment " Get all samplers to prepare themselves for a simulation. Check for
 connection to signals of interest and connect if necessary.
"
      end

      operation 679472 "remove_sample"
	public explicit_return_type "void"
	nparams 1
	  param inout name "var" type class_ref 360496 // sampled_variable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} > & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}boost::shared_ptr< ${t0} > & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "remove sampled variable from list.

/pre has_sample(var->get_label()) and get_sample(var->get_label()).get() == var.get()"
      end

      operation 650672 "remove_tracked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "var" type class_ref 353840 // tracked_variable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} > & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}boost::shared_ptr< ${t0} > & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "remove tracked variable from list.

/pre has_tracked(var->get_label()) and get_tracked(var->get_label()).get() == var.get()"
      end

      operation 606384 "set_sink"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sink" type class_ref 313520 // base_sink
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} > ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  this->sink_ = ${p0};
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Set the object that manages where the output data goes. Silently
 overwrites any previous value."
      end

      extra_member 317232 "ACCESS"
	
	cpp "// ACCESSOR METHODS

" "// ACCESSOR METHODS

"
	java ""
	php ""
	python ""
	idl ""
      end

      operation 605744 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get all samplers to write their descriptions."
      end

      operation 642352 "empty"
	const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->variables_.empty() and this->samples_.empty();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Are there any observers?"
      end

      operation 606256 "get_sink"
	const public return_type class_ref 313520 // base_sink
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return *(this->sink_);
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Get reference to the data output sink"
      end

      operation 672304 "get_sample"
	public return_type class_ref 360496 // sampled_variable
	nparams 1
	  param in name "name" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Attempt to retrieve a variable by label.

/pre has_sample"
      end

      operation 650288 "get_tracked"
	public return_type class_ref 353840 // tracked_variable
	nparams 1
	  param in name "name" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Attempt to retrieve a variable by label.

/pre has_tracked"
      end

      operation 672432 "has_sample"
	const public explicit_return_type "bool"
	nparams 1
	  param in name "name" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Attempt to retrieve a variable by label

/nothrow"
      end

      operation 650416 "has_tracked"
	const public explicit_return_type "bool"
	nparams 1
	  param in name "name" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Attempt to retrieve a variable by label

/nothrow"
      end

      operation 642480 "size"
	const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->variables_.size() + this->samples_.size();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " How many observers?"
      end

      operation 605616 "write_document"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "wr" type class_ref 163632 // input_document
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Get all samplers to write their input information."
      end

      operation 679600 "get_sample_"
	private return_type class_ref 360496 // sampled_variable
	nparams 1
	  param in name "name" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::vector< boost::shared_ptr< ${type} > >::iterator ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}std::vector< boost::shared_ptr< ${type} > >::iterator ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve iterator pointing to sampled variable
with the given name or \"end\".

/nothrow
"
      end

      operation 679856 "get_sample_"
	stereotype "const"
	const private return_type class_ref 360496 // sampled_variable
	nparams 1
	  param in name "name" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::vector< boost::shared_ptr< ${type} > >::const_iterator ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}std::vector< boost::shared_ptr< ${type} > >::const_iterator ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve iterator pointing to sampled variable
with the given name or \"end\".

/nothrow
"
      end

      operation 679728 "get_tracked_"
	private return_type class_ref 353840 // tracked_variable
	nparams 1
	  param in name "name" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::vector< boost::shared_ptr< ${type} > >::iterator ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}std::vector< boost::shared_ptr< ${type} > >::iterator ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve iterator pointing to tracked variable
with the given name or \"end\".

/nothrow
"
      end

      operation 679984 "get_tracked_"
	stereotype "const"
	const private return_type class_ref 353840 // tracked_variable
	nparams 1
	  param in name "name" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::vector< boost::shared_ptr< ${type} > >::const_iterator ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}std::vector< boost::shared_ptr< ${type} > >::const_iterator ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve iterator pointing to tracked variable
with the given name or \"end\".

/nothrow
"
      end
    end

    class 380208 "trial_acceptance_sampler"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 466480 // <generalisation>
	relation 465584 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 466480 // <generalisation>
	  b parent class_ref 353840 // tracked_variable
      end

      class 380336 "acceptance_datum"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} 
{
${members}
};
${inlines}
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	attribute 427440 "label"
	  public explicit_type "string"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment "The choice label"
	end

	attribute 427312 "hash"
	  public explicit_type "any"
	  init_value "0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}const ${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment "Pointer to choice object this reports for."
	end

	attribute 427568 "specie_key"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment "The specie/salt index"
	end

	attribute 427824 "attempts"
	  public explicit_type "size_t"
	  init_value "0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment "The number of attempts with this choice"
	end

	attribute 427696 "success"
	  public explicit_type "size_t"
	  init_value "0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	  comment "The number of successful attempts"
	end

	operation 716336 "acceptance_datum"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}
: label(), hash(), specie_key(), attempts(), success() {}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment "Empty ctor"
	end

	operation 719024 "acceptance_datum"
	  public explicit_return_type ""
	  nparams 3
	    param in name "label" explicit_type "string"
	    param in name "choice_ptr" explicit_type "any"
	    param in name "key" explicit_type "size_t"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw}
: label(${p0}), hash(${p1}), specie_key(${p2}), attempts(), success() {}

"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	  comment "Construct from choice data"
	end

	operation 716464 "~acceptance_datum"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 716592 "acceptance_datum"
	  stereotype "move"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "source" type class_ref 380336 // acceptance_datum
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${v0}${)}${volatile}${throw}
: label(std::move(${p0}.label)), hash(${p0}.hash)
, specie_key(${p0}.specie_key), attempts(${p0}.attempts)
, success(${p0}.success) {}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 716720 "acceptance_datum"
	  stereotype "copy"
	  public explicit_return_type ""
	  nparams 1
	    param in name "source" type class_ref 380336 // acceptance_datum
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw}
: label(${p0}.label), hash(${p0}.hash)
, specie_key(${p0}.specie_key), attempts(${p0}.attempts)
, success(${p0}.success) {}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 716848 "operator="
	  public return_type class_ref 380336 // acceptance_datum
	  nparams 1
	    param in name "source" type class_ref 380336 // acceptance_datum
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract}
{
  this->swap(${p0});
  return *this;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	operation 716976 "swap"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "source" type class_ref 380336 // acceptance_datum
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  std::swap(this->label, ${p0}.label);
  std::swap(this->hash, ${p0}.hash);
  std::swap(this->specie_key, ${p0}.specie_key);
  std::swap(this->attempts, ${p0}.attempts);
  std::swap(this->success, ${p0}.success);
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end

	extra_member 343472 "friend"
	  
	  cpp "
  friend class boost::serialization::access;" ""
	  java ""
	  php ""
	  python ""
	  idl ""
	end

	operation 717104 "serialize"
	  stereotype "template"
	  cpp_inline private explicit_return_type "void"
	  nparams 2
	    param inout name "ar" explicit_type "Archive"
	    param in name "version" explicit_type "unsigned int"
	  cpp_decl "    ${comment}template<class Archive>
${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & this->label;
  if (Archive::is_loading::value)
  {
    this->label = nullptr;
  }
  ${p0} & this->specie_key;
  ${p0} & this->attempts;
  ${p0} & this->success;
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	  
	end

	operation 719152 "probability"
	  const public explicit_return_type "double"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return (this->success == 0 ? 0.0 : double(this->success)/double(this->attempts));
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	  
	end
      end

      classrelation 466224 // data_ (<directional composition>)
	relation 465328 *-->
	  stereotype "vector"
	  a role_name "data_" multiplicity "*" private
	    comment "Unsorted list of data"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 466224 // data_ (<directional composition>)
	  b parent class_ref 380336 // acceptance_datum
      end

      classrelation 466352 // dictionary_ (<directional composition>)
	relation 465456 *-->
	  stereotype "map"
	  a role_name "dictionary_" multiplicity "*" private
	    comment "Acceptance data indexed by pointer to choice object."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${association}, ${type} * > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 466352 // dictionary_ (<directional composition>)
	  b parent class_ref 380336 // acceptance_datum
	  association_explicit_type "any"
      end

      attribute 427952 "total_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The total number of attempted trials."
      end

      extra_member 343600 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 717232 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & boost::serialization::base_object< tracked_variable >(*this);
  ${p0} & this->data_;
  if (Archive::is_loading::value)
  {
    this->dictionary_.clear();
  }
  ${p0} & this->total_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 717360 "trial_acceptance_sampler"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}
: data_(), dictionary_(), total_() {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Only construct through make_sampler"
      end

      operation 717488 "~trial_acceptance_sampler"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 717616 "trial_acceptance_sampler"
	stereotype "move"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 380208 // trial_acceptance_sampler
	cpp_decl "    ${comment}${inline}${name}${(}${t0} && ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "no move"
      end

      operation 717744 "trial_acceptance_sampler"
	stereotype "copy"
	private explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 380208 // trial_acceptance_sampler
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "no copy"
      end

      operation 717872 "operator="
	private return_type class_ref 380208 // trial_acceptance_sampler
	nparams 1
	  param in name "source" type class_ref 380208 // trial_acceptance_sampler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} = delete;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "no assignment"
      end

      operation 718896 "build_dictionary_"
	private explicit_return_type "void"
	nparams 1
	  param in name "trial" type class_ref 986543 // change_set
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "What happens when a choice is not found in the dictionary.

/pre trial.choice /= nul
/pre dictionary.find(trial.choice) == dictionary.end
/post dictionary.find(trial.choice) != dictionary.end"
      end

      operation 718128 "description"
	const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 719408 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Write an input file section.

 only throw possible should be from os.write() operation"
      end

      operation 718256 "get_label"
	const cpp_virtual public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override
{
  return ${class}::type_label_();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "The human readable label of this variable.

General format will be \"{type-label}[:obj-label]\"

For derived classes that will only have a single 
sampler instantiated, this label will be the same
as the sampler type-label in the input document."
      end

      operation 718384 "get_value"
	const cpp_virtual public explicit_return_type "boost::any"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve the current value of the variable. In this case the
value is of type vector< acceptance_datum >."
      end

      operation 719280 "make_sampler"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "param_set" explicit_type "string"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}std::map< ${t0}, ${t0} > const& ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}std::map< ${t0}, ${t0} > const& ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Make a trial_acceptance_observer from input file

no parameters"
      end

      operation 718640 "on_report"
	cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Save statistical data to permanent storage"
      end

      operation 718000 "on_trial_end"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "trial" type class_ref 986543 // change_set
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Update variable after every trial."
      end

      operation 718512 "prepare"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	
	
	comment "Prepare the sampler for use with the given simulator. Reset
all data."
      end

      operation 718768 "type_label_"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${type}(\"trial-success\");
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Type label is \"rdf-specie\""
      end
    end

    classdiagram 200240 "density samplers"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 286000 "density_zaxis"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " sample a density distribution along the z axis (axis of rotation)
"
      classrelation 432304 // <generalisation>
	relation 431664 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 432304 // <generalisation>
	  b parent class_ref 360496 // sampled_variable
      end

      classrelation 319920 // <dependency>
	relation 319536 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 319920 // <dependency>
	  b parent class_ref 912431 // access
      end

      classrelation 320048 // <dependency>
	relation 319664 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 320048 // <dependency>
	  b parent class_ref 278960 // output_dataset
      end

      classrelation 320176 // data_sets_ (<directional composition>)
	relation 319792 *-->
	  stereotype "vector"
	  a role_name "data_sets_" multiplicity "*" private
	    comment "Specie/Specie RDF histograms."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 320176 // data_sets_ (<directional composition>)
	  b parent class_ref 175665 // estimate_array
      end

      classrelation 320304 // samplers_ (<directional composition>)
	relation 319920 *-->
	  stereotype "vector"
	  a role_name "samplers_" multiplicity "*" private
	    comment "The objects that convert rij data into the histogram 'data_sets_'."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 320304 // samplers_ (<directional composition>)
	  b parent class_ref 174897 // digital_sampler
      end

      attribute 334256 "stepsize_"
	private explicit_type "double"
	init_value "0.2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The width of the histogram bins (default 0.2).  Narrower bins
gives better detail but requires longer runs."
      end

      operation 498608 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Log message descibing the observer and its parameters"
      end

      operation 499632 "get_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return density_zaxis::type_label_();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Type label to access an object of this type in a report_manager and use in 
input file for this observer"
      end

      operation 672560 "get_value"
	const public explicit_return_type "boost::any"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve the current z-axis density profiles.

return value is of type const*const vector< estimate_array >"
      end

      operation 498864 "make_sampler"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "param_set" explicit_type "string"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}std::map< ${t0}, ${t0} > const& ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}std::map< ${t0}, ${t0} > const& ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Make an rdf_observer (independent of type) from input file

parameters : \"width\" \"stepsize\""
      end

      operation 498992 "on_report"
	public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Report RDFs"
      end

      operation 305329 "on_sample"
	public explicit_return_type "void"
	nparams 1
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 499248 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
	comment "Prepare the evaluator for use with the given simulator and
stepper."
      end

      operation 499376 "~density_zaxis"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      extra_member 262960 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 499504 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & boost::serialization::base_object< sampled_variable >(*this);
  ar & data_sets_;
  ar & samplers_;
  ar & stepsize_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 499760 "type_label_"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${type}(\"gz-specie\");
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Type label is \"rdf-specie\""
      end

      operation 499888 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Add sampler type, width and stepsize to wr[ix]"
      end
    end

    classdiagram 134833 "Metropolis sampler"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 663343 "metropolis_sampler"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "  Sample the metropolis factor generated by each trial. Failed
  trials have a factor of 0."
      classrelation 418224 // <generalisation>
	relation 417584 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 418224 // <generalisation>
	  b parent class_ref 353840 // tracked_variable
      end

      classrelation 299441 // boltzmann_factor_ (<directional composition>)
	relation 299185 *-->
	  a role_name "boltzmann_factor_" multiplicity "1" private
	    comment "Estimate of the boltzmann acceptance factor."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 299441 // boltzmann_factor_ (<directional composition>)
	  b parent class_ref 176049 // estimater
      end

      classrelation 299313 // energy_change_ (<directional composition>)
	relation 299057 *-->
	  a role_name "energy_change_" multiplicity "1" private
	    comment "Change in potential energy (ignores mu_ex and prefactor)"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 299313 // energy_change_ (<directional composition>)
	  b parent class_ref 176049 // estimater
      end

      operation 487601 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 174129 "get_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${class}::type_label_();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 672688 "get_value"
	const public explicit_return_type "boost::any"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve the current estimate of the boltzmann factor and
energy change.

/return Type pair< estimater, estimater > with
  result.first -> boltzmann factor and 
  result.second -> energy change"
      end

      operation 175025 "make_sampler"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "param_set" explicit_type "string"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const std::map< ${t0}, ${t0} >& ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const std::map< ${t0}, ${t0} >& ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 173745 "~metropolis_sampler"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1162543 "on_trial_end"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "trial" type class_ref 986543 // change_set
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "Collect information about the a_trial move"
      end

      operation 174769 "on_report"
	public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	
	
	comment "Reporting operations."
      end

      operation 174641 "prepare"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Prepare for a main simulation loop"
      end

      extra_member 147761 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 173489 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
  ${p0} & boost::serialization::base_object< tracked_variable >(*this);
  ${p0} & boltzmann_factor_;
  ${p0} & energy_change_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 174385 "type_label_"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return \"metropolis\";
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 217136 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Add type of sampler to wr[ix] document section"
      end
    end

    classdiagram 167601 "RDF relations"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 167729 "rdf_sampler"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "sample a radial distribution function around each ion collated by
ion specie
"
      classrelation 432432 // <generalisation>
	relation 431792 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 432432 // <generalisation>
	  b parent class_ref 360496 // sampled_variable
      end

      classrelation 278449 // <dependency>
	relation 278193 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 278449 // <dependency>
	  b parent class_ref 912431 // access
      end

      classrelation 319536 // <dependency>
	relation 319152 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 319536 // <dependency>
	  b parent class_ref 278960 // output_dataset
      end

      classrelation 299697 // data_sets_ (<directional composition>)
	relation 299441 *-->
	  stereotype "vector"
	  a role_name "data_sets_" multiplicity "*" private
	    comment "Specie/Specie RDF histograms."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 299697 // data_sets_ (<directional composition>)
	  b parent class_ref 175665 // estimate_array
      end

      classrelation 299825 // samplers_ (<directional composition>)
	relation 299569 *-->
	  stereotype "vector"
	  a role_name "samplers_" multiplicity "*" private
	    comment "The objects that convert rij data into the histogram 'data_sets_'."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 299825 // samplers_ (<directional composition>)
	  b parent class_ref 174897 // digital_sampler
      end

      attribute 240945 "stepsize_"
	private explicit_type "double"
	init_value "0.2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The width of the histogram bins (default 0.2).  Narrower bins
gives better detail but requires longer runs."
      end

      attribute 240817 "width_"
	private explicit_type "double"
	init_value "20.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The width of the total RDF histogram"
      end

      operation 487729 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters

TODO: describe specific RDF functions (if not default)"
      end

      operation 217264 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Add sampler type, width and stepsize to wr[ix]"
      end

      operation 672816 "get_value"
	const public explicit_return_type "boost::any"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve the radial distribution profiles

/return vector< estimate_array > const*const where
  rdf(i, j) is at index [i x specie_count + j]



"
      end

      operation 304945 "get_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return rdf_sampler::type_label_();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Type label to use in input file for this observer"
      end

      operation 336305 "make_sampler"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "param_set" explicit_type "string"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}std::map< ${t0}, ${t0} > const& ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}std::map< ${t0}, ${t0} > const& ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Make an rdf_observer (independent of type) from input file

parameters : \"width\" \"stepsize\""
      end

      operation 336049 "on_report"
	public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Report density profiles"
      end

      operation 499120 "on_sample"
	public explicit_return_type "void"
	nparams 1
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 304817 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
	comment "Prepare the evaluator for use with the given simulator and
stepper."
      end

      operation 305201 "~rdf_sampler"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      extra_member 173873 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 305073 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & boost::serialization::base_object< sampled_variable >(*this);
  ar & data_sets_;
  ar & samplers_;
  ar & stepsize_;
  ar & width_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 336177 "type_label_"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return ${type}(\"rdf-specie\");
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Type label is \"rdf-specie\""
      end
    end

    classdiagram 213425 "Specie-count"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 167601 "specie_count"
      visibility protected 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}(object):
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "Observe and report the average number of particles, with irregular sampling.

(TODO: An exact average is possible by sampling every trial.)"
      classrelation 431664 // <generalisation>
	relation 431024 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 431664 // <generalisation>
	  b parent class_ref 360496 // sampled_variable
      end

      classrelation 278193 // <dependency>
	relation 277937 -_->
	  a public
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 278193 // <dependency>
	  b parent class_ref 204975 // bind
      end

      classrelation 312880 // <dependency>
	relation 312496 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 312880 // <dependency>
	  b parent class_ref 271792 // output_series
      end

      classrelation 278321 // <dependency>
	relation 278065 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 278321 // <dependency>
	  b parent class_ref 1016239 // strngs
      end

      class 296497 "signal_type"
	visibility package stereotype "typedef" base_type class_ref 205231 // signal
	nactuals 1
	actual class class_ref 205231 // signal
	  rank 0 explicit_value "void (std::vector< utility::estimater >const &)"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl "${comment}typedef ${type} ${name};
"
	explicit_switch_type ""
	
	comment "The type of the signal this object uses."
	classrelation 434481 // <realization>
	  relation 433969 -_-|>
	    a public
	      cpp default "${type}"
	      python "${type}"
	      classrelation_ref 434481 // <realization>
	    b parent class_ref 205231 // signal
	end
      end

      attribute 219313 "count_"
	private type class_ref 176049 // estimater
	multiplicity "*"
	init_value "None"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "Average particle counts."
      end

      operation 487857 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 304433 "get_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return ${class}::type_label_();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}return \"specie-count\"
"
	
      end

      operation 672944 "get_value"
	const public explicit_return_type "boost::any"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Retrieve the current specie count estimates

/return type vector< estimater > const*const"
      end

      operation 365361 "make_sampler"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "paramset" explicit_type "string"
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}std::map< ${t0}, ${t0} > const& ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}std::map< ${t0}, ${t0} > const& ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	
	
      end

      operation 594865 "on_report"
	public explicit_return_type "void"
	nparams 3
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "out" explicit_type "ostream"
	  param inout name "reporter" type class_ref 340656 // report_manager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}, ${t2} & ${p2}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}, ${p1}${v1}${)}:
${docstring}${body}
"
	
	comment "Respond to 'report' signal by writing the current 
and average specie counts to out."
      end

      operation 304177 "on_sample"
	public explicit_return_type "void"
	nparams 1
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Sample average particle numbers."
      end

      operation 304305 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} override;
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self, ${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Prepare the evaluator for use with the given simulator and
stepper."
      end

      operation 633777 "specie_count"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;
"
	
	
	
	
	comment "for serialization"
      end

      operation 594993 "__init__"
	public explicit_return_type ""
	nparams 2
	  param inout name "self" explicit_type ""
	  param in name "sim" type class_ref 1129135 // simulator
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}, ${p1}${v1}${)}:
${docstring}super(${class}, ${p0}).__init__()
${body}
"
	
      end

      operation 595121 "__del__"
	public explicit_return_type ""
	nparams 1
	  param in name "self" explicit_type ""
	
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Disconnect any signals/slots as we exit"
      end

      operation 529585 "~specie_count"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} = default;
"
	
	
	
	
      end

      classrelation 278065 // <dependency>
	relation 277809 -_->
	  stereotype "friend"
	  a package
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 278065 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 304049 "serialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "size_t"
	cpp_decl "    ${comment}template< class ${t0} > ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & boost::serialization::base_object< sampled_variable >(*this);
  ar & this->count_;
}
"
	
	
	
	
      end

      operation 304561 "type_label_"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  return ${type}(\"specie-count\");
}
"
	
	
	
	
      end

      operation 217008 "do_write_document"
	const cpp_virtual private explicit_return_type "void"
	nparams 2
	  param inout name "wr" type class_ref 163632 // input_document
	  param in name "ix" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Write an input file section.

 only throw possible should be from os.write() operation"
      end
    end

    activity 128177 "ALPHA"
    end

    activity 128049 "IN PROGRESS"
    end

    classdiagram 174257 "3D Dist relations"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 197169 "d3_distribution"
      visibility protected 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      associated_diagram classdiagram_ref 174257 // 3D Dist relations
      comment "Sample the 3D distribution of particles. "
      classrelation 313521 // <generalisation>
	relation 313265 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 313521 // <generalisation>
	  b parent class_ref 1144367 // base_sampler
      end

      classrelation 313649 // <dependency>
	relation 313393 -_->
	  a public
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 313649 // <dependency>
	  b parent class_ref 204975 // bind
      end

      classrelation 313777 // <dependency>
	relation 313521 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 313777 // <dependency>
	  b parent class_ref 1016239 // strngs
      end

      classrelation 392881 // <dependency>
	relation 392625 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 392881 // <dependency>
	  b parent class_ref 189745 // estimate_3d
      end

      classrelation 393009 // <dependency>
	relation 392753 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 393009 // <dependency>
	  b parent class_ref 190257 // digital_3d_sampler
      end

      classrelation 314033 // distributions_ (<directional composition>)
	relation 313777 *-->
	  stereotype "vector"
	  a role_name "distributions_" multiplicity "*" private
	    comment "The 3d distributions, indexed by specie key"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 314033 // distributions_ (<directional composition>)
	  b parent class_ref 189745 // estimate_3d
      end

      attribute 261809 "parameters_"
	private explicit_type "string"
	multiplicity "*"
	stereotype "map"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}, ${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
	comment "Parameters to use to create digitisers."
      end

      classrelation 314161 // samplers_ (<directional composition>)
	relation 313905 *-->
	  stereotype "vector"
	  a role_name "samplers_" multiplicity "*" private
	    comment "3D samplers, indexed by specie key"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 314161 // samplers_ (<directional composition>)
	  b parent class_ref 190257 // digital_3d_sampler
      end

      operation 487985 "description"
	const public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 529713 "~d3_distribution"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 365617 "make_sampler"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "paramset" explicit_type "string"
	  param in name "simtype" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type}* ${name}${(}std::map< ${t0}, ${t0} > const& ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type}* ${class}::${name}${(}std::map< ${t0}, ${t0} > const& ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 365873 "on_checkpoint"
	public explicit_return_type "void"
	nparams 1
	  param in name "sim" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Save 3d average particle counts to a file."
      end

      operation 366001 "on_sample"
	cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "sys" type class_ref 1129135 // simulator
	  param inout name "log" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
	comment "Sample and report average particle numbers."
      end

      operation 442033 "on_reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  for (auto &est : this->distributions_) est.reset();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 365745 "prepare"
	public explicit_return_type "void"
	nparams 2
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "trans" explicit_type "stepper"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
	comment "Prepare the evaluator for use with the given simulator and
stepper."
      end

      classrelation 313905 // <dependency>
	relation 313649 -_->
	  stereotype "friend"
	  a package
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 313905 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 366129 "serialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "size_t"
	cpp_decl "    ${comment}template< class ${t0} > ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ${p0} & boost::serialization::base_object< base_sampler >(*this);
  ar & this->distributions_;
  ar & this->parameters_;
  ar & this->samplers_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 366257 "type_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return ${class}::type_label_();
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 366385 "type_label_"
	class_operation public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  return ${type}(\"3d-distribution\");
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end
    end

    class 135215 "distribution"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A distribution is a counter of entries along a discritized single
dimension. "
      attribute 139055 "count_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of trials"
      end

      attribute 139311 "umax_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 139439 "umin_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 139567 "width_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The histogram sampling width"
      end

      attribute 139695 "data_"
	private explicit_type "size_t"
	multiplicity "*"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Count of the number of time a sample was in a histogram sampling region."
      end

      operation 488369 "description"
	abstract const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 2146095 "distribution"
	public explicit_return_type ""
	nparams 3
	  param in name "max" explicit_type "double"
	  param in name "min" explicit_type "double"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${volatile}${throw} 
${body}
"
	
	
	
	
      end

      extra_member 449967 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 2036911 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar & count_;
    ar & umax_;
    ar & umin_;
    ar & width_;
    ar & data_;
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      classrelation 1169967 // <dependency>
	relation 1132847 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 1169967 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 138543 "distribution"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
  ${body}
"
	
	
	
	
	comment "For serialization"
      end

      operation 2102959 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Reset all the statistical data"
      end

      classrelation 432048 // <generalisation>
	relation 431408 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 432048 // <generalisation>
	  b parent class_ref 360496 // sampled_variable
      end
    end

    class 1129775 "energy_distribution"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A distribution is a counter of entries along a discritized single
dimension. "
      classrelation 431792 // <generalisation>
	relation 431152 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 431792 // <generalisation>
	  b parent class_ref 360496 // sampled_variable
      end

      attribute 1429167 "filename_"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The name of the file to write output to."
      end

      attribute 1429295 "count_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of trials"
      end

      attribute 1429423 "umax_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1429551 "umin_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1429679 "factu_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1429807 "data_"
	private explicit_type "size_t"
	multiplicity "*"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1429935 "addtail_"
	private explicit_type "bool"
	stereotype "TODO"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "Whether to include tail corrections in energy"
      end

      operation 2175791 "attach"
	cpp_virtual public return_type class_ref 1144367 // base_sampler
	nparams 1
	  param inout name "sim" explicit_type "bulk_simulator"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}utility::unique_ptr< ${type} >::type ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}utility::unique_ptr< ${type} >::type ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Attach to a bulk_simulator, configuring self for operation in a bulk
model.

Note an observer is not obligated to attach to the simulator if it
can not operate in the bulk model"
      end

      operation 2167471 "bind"
	public explicit_return_type "void"
	nparams 2
	  param inout name "trans" explicit_type "stepper"
	  param inout name "siml" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Bind the observer to the stepper's observer lists."
      end

      operation 2146607 "checkpoint"
	public explicit_return_type "void"
	nparams 1
	  param in name "geom" type class_ref 1129135 // simulator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
      end

      operation 488497 "description"
	abstract const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "Log message descibing the observer and its parameters"
      end

      operation 2146351 "energy_distribution"
	public explicit_return_type ""
	nparams 4
	  param in name "fn" explicit_type "string"
	  param in name "max" explicit_type "double"
	  param in name "min" explicit_type "double"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${volatile}${throw} 
${body}
"
	
	
	
	
      end

      operation 2175919 "energy_distribution"
	public explicit_return_type ""
	nparams 1
	  param in name "self" type class_ref 1129775 // energy_distribution
	cpp_decl "    ${comment}${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw} 
${body}
"
	
	
	
	
	comment "Not for general copy operation; for 'attach' method only."
      end

      operation 2146863 "energy_distribution"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
  ${body}
"
	
	
	
	
	comment "For serialization"
      end

      operation 2146991 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Reset all the statistical data, "
      end

      operation 2146479 "sample"
	public explicit_return_type "void"
	nparams 2
	  param in name "changes" type class_ref 986543 // change_set
	  param in name "accepted" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	
	
      end

      classrelation 1296431 // <dependency>
	relation 1258031 -_->
	  a package
	    cpp default "#include in header"
	    python "${type}"
	    classrelation_ref 1296431 // <dependency>
	  b parent class_ref 912431 // access
      end

      extra_member 510383 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 2167087 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar & filename_;
    ar & count_;
    ar & umax_;
    ar & umin_;
    ar & factu_;
    ar & data_;
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 2167343 "type_label"
	const public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return std::string(\"energy-distribution\");
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      classrelation 1315631 // <dependency>
	relation 1277103 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 1315631 // <dependency>
	  b parent class_ref 204975 // bind
      end
    end

    class 872239 "Trials"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 943535 // trials (<directional composition>)
	relation 914223 *-->
	  a role_name "trials" class_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 943535 // trials (<directional composition>)
	  b parent class_ref 872239 // Trials
      end

      attribute 1097263 "calwid"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      attribute 1097391 "nwdtry"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      operation 1551023 "zeroav"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 1551151 "accget"
	public explicit_return_type "double"
	nparams 1
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 1551279 "avergi"
	public explicit_return_type "void"
	nparams 1
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 1551407 "avergeng"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 1551535 "accrat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end
    end

    class 533167 "geometric_grid"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      operation 890415 "accessible_volume"
	public explicit_return_type "double"
	nparams 1
	  param in name "a_idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "// Have symmetric volumes with most volumes the same
// so we defined our volumes only for vestibule and 
// slices immediately adjacent

// 0 ... N-1, N ... 2N-1
// gives symmetric index as:
//   f(m) = (m >= N ? m - N : N - 1 - m)

// as we only define around vestibule we have hi and low index offsets.
//
// calc_vol[0] === volume in central cylinder
// calc_vol[hi - low] === volume in bulk
"
      end

      operation 890031 "radial"
	public explicit_return_type "double"
	nparams 1
	  param in name "a_idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "maximum radial distance"
      end

      operation 890159 "volume"
	public explicit_return_type "double"
	nparams 1
	  param in name "a_idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      classrelation 570543 // <composition>
	relation 564015 *---
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 570543 // <composition>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 570671 // <composition>
      end
    end

    class 539695 "geometric_onion"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class manages information about a 2D geometric grid in the system

The divisions of a grid occur along the z and r axes, thus they for concentric rings
like the layers of an onion."
      classrelation 577199 // <composition>
	relation 570543 *---
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 577199 // <composition>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 577327 // <composition>
      end

      operation 897455 "get_division"
	public return_type class_ref 533039 // geometric_division
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 897327 "grid_at"
	stereotype "tuple"
	public explicit_return_type "size_t"
	nparams 2
	  param in name "a_z" explicit_type "double"
	  param in name "a_r" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 897071 "low_radial"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 897199 "high_radial"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 896943 "mid_radial"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 897583 "volume"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end
    end

    class 533039 "geometric_division"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class manages information about a geometric grid in the system

The divisions of a 1D grid occur along the z-axis"
      classrelation 570671 // <composition>
	relation_ref 564015 // <composition>
      end

      classrelation 577327 // <composition>
	relation_ref 570543 // <composition>
      end

      operation 890287 "grid_at"
	public explicit_return_type "size_t"
	nparams 1
	  param in name "a_z" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "Grid index at given z-coordinate"
      end

      operation 889775 "low_point"
	const public explicit_return_type "double"
	nparams 1
	  param in name "a_idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 889903 "high_point"
	const public explicit_return_type "double"
	nparams 1
	  param in name "a_idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 889647 "mid_point"
	const public explicit_return_type "double"
	nparams 1
	  param in name "a_idx" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "Grid midpoint"
      end
    end

    classdiagram 379311 "report howto"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      comment "How can we generate a report?"
      size A4
    end

    classdiagram 372399 "samplers"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 662575 "sampler"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "  This class manages a reference to a sampler sub-type object.  This
  class provides safe value-type access semantics to the encapsulated
  sampler.  It can thus be safely used in a STL containers without
  risk of slicing the encapsulated object.  The encapsulated object
  is maintained as a weak pointer so the call to on_conclusion will
  be a no-op if the encapsulated object has been deleted.
"
      operation 1162287 "on_conclusion"
	cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "a_is_success" explicit_type "bool"
	  param in name "a_set" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "  This method is to be called at the end of a single MC step."
      end

      extra_member 301103 "OBSERVATIONS"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      attribute 539183 "aocc_"
	private explicit_type "std::size_t"
	multiplicity "[3][8]"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " co-occupancy matrix - record what sets of particles
 are in the filter region at the same time

 Dimensions are: 1 region, [ occ ]

 where occ is an 8 bit pattern consisting of  anion[76] cation1 [543] cation2 [210] occupancies"
      end

      attribute 539311 "anin_"
	private explicit_type "ionch::observable < double >, 2"
	init_value "(boost::extents[constants::nspcmx][constants::nrgnmx])"
	stereotype "boost::multi_array"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Sum of particles in each region. Note that all paticles of a
 specie will be in the ibulk region.

 NOTE: merged fortran an into this as anin[...][ibulk]

 NOTE: Only free species are stored

 [constants::nspcmx][constants::nrgnmx];"
      end

      attribute 539567 "acharge_"
	private explicit_type "double"
	stereotype "ionch::observable"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Current charge of system"
      end

      attribute 539055 "ah_"
	private explicit_type "double"
	stereotype "ionch::observable_histogram"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Sum of h vector from patch module"
      end

      attribute 538543 "amobile_"
	private explicit_type "point"
	multiplicity "*"
	stereotype "ionch::observable_histogram"
	cpp_decl ""
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${stereotype}()
"
	idl_decl ""
	comment " Statistics relating to each mobile structural ions"
      end

      operation 707503 "initialise_observables"
	stereotype "initialize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "  Initialise data arrays and calculate dimensions/regions for
  statistics collection

  Key functions:

  - allocate the arrays that are needed

  - on 'calgin' initialise the 'gin' distribution and geometry
  parameters.

  - initialise the 'gz' distribution (call geometry def.  in
  trial.mod)

  - on 'calrdf' initialise the 'rdf' distribution

  - echo interpreted content of input file

"
      end

      operation 747439 "record_energy"
	private explicit_return_type "void"
	nparams 1
	  param in name "bfcr" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  (is_displacement() ? ameng_[ispcnw[0]] : is_add_gcmc() ?  aceng_[ispcnw[0]] : adeng_[ispcnw[0]]) << bfcr;
}"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " Save energy data

 Update the internal data sets that monitor the energy
 changes (printed in 'avergi')"
      end

      operation 747055 "report_energy_means"
	const public explicit_return_type "void"
	nparams 2
	  param inout name "a_os" explicit_type "ostream"
	  param in name "ispec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " Calculate statistics for the energy factors used to determine
 acceptance for addition, move and creation steps.

 The information output here can be used to investigate the
 energetics of add/deletion of particles, something that may
 give an indication of problems with the chemical potentials."
      end

      operation 1426991 "accget"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "  Get log of ratio try_create/try_destroy
  
  Get the ratio of create/destroy attempts for free
  species.
  
  One of the equilibration methods limits the create/destroy
  attempts by repeating only create or only destroy attempts
  when a GCMC move is selected until the attempt succeeds, at
  which time the reverse operation is repeated.  This ensures
  that the number of particles of each specie will remain close
  to the starting value.  If the chemical potential is exactly
  correct then the number of attempts to create a particle should
  be equal to the attempts to destroy one.  Thus the value
  returned here can be used to self-consistently adjust the
  chemical potentials."
      end

      operation 1426735 "accrat"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "  Write out acceptance ratios
  
  The information output by this method can be used to evaluate
  the performance of the parameters and methods used in the GCMC step."
      end

      operation 1426863 "avgget"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "  Get ratio (destroy-create)/(create+destroy)
  
  Get create/destroy ratio for free species"
      end

      operation 1426607 "savewd"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "  write results of the widom calculation"
      end

      operation 706479 "accumulate"
	stereotype "sample"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "  Accumulate statistics after each trial move.

  During main simulation phase this routine collects filter occupancy
  data.  Collect particle counts, the 'h' vector and charge.

  During the thermalisation phase this routine collects data for
  chemical potential adjustment.  This involves counting the number
  of particles in the bulk sampling region.

  fortran equiv accum::accmlt and accum::acceql
"
      end

      operation 706991 "compute_accumulate"
	stereotype "sample"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "  Accumulate statistics over steps_mix interval

  Care should be taked to make this method as fast as possible as
  it is the most often called method that must calculate its
  statistices from the entire ensemble.

  Collection of the z-axial distribution (gz) always occurs.  It
  uses gz_bin to get the axial bin number.

  The 'calmob' set of statistics are related to the positions of
  the mobile structural ions.  These ions are new in version 17 and
  this method is to quantify how well the code is behaving with
  respect to movement around the centre-point.

  The 'calgin' set of statistics is a 2D distribution around the
  z-axis and r-radial.  Unlike the gz distribution, the data is
  only collected here in a subregion of the simulation space.  It
  determines the histogram bins by dividing the z and r dimensions
  by drg.

  The 'calrdf' set of statistics is the inter-particle radial
  distribution around particles in region 1 or 2.  The bin number
  is determined from the radial distance divided by 'drdf'.  (Note:
  The maximum number of bins is < 15/drdf.)

  fortran accum::hist"
      end

      operation 707887 "chemical_potentials"
	stereotype "report"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 1
	  param inout name "strbuf" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// -----------------------------------------------------------------
// Write comparison of current chemical potentials to target
// potentials.

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "Write comparison of current chemical potentials to target
potentials.
"
      end

      operation 708143 "mobile_particle_motion"
	stereotype "report"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "write mobile ion statistics"
      end

      operation 708015 "particle_counts"
	stereotype "report"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 1
	  param inout name "strbuf" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "Write current particle counts by region."
      end

      operation 708271 "particle_count_distribution"
	stereotype "report"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment "write mean particle count data to file. The bulk output from this
method is for 'bulk-sampling' region

writes to files a[region]-[specie].000
"
      end

      operation 1161775 "sampler"
	public explicit_return_type ""
	nparams 1
	  param inout name "letter" explicit_type "sampler_letter"
	cpp_decl "    ${comment}${inline}${name}${(}bal::shared_ptr< ${t0} >::Type & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}bal::shared_ptr< ${t0} >::Type & ${p0}${)}${throw}
: letter_ (${p0}) 
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 1161903 "~sampler"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} 
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 1162031 "sampler"
	stereotype "copy"
	public explicit_return_type ""
	nparams 1
	  param in name "source" type class_ref 662575 // sampler
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} 
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 1162159 "operator="
	public return_type class_ref 662575 // sampler
	nparams 1
	  param in name "source" type class_ref 662575 // sampler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 1659055 "sample"
	public explicit_return_type "void"
	nparams 1
	  param in name "runner" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end
    end

    class 574895 "gzdefn"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      attribute 550831 "nzgmx"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2048"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " --------------------------------------------------------------
 GZ Z-AXIAL HISTOGRAM BIN PARAMETERS

 Widom method for calculating chem. pot. uses the same cylinder
 slices as 'gz' in accum so geometry parameters for this
 distribution are presented here.
 Maximum number of histogram bins in z direction"
      end

      attribute 550959 "gzwdth_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " bin widths for each region/specie"
      end

      attribute 551087 "gzlow_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The lowest bin edge"
      end

      attribute 551215 "gz_max_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The total number of bins"
      end

      attribute 551343 "nhbin_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Half the number of bins"
      end

      attribute 551471 "gz_mid_"
	private explicit_type "double"
	stereotype "std::valarray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The centre-point of each histogram bin in 'gz' statistical distributon
 (specie independent)"
      end

      attribute 551599 "gz_vol_"
	private explicit_type "double, 2"
	stereotype "boost::multi_array"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Volumes for bins/slabs in the z-axial 'gz' statistical distribution
 (specie dependent)"
      end

      operation 720815 "gz_bin"
	class_operation cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "rzi" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    // solution [ use floor in C++ because of 0-based counting. ]
    const int Result (std::floor((rzi - gzlow_)/gzwdth_));
    // ensure in range
    return std::max(0, std::min(Result, gz_max ()));
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " ------------------------------------------------------------
 Determine the gz bin the item belongs in"
      end

      operation 720943 "gz_max"
	class_operation cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return gz_max_;
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " ------------------------------------------------------------
 Maximum number of bins"
      end

      operation 721071 "gz_mid"
	class_operation cpp_inline public explicit_return_type "double"
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return gz_mid_[idx];
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " ------------------------------------------------------------
 Midpoint of a 'gz' bin"
      end

      operation 721199 "gzwdth"
	class_operation cpp_inline public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return gzwdth_;
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " ------------------------------------------------------------
 Width of a 'gz' bin"
      end

      operation 721327 "gz_vol"
	class_operation cpp_inline public explicit_return_type "double"
	nparams 2
	  param in name "ispec" explicit_type "int"
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    return gz_vol_[ispec][idx];
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " ------------------------------------------------------------
 Volume of a 'gz' bin for a specie"
      end

      operation 721455 "gz_lo"
	class_operation cpp_inline public explicit_return_type "double"
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return gz_mid(idx) - (gzwdth_/2);
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " ------------------------------------------------------------
 Lowest z-coordinate of a bin"
      end

      operation 721583 "gz_hi"
	class_operation cpp_inline public explicit_return_type "double"
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return gz_mid(idx) + (gzwdth_/2.0);
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " ------------------------------------------------------------
 Highest z-coordinate of histogram bin"
      end

      operation 721711 "gz_def"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " ------------------------------------------------------------
 DEFINE Z-AXIAL HISTOGRAM BIN GEOMETRY"
      end
    end

    class 444591 "reporter"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "// -------------------------------------------------------------
// Statistics Module
//
// -------------------------------------------------------------
// Methods:
// accmlt
//    accumulate statistical data that requires no calculation.
// hist
//    process MC system data into histogram bins.
// rdaccu
//    read 'accum' input file section
// rfaccu
//    finalise initialisation after reading the input file
// saves
//    output a digest of the statistics
// zeroac
//    reset the statistic counters
// -------------------------------------------------------------
// Constants
// nzgmx,nrgmx : histrogram bins in z and r directions"
      attribute 539823 "drg_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "2D 'GIN' DISTRIBUTION PARAMETERS:
Width of bins (both axial and radial) in 2D 'gin' distribution
'gin'."
      end

      attribute 539951 "zinlft_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The axial outer-most point of the 2D 'gin' distribution"
      end

      attribute 540079 "rinup_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The radial outer-most point of the 2D 'gin' distribution"
      end

      attribute 540207 "vjin_factor_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Volume for the 2D 'gin' histogram bins"
      end

      attribute 540335 "nrgr_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The number of radial bins in 2D 'gin' distribution"
      end

      attribute 540463 "nrgz_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The number of axial bins in 2D 'gin' distribution"
      end

      attribute 540591 "gin_"
	private explicit_type "ionch::count_matrix< double, 2 >"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The 2D 'gin' distribution"
      end

      attribute 540719 "chgdist_"
	private explicit_type "double, 2, int64_t"
	stereotype "ionch::count_matrix"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Charge distribution that was formerly gin_(nspec,..). As we allow half charges
 we multiply all charges by 2 so we get integer charge changes.
 
 Note use of signed int as counter so we can include negative charge counts."
      end

      attribute 540847 "rdf_zlim_"
	private explicit_type "ionch::count_histogram< double >, 2"
	stereotype "boost::multi_array"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "INTER-PARTICLE DISTRIBUTION PARAMETERS:
The inter-particle radial distributions for particles in the channel.

NOTE: Changed rdf to record two distributions. One for particles
in region izlim and one for particles in region ichan that are
not also in region izlim.

NOTE: ardf made redundant by using count_histogram"
      end

      attribute 540975 "rdf_chan_"
	private explicit_type "ionch::count_histogram< double >, 2"
	stereotype "boost::multi_array"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      attribute 541103 "drdf_"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Width of histogram bins in the inter-particle radial distribution"
      end

      attribute 541231 "nrdf_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The number of active bins in the inter-particle radial distribution"
      end

      attribute 541359 "gz_"
	private explicit_type "ionch::count_histogram< double >"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "The z-axial 'gz' distribution data"
      end

      attribute 541487 "nrg_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The number of in-use bins in the 'gz' distribution"
      end

      attribute 541743 "isave_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " [INPUT] How often the statistic data is saved."
      end

      operation 769071 "reporter"
	public explicit_return_type ""
	nparams 1
	  param inout name "a_parent" type class_ref 448943 // channel_simulator
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}${)}${volatile}${throw} 
${body}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 707247 "save_interval"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract}
{
  return this->isave_;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      operation 706351 "vjin"
	const cpp_inline private explicit_return_type "double"
	nparams 1
	  param in name "radial_idx" explicit_type "int"
	cpp_decl "${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  return vjin_factor_ * (2 * radial_idx + 1);
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      classrelation 780079 // entries_ (<directional composition>)
	relation 764975 *-->
	  a role_name "entries_" multiplicity "*" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}< ${type} > ${name}${value};
"
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 780079 // entries_ (<directional composition>)
	  b parent class_ref 670383 // outcome
      end
    end

    class 670383 "outcome"
      abstract visibility package 
      cpp_decl ""
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " An aggregate sample of some kind.  It can consist of several related or
 individual observations."
      operation 1172143 "report"
	abstract const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end

      classrelation 780207 // parts_ (<composition>)
	relation 765103 *---
	  stereotype "example"
	  a role_name "parts_" multiplicity "1..*" private
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 780207 // parts_ (<composition>)
	  b role_name "reporter_" multiplicity "0..1" private
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 780335 // reporter_ (<composition>)
      end

      operation 1172783 "serialize"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
      end
    end

    class 670639 "trial_acceptance_report"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 780463 // <generalisation>
	relation 765231 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 780463 // <generalisation>
	  b parent class_ref 670383 // outcome
      end

      class 670767 "trial_observer"
	visibility package 
	nactuals 2
	actual class class_ref 470959 // binomial_observable
	  rank 0 explicit_value "double"
	actual class class_ref 470959 // binomial_observable
	  rank 1 explicit_value "uint64_t"
	cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 780591 // <realization>
	  relation 765359 -_-|>
	    a public
	      cpp default "${type}"
	      python "${type}"
	      classrelation_ref 780591 // <realization>
	    b parent class_ref 470959 // binomial_observable
	end

	attribute 826159 "category"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	operation 1172655 "get_maker"
	  const public explicit_return_type "basic_change_factory"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type}& ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type}& ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  return *(this->maker_);
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	  
	end
      end

      operation 746927 "report"
	public explicit_return_type "void"
	nparams 1
	  param inout name "a_os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${)}:
${docstring}${body}
"
	
	comment " Write out acceptance ratios

 The information output by this method can be used to evaluate
 the performance of the parameters and methods used in the GCMC step."
      end

      classrelation 781231 // parts_ (<directional composition>)
	relation 765999 *-->
	  stereotype "example"
	  a role_name "parts_" multiplicity "0..1" private
	    python "${comment}${self}${name} = ${stereotype}()
"
	    classrelation_ref 781231 // parts_ (<directional composition>)
	  b parent class_ref 670767 // trial_observer
      end
    end
  end

  classview 551855 "Sampler meta"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 341807 // Observer deployment
    classdiagram 630831 "sample meta from input file"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end
  end

  deploymentview 341807 "Observer deployment"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 631215 "base_sampler"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manual includes
#include \"core/strngs.hpp\"
// -
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 1144367 // base_sampler
	class_ref 353840 // tracked_variable
	class_ref 360496 // sampled_variable
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 275248 "density_zaxis"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manuals
#include <boost/bind.hpp>
#include \"core/strngs.hpp\"
#include \"particle/ensemble.hpp\"
// - 
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(observer::density_zaxis, \"observer::density_zaxis\");"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 286000 // density_zaxis
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 213937 "d3_distribution"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manuals
#include <fstream>
#include <boost/bind.hpp>
#include \"core/strngs.hpp\"
// - 
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(observer::d3_distribution, \"observer::d3_distribution\");"
      associated_classes
	class_ref 197169 // d3_distribution
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 135345 "metropolis_sampler"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manuals
#include <boost/bind.hpp>
#include \"core/strngs.hpp\"
// - 
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(observer::metropolis_sampler, \"observer::metropolis_observer\");

"
      associated_classes
	class_ref 663343 // metropolis_sampler
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 351792 "report_manager"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manual includes
#include \"core/strngs.hpp\"
// -

${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 340656 // report_manager
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 200881 "rdf_sampler"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manuals
#include <boost/bind.hpp>
#include \"core/strngs.hpp\"
#include \"particle/ensemble.hpp\"
// - 
${namespace_start}
${members}
${namespace_end}


#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(observer::rdf_sampler, \"observer::rdf_observer\");"
      associated_classes
	class_ref 167729 // rdf_sampler
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 789807 "sampler_meta"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// Manual incls
#include <sstream>
#include <bitset>
#include \"core/strngs.hpp\"
#include \"core/input_help.hpp\"
#include \"utility/utility.hpp\"
${namespace_start}
${members}
${namespace_end}
"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 1144111 // sampler_meta
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 181041 "specie_count"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual includes
#include <iomanip>
#include <fstream>
#include <boost/filesystem.hpp>
#include <boost/io/ios_state.hpp>
#include \"particle/ensemble.hpp\"
// --
${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(observer::specie_count, \"observer::specie_count\");"
      python_src "${comment}
${definition}"
      associated_classes
	class_ref 167601 // specie_count
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 377904 "trial_acceptance_sampler"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual includes
#include \"core/strngs.hpp\"
//#include <iomanip>
//#include <fstream>
//#include <boost/filesystem.hpp>
//#include <boost/io/ios_state.hpp>
//#include \"particle/ensemble.hpp\"
// --
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 380208 // trial_acceptance_sampler
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 769583 "libionch_observer"
      stereotype "library"
      associated_artifacts
	artifact_ref 181041 // specie_count
	artifact_ref 135345 // metropolis_sampler
	artifact_ref 351792 // report_manager
	artifact_ref 200881 // rdf_sampler
	artifact_ref 789807 // sampler_meta
	artifact_ref 631215 // base_sampler
	artifact_ref 377904 // trial_acceptance_sampler
	artifact_ref 275248 // density_zaxis
      end
    end

    artifact 651951 "distribution"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual incls
#include <algorithm> // for std::fill
#include <fstream>   // for std::ofstream

${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(observer::distribution, \"observer::distribution\");
"
      associated_classes
	class_ref 135215 // distribution
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 769711 "energy_distribution"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
// manual incls
#include <algorithm> // for std::fill
#include <fstream>   // for std::ofstream

${namespace_start}
${members}
${namespace_end}

#include <boost/serialization/export.hpp>
BOOST_CLASS_EXPORT_GUID(observer::energy_distribution, \"observer::energy_distribution\");
"
      associated_classes
	class_ref 1129775 // energy_distribution
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end
  end

  classview 475311 "loop samplers"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 918959 "base_loop_observer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      operation 1674031 "operator()"
	public explicit_return_type "void"
	nparams 1
	  param in name "a_form" explicit_type ""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end
    end
  end

  package_ref 295471 // Sample collection

  classview 461999 "data accumulator"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 874543 "accu"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment "* Results of the MC simulation.

Set of results accumulated during the MC simulation."
      extra_member 389167 "friend"
	
	cpp "
    friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      class 874799 "anonymous1"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum 
 {
${items}
};
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1104047 "Move"
	  public explicit_type "anonymous1"
	  init_value " 0
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1104175 "Jump"
	  public explicit_type "anonymous1"
	  init_value " 1
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1104303 "JumpIn"
	  public explicit_type "anonymous1"
	  init_value " 2
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1104431 "JumpOut"
	  public explicit_type "anonymous1"
	  init_value " 3
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1104559 "Create"
	  public explicit_type "anonymous1"
	  init_value " 0
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1104687 "Destroy"
	  public explicit_type "anonymous1"
	  init_value " 1
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1104815 "Attempt"
	  public explicit_type "anonymous1"
	  init_value " 0
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1104943 "Succeed"
	  public explicit_type "anonymous1"
	  init_value " 1
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end
      end

      operation 1555247 "serialize"
	stereotype "template"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}template<class Archive>
${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      class 874927 "distribution_type"
	visibility package stereotype "struct"
	nformals 1
	formal name "Value" type "class" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}struct ${name}${inherit} 
{
${members}
};
${inlines}
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	class 875055 "value_type"
	  visibility package stereotype "typedef" explicit_base_type "Value"
	  cpp_decl "${comment}typedef ${type} ${name};
"
	  java_decl ""
	  php_decl ""
	  python_decl "class ${name}${inherit}:
${docstring}${members}
"
	  idl_decl ""
	  explicit_switch_type ""
	  
	end

	classrelation 945327 // data (<directional composition>)
	  relation 916015 *-->
	    a role_name "data" multiplicity "[SpecieSize][RegionSize]" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	      python "${comment}${self}${name} = ${type}()
"
	      classrelation_ref 945327 // data (<directional composition>)
	    b parent class_ref 875055 // value_type
	end

	operation 1555375 "serialize"
	  stereotype "template"
	  preserve_cpp_body_indent public explicit_return_type "void"
	  nparams 2
	    param inout name "ar" explicit_type "Archive"
	    param in name "version" explicit_type "unsigned int"
	  cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}template<class Archive>
${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	  
	end

	operation 1555503 "operator ()"
	  cpp_inline public explicit_return_type "value_type"
	  nparams 2
	    param in name "spc" explicit_type "uint16_type"
	    param in name "rgn" explicit_type "uint16_type"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} { return data[spc][rgn]; };
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	  
	end

	operation 1555631 "operator ()"
	  const cpp_inline public explicit_return_type "value_type"
	  nparams 2
	    param in name "spc" explicit_type "uint16_type"
	    param in name "rgn" explicit_type "uint16_type"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} { return data[spc][rgn]; };
"
	  
	  
	  python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	  
	end
      end

      attribute 1105071 "ah"
	private explicit_type " double "
	stereotype "std::valarray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "* Sum of \"h\" for each accum [ionch/accu/ah]
     
[PatchSize];"
      end

      attribute 1105199 "gz"
	private explicit_type " uint64_type "
	multiplicity "[SpecieSize]"
	stereotype "std::valarray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "* histogram of particles and distance across zzreg regions 
 [SpecieSize][AccumulatorSize1];"
      end

      attribute 1105327 "calgin"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "* Indicate if we should calculate gin or not

     (Note as gin_geometry is separate object. This variable
     can be replaced with gin_obj_ptr != 0)
     "
      end

      attribute 1105455 "gin"
	private explicit_type " uint32_type "
	multiplicity "[SpecieSize]"
	stereotype "std::valarray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "* Count of particles by distance into zzinlft region
     and radial. gin[last] is similar but is sum charges.
     
 [SpecieSize][AccumulatorSize2][AccumulatorSize2];"
      end

      attribute 1105583 "gin_charge"
	private explicit_type " double "
	stereotype "std::valarray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " [AccumulatorSize2][AccumulatorSize2];"
      end

      attribute 1105711 "calrdf"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Data for radial distribution function.
* Should we calculate rdf? "
      end

      attribute 1105839 "drdf"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
      end

      class 875567 "anonymous2"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum 
 {
${items}
};
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1105967 "Center"
	  public explicit_type "anonymous2"
	  init_value " 0      // Anaca/asuba indices
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1106095 "Filter"
	  public explicit_type "anonymous2"
	  init_value " 1  //
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1106223 "Channel"
	  public explicit_type "anonymous2"
	  init_value " 2
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1106351 "Bulk"
	  public explicit_type "anonymous2"
	  init_value " 3
        "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1106479 "ASize"
	  public explicit_type "anonymous2"
	  init_value " 4   //  Anaca/asuba size
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end
      end

      attribute 1106607 "anaca"
	private explicit_type " distribution_type< double > "
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " First index is specie
 Second index is region
 Last index is counter
 [SpecieSize][ASize][KSubMax];"
      end

      attribute 1106735 "asuba"
	private explicit_type " distribution_type< double > "
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " [SpecieSize][ASize][KSubMax];"
      end

      attribute 1106863 "zocc"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment "* Centre occupancy ?? "
      end

      classrelation 946863 // parent_ (<unidirectional association>)
	relation 917551 --->
	  a role_name "parent_" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    python "${comment}${self}${name} = ${value}
"
	    classrelation_ref 946863 // parent_ (<unidirectional association>)
	  b parent class_ref 875695 // evaluator
      end

      operation 1555759 "accu"
	private explicit_return_type ""
	nparams 1
	  param in name "" explicit_type "accu"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " no copy or assign"
      end

      operation 1555887 "operator ="
	private explicit_return_type "accu"
	nparams 1
	  param in name "" explicit_type "accu"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " no copy or assign"
      end

      operation 1556015 "accu"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "a_parent" explicit_type "evaluator"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}${)}
    : an (uint64_type (0U), size_t (SpecieSize))
    , ah ()
    , anin ()
    , amove (uint64_type (0U), size_t (SpecieSize * 4 * 2))
    , acreat (uint64_type (0U), size_t (RegionSize * SaltSize * 2 * 2))
    , aocc ()
    , athist (0U)
    , ataccu (0U)
    , gz ()
    , calgin (false)
    , gin ()
    , gin_charge (0., size_t (AccumulatorSize2 * AccumulatorSize2))
    , calrdf (false)
    , ardf ()
    , rdf ()
    , drdf (constants::rdf_cutoff / AccumulatorSize2)
    , nrdf (0)
    , anaca ()
    , asuba ()
    , zocc (2.5)
    , parent_ (a_parent)
    , gzgeom_ (new gz_geometry (a_parent.get_environment(), a_parent.get_specie ()))
    , gingeom_ ()
${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " CTOR
<       zocc=2.5 >"
      end

      operation 1556143 "~accu"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 1556271 "accum"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "bufer_1" explicit_type "guard_letter"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// _________ 
//<       subroutine accum >

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "/ Sample system"
      end

      operation 1556399 "calc_gin"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return calgin;
    };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 1556527 "do_readin"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "scnr" explicit_type "reader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " readin in parameters for sampler"
      end

      operation 1556655 "do_readin"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// accum_ 

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Finalise sampler part of readin"
      end

      operation 1556783 "do_wrcf"
	const public explicit_return_type "void"
	nparams 2
	  param inout name "a_os" explicit_type "ostream"
	  param in name "a_spec" explicit_type "uint8_type"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Write data to disk. (called from ion_specie.wrcf)"
      end

      operation 1556911 "grow"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "a_rgn" explicit_type "uint8_type"
	  param in name "a_slt" explicit_type "uint8_type"
	  param in name "a_movetype" explicit_type "uint8_type"
	  param in name "succeed_or_attempt" explicit_type "uint8_type"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        GRS400_REQUIRE (a_rgn < RegionSize, \"Region index out of range\");
        GRS400_REQUIRE (a_slt < SaltSize, \"Salt index out of range\");
        GRS400_REQUIRE (a_movetype <= Destroy, \"Move type out of range\");
        GRS400_REQUIRE (succeed_or_attempt < 2, \"Attempt or succeed not 0 or 1\");
        ++acreat[acreat_(a_rgn,a_slt,a_movetype,succeed_or_attempt)];
    };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "/ Get notice about attempts to change the number of particles"
      end

      operation 1557039 "hist"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// _________ 
//<       subroutine hist  >

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "/ Gather histogram data"
      end

      operation 1557167 "move"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "a_ispec" explicit_type "uint8_type"
	  param in name "a_movetype" explicit_type "uint8_type"
	  param in name "succeed_or_attempt" explicit_type "uint8_type"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        GRS400_REQUIRE (a_ispec < SpecieSize, \"Specie index out of range\");
        GRS400_REQUIRE (a_movetype <= JumpOut, \"Move type out of range\");
        GRS400_REQUIRE (succeed_or_attempt < 2, \"Attempt or succeed not 0 or 1\");
        ++amove[amove_(a_ispec,a_movetype,succeed_or_attempt)];
    };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "/ Get notice about attempts to move a particle"
      end

      operation 1557295 "reset"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// hist_ 
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
//<       subroutine zero >

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "/ Reset the data collection."
      end

      operation 1557423 "saves"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "a_os" explicit_type "ostream"
	  param in name "istep" explicit_type "uint32_type"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "/ Digest and write out data"
      end
    end

    class 873263 "Accum"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      operation 1553967 "rdf_index"
	const private explicit_return_type "size_t"
	nparams 3
	  param in name "ispec" explicit_type "size_t"
	  param in name "jspec" explicit_type "size_t"
	  param in name "ireg" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      classrelation 943791 // accum (<directional composition>)
	relation 914479 *-->
	  a role_name "accum" class_relation public
	    comment " exemplar"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    python "${comment}${self}${name} = ${type}()
"
	    classrelation_ref 943791 // accum (<directional composition>)
	  b parent class_ref 873263 // Accum
      end

      attribute 1097519 "nrgmx"
	class_attribute const_attribute public explicit_type "size_t"
	init_value "=  2048"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " maximum number of histogram bins in r direction"
      end

      attribute 1097647 "noccmx"
	class_attribute const_attribute public explicit_type "size_t"
	init_value "=  4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " maximum number of particles in filter region we count for
 generating the co-occupancy matrix 'aocc'"
      end

      attribute 1097775 "ah"
	private explicit_type " double "
	stereotype "ublas::vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Sum of h vector from patch class (average: ah/ataccu) {"
      end

      attribute 1097903 "aocc"
	private explicit_type "size_t"
	multiplicity "[3][noccmx+1][noccmx+1][noccmx+1][noccmx+1]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " co-occupancy matrix - record what sets of particles
 are in the filter region at the same time"
      end

      attribute 1098031 "anin"
	private explicit_type "hist2array"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Histogram of particles in each region

 (merged 'an' into anin as anin(ibulk,*)"
      end

      attribute 1098159 "abulk"
	private explicit_type " double "
	stereotype "ublas::vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Sum of per-specie particle number in bulk region (average: abulk/athist)"
      end

      attribute 1098287 "cbulk"
	private explicit_type " double "
	stereotype "ublas::vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Current per-specie concentration in bulk"
      end

      attribute 1098415 "acharge"
	private explicit_type "runstat"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Sum of charges (average: acharge/ataccu)"
      end

      attribute 1098543 "athist"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Count of calls to 'hist' routine; used to determine average
 of statistics collected in 'hist' routine"
      end

      attribute 1098671 "ataccu"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Count of calls to 'accmlt' routine; used to determine
 average of statistics collected in 'accmlt' routine"
      end

      attribute 1098799 "drg"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Width of bins (both axial and radial) in 2D 'gin' distribution
 and 3D 'gxyz' and 'grtz' distributions."
      end

      attribute 1098927 "zinlft"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The axial outer-most point of the 2D 'gin' distribution"
      end

      attribute 1099055 "rinup"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The radial outer-most point of the 2D 'gin distribution"
      end

      attribute 1099183 "drdf"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Width of histogram bins in the inter-particle radial distribution"
      end

      attribute 1099311 "zocc"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Width to #include \"for the inner-most occupancy calculations (defaults to zlimit).hpp\"
=0.D0"
      end

      attribute 1099439 "ginvol"
	private explicit_type " double "
	stereotype "ublas::vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " volumes for the 2D 'gin' histogram bins (indep} //ent of z and specie)"
      end

      attribute 1099567 "gin"
	private explicit_type "hist3array"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The 2D 'gin' distribution"
      end

      attribute 1099695 "grtz_zero"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Index of the particle to #include \"as the theta zero.hpp\""
      end

      attribute 1099823 "d3_width"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " Width of bins (both axial and radial) in 3D 'gxyz' and 'grtz' distributions."
      end

      attribute 1099951 "d3_vol"
	private explicit_type " double "
	stereotype "ublas::vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " volumes for the 3D 'grtz' histogram bins (indep} //ent of z and specie)"
      end

      attribute 1100079 "rdfhist"
	private explicit_type "hist1array"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The counts (numerator) for the inter-particle radial distribution
 INDEX (ireg, jspec, ispec)
 type (hist1array), private, allocatable, dimension (:,:,:) :: "
      end

      attribute 1100207 "gzhist"
	private explicit_type "hist2array"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The z-axial 'gz' distribution data"
      end

      attribute 1100335 "nrg"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The number of in-#include \"bins in the 'gz' distribution.hpp\""
      end

      attribute 1100463 "nrgr"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The number of radial bins in 2D 'gin' distribution"
      end

      attribute 1100591 "nrgz"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The number of axial bins in 2D 'gin' distribution"
      end

      attribute 1100719 "nrdf"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The number of active bins in the inter-particle radial distribution"
      end

      attribute 1100847 "ksub"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " The number of times we have saved a digest (ie called 'saves')
 =0;"
      end

      attribute 1100975 "isave"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " [INPUT] How often the statistic data is saved."
      end

      attribute 1101103 "calgin"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " [INPUT] calgin: compute 2D (z,r) profiles
 =.false."
      end

      attribute 1101231 "calrdf"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " [INPUT] calrdf: compute inter-particle radial distribution
 =.false."
      end

      attribute 1101359 "calacc"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " [INPUT] calacc: show move acceptance ratios
 =.false."
      end

      attribute 1101487 "calmob"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " [INPUT] calmob: calculate information about 'mobile' ions
 =.false."
      end

      attribute 1101615 "ninj"
	private explicit_type " double "
	stereotype "ublas::matrix"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl "${comment}${self}${name} = ${value}
"
	idl_decl ""
	comment " fluctuation variable sum(N_i * N_j) used in iterat
 [Constants::nspcmx][Constants::nspcmx];"
      end

      class 873391 "chem_pot_method"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name}
 {
${items}
};
"
	java_decl ""
	php_decl ""
	python_decl "class ${name}${inherit}:
${docstring}${members}
"
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1101743 "no_update"
	  public type class_ref 873391 // chem_pot_method
	  init_value "0
      "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1101871 "malas1"
	  public type class_ref 873391 // chem_pot_method
	  init_value "1
      "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1101999 "malas2"
	  public type class_ref 873391 // chem_pot_method
	  init_value "2
      "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end

	attribute 1102127 "accept"
	  public type class_ref 873391 // chem_pot_method
	  init_value "3
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl "${comment}${self}${name} = ${value}
"
	  idl_decl ""
	end
      end

      operation 1554095 "Accum"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : amobdl(Constants::nspcmx)
    , amobvr(Constants::nspcmx)
    , amobdx(Constants::nspcmx)
    , amobdy(Constants::nspcmx)
    , amobdz(Constants::nspcmx)
    , ah()
    , aocc()
    , anin()
    , abulk(Constants::nspcmx)
    , cbulk(Constants::nspcmx)
    , acharge()
    , athist(0)
    , ataccu(0)
    , drg(0.1), zinlft(0.0), rinup(0.0), drdf(0.0), zocc(0.0)
    , ginvol()
    , gin()
    , gxyz(), grtz()
    , grtz_zero(0)
    , d3_width(0.1), d3_rmax(0.0), d3_zmax(0.0)
    , d3_zgrid_size(0), d3_rgrid_size(0)
    , d3_vol()
    , rdfhist(NULL)
    , gzhist()
    , nrg(0), nrgr(0), nrgz(0), nrdf(0)
    , ksub(0), isave(0)
    , calgin(false)
    , calrdf(false)
    , calacc(false)
    , calmob(false)
    , ninj(Constants::nspcmx,Constants::nspcmx)
  {
    for (std::size_t idx = 0; idx //= Constants::nspcmx; ++idx)
      {
	for (std::size_t jdx = 0; jdx //= Constants::nspcmx; ++jdx)
	  {
	    ninj(idx, jdx) = 0;
	  }
      }
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 1554223 "Accum"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 873263 // Accum
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Undefined"
      end

      operation 1554351 "operator ="
	private return_type class_ref 873263 // Accum
	nparams 1
	  param in name "" type class_ref 873263 // Accum
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment " Undefined"
      end

      operation 1554479 "~Accum"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
    if (rdfhist //= NULL) delete [] rdfhist;
  };
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
      end

      operation 1554607 "accmlt"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    // LOCALS
    std::size_t ireg,ispec  // loop counters for regions,species,patches
      ,i1,i2,i3,i4; // histogram indices

    ++this->ataccu;
    this->acharge.rs_push(Conf::conf.charge);

    // for (h3c4v2:  ; XXX != ; ++XXX) {
    for (ireg = Constants::izlim; ireg //= Constants::ichan + 1; ++ireg)
      {
	i1 = std::min(Conf::conf.nin(ireg,Spec::spec.idxcl()),noccmx);
	i2 = std::min(Conf::conf.nin(ireg,Spec::spec.idxcl()+1),noccmx);
	i3 = std::min(Conf::conf.nin(ireg,Spec::spec.idxcl()+2),noccmx);
	i4 = std::min(Conf::conf.nin(ireg,Spec::spec.idxcl()+3),noccmx);
	++this->aocc[ireg][i1][i2][i3][i4];
      } //for (h3c4v2 ; XXX != ; ++XXX) {

    // for (l0z8a5: do  ; XXX != ; ++XXX) {
    for (ispec = 0; ispec //= Spec::spec.nspec(); ++ispec);
    {
      this->anin.hist_push (Constants::izlim, ispec, Conf::conf.nin(Constants::izlim,ispec));
      this->anin.hist_push (Constants::ifilt, ispec, Conf::conf.nin(Constants::ifilt,ispec));
      this->anin.hist_push (Constants::ichan, ispec, Conf::conf.nin(Constants::ichan,ispec));
      this->anin.hist_push (Constants::ibulk, ispec, Conf::conf.ni(ispec));
    } //for (l0z8a5 ; XXX != ; ++XXX) {

    if (not Patch::patch.homog)
      {
	for (std::size_t ipch = 0; ipch //= Patch::patch.npatch(); ++ipch)
	  {
	    this->ah[ipch] += Conf::conf.h(ipch);
	  }
      }
    this->anin.hist_};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "public :: accmlt, acceql, accblk, iterat, ecaccu, gz_av, hist, rdaccu, rfaccu, saves, zeroac
 -------------------------------------------------------------
 Accumulate simple collective statistics

  This routine collects filter occupancy data from 'nin' arrays.
  It also saves the 'h' vector and charge."
      end
    end
  end

  deploymentview 321071 "aaa"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 580399 "Accum"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 873263 // Accum
      end
    end
  end
end
