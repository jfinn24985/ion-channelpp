class alternater_sampler
!!!212528.cpp!!!	description(inout out : ostream) : void
out << "SAMPLER [" << this->get_label() << "]\n";
out << " Collect data about alternater choice add/remove probabilities\n";
out << " (Is automatically added when needed and can not be accessed via\n";
out << " the input file.)\n";
!!!217392.cpp!!!	do_write_document(inout wr : input_document, in ix : size_t) : void
// remove entry.
wr.remove_section(ix);
!!!702640.cpp!!!	get_value() : boost::any
boost::any result = this->probabilities_;
return result;
!!!223920.cpp!!!	on_sample(in sim : simulator) : void
if (this->probabilities_.empty())
{
  this->probabilities_.resize(sim.specie_count());
  for (std::size_t idx = 0; idx != this->probabilities_.size(); ++idx)
  {
    this->probabilities_[idx].specie_key = idx;
  }
}
// Get acceptance data from "trial-success" sampler
if (not sim.get_reporter().has_tracked(observable::trial_acceptance_sampler::type_label_()))
{
  std::vector< observable::trial_acceptance_sampler::acceptance_datum > result
     = boost::any_cast< std::vector< observable::trial_acceptance_sampler::acceptance_datum > >(sim.get_reporter().get_tracked(observable::trial_acceptance_sampler::type_label_())->get_value());
  for(auto const& item : result)
  {
    if ((item.label.find("Add") != std::string::npos) or (item.label.find("add") != std::string::npos))
    {
      this->probabilities_[item.specie_key].add.append(item.probability());
    }
    else if ((item.label.find("Del") != std::string::npos) or (item.label.find("del") != std::string::npos))
    {
      this->probabilities_[item.specie_key].remove.append(item.probability());
    }
  }
}


