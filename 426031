format 75
"trial_test" // trial::trial_test
  revision 154
  modified_by 48 "finnerty"
  owner 48 "finnerty"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  stereotype "test suite"
  cpp_h_dir "trial/trial_test"
  cpp_src_dir "trial/trial_test"
  classview 504751 "trial"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 351535 // trial
    classdiagram 265776 "trial test coverage overview"
      draw_all_relations default hide_attributes yes hide_operations yes hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 236849 "test_choice"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Provides no-op implementation of \"generate\" to give a concrete 
 class for testing abstract base class base_choice.
 "
      classrelation 356017 // <generalisation>
	relation 355761 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 356017 // <generalisation>
	  b parent class_ref 1026095 // base_choice
      end

      classrelation 714800 // <dependency>
	relation 713904 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 714800 // <dependency>
	  b parent class_ref 912431 // access
      end

      operation 1213488 "test_choice"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} = default;"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " For serialization"
      end

      operation 1192496 "test_choice"
	public explicit_return_type ""
	nparams 1
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}
: trial::base_choice( particle::change_hash( ${p0}, 0, 0, 0 ) )
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1192880 "test_choice"
	public explicit_return_type ""
	nparams 1
	  param in name "key" type class_ref 400048 // change_hash
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}
: trial::base_choice( ${p0} )
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      extra_member 489904 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 1213616 "serialize"
	stereotype "template"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "version" explicit_type "unsigned int"
	cpp_decl "    ${comment}template<class Archive>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    ar & boost::serialization::base_object< base_choice >(*this);
  };
"
	
	
	
	
      end

      operation 1185456 "generate"
	cpp_virtual public return_type class_ref 986543 // change_set
	nparams 3
	  param in name "particles" type class_ref 446128 // particle_manager
	  param in name "regions" type class_ref 452656 // geometry_manager
	  param inout name "rgnr" type class_ref 463407 // random_distribution
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override 
{
  return std::unique_ptr< ${type} >{};
}
"
	
	
	
	
	comment "Generate a new change set based on this choice type."
      end

      operation 1192368 "permitted"
	class_operation public explicit_return_type "bool"
	nparams 1
	  param in name "spec" type class_ref 134577 // specie
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  return true;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Can this specie be used to create a trial of the current type?"
      end

      operation 1192240 "make_choice"
	class_operation public return_type class_ref 1026095 // base_choice
	nparams 2
	  param in name "ispec" explicit_type "size_t"
	  param in name "params" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} ${p0}${v0}, const std::map< ${t1}, ${t1} >& ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  return std::unique_ptr< ${type} >( new ${class}( ${p0} ) );
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Generate a choice object."
      end
    end

    class 230321 "trial_test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 348849 // <dependency>
	relation 348593 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 348849 // <dependency>
	  b parent class_ref 986415 // change_atom
      end

      classrelation 355505 // <dependency>
	relation 355249 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 355505 // <dependency>
	  b parent class_ref 986543 // change_set
      end

      classrelation 506672 // <dependency>
	relation 505776 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 506672 // <dependency>
	  b parent class_ref 400048 // change_hash
      end

      classrelation 728240 // <dependency>
	relation 727344 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 728240 // <dependency>
	  b parent class_ref 393392 // choice_manager
      end

      classrelation 728112 // <dependency>
	relation 727216 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 728112 // <dependency>
	  b parent class_ref 1143471 // choice_meta
      end

      classrelation 721584 // <dependency>
	relation 720688 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 721584 // <dependency>
	  b parent class_ref 170288 // chooser
      end

      classrelation 289328 // <dependency>
	relation 289072 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 289328 // <dependency>
	  b parent class_ref 1026223 // move_choice
      end

      classrelation 486832 // <dependency>
	relation 485936 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 486832 // <dependency>
	  b parent class_ref 236849 // test_choice
      end

      operation 1256496 "mockup_particle_manager"
	class_operation public return_type class_ref 446128 // particle_manager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Mockup set of realistic species.

  specie_count = 5
  solute = \"Na\" (x2 particles) and \"Cl\" (x1 particle)
  mobile = \"CA\" (x1 particle)
  flexible = \"CO\" (x1 particle)
  channel only = \"OX\" (x1 particle)
  "
      end

      operation 1263024 "mockup_geometry_manager"
	class_operation public return_type class_ref 452656 // geometry_manager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}boost::shared_ptr< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}boost::shared_ptr< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Create geometry manager with PBC cube \"cell\" and 
 open cube \"bulk\" regions."
      end

      operation 2734384 "mockup_params"
	class_operation public return_type class_ref 844336 // input_parameter_memo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::vector< ${type} > ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}std::vector< ${type} > ${class}::${name}${(}${)}${const}${volatile}${throw}
{
  std::vector< ${type} > params;
  ${type} tmp;
  tmp.set_name( \"end\" );
  params.push_back( std::move( tmp ) );
  return std::move( params );
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1185584 "test_base_choice_methods"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "choice" type class_ref 1026095 // base_choice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} > ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}boost::shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Tests key, probabilty (get/set) and serialization. 

 * Does not test trial generation.
 "
      end

      operation 1220272 "test_choice_generate"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "params" type class_ref 844336 // input_parameter_memo
	cpp_decl "    ${comment}template< class Choice > ${friend}${static}${inline}${virtual}${type} ${name}${(}const std::vector< ${t0} > & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}template< class Choice > ${inline}${type} ${class}::${name}${(}const std::vector< ${t0} > & ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Run choice.generate on a mockup ensemble. Uses
 Choice::permitted( spc ) and Choice::make_choice( idx, *params* ) 
 to create choice object. Params arg to make_choice is the
 params arg passed to this function.

  ens.size = 6
  specie_count = 5
  solute = \"Na\" (x2 particles) and \"Cl\" (x1 particle)
  mobile = \"CA\" (x1 particle)
  flexible = \"CO\" (x1 particle)
  channel only = \"OX\" (x1 particle)
  system region = \"cell\" (PBC cube)
  subregion = \"bulk\" (open cube)
  all particles inside \"bulk\" (and \"cell\")
  "
      end

      operation 1233328 "test_make_chooser_methods"
	class_operation public explicit_return_type "void"
	nparams 6
	  param in name "params" type class_ref 844336 // input_parameter_memo
	  param in name "type" explicit_type "string"
	  param in name "specielist" type class_ref 844336 // input_parameter_memo
	  param in name "rate" explicit_type "double"
	  param in name "count" explicit_type "size_t"
	  param in name "exp_rate" explicit_type "double"
	cpp_decl "    ${comment}template< class Chooser > ${friend}${static}${inline}${virtual}${type} ${name}${(}const std::vector< ${t0} > & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}template< class Chooser > ${inline}${type} ${class}::${name}${(}const std::vector< ${t0} > & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Run \"Chooser\" on a mockup ensemble. Uses
 base_chooser.generate_choices( *params*, *type*, *specielist*, *rate* ) 
 to create choice object. \"*args*\" to are directly the args passed to 
 this function.

 \\param count : expected number of choices
 \\param exp_rate : expected rate of each choice

  ens.size = 6
  specie_count = 5
  solute = \"Na\" (x2 particles) and \"Cl\" (x1 particle)
  mobile = \"CA\" (x1 particle)
  flexible = \"CO\" (x1 particle)
  channel only = \"OX\" (x1 particle)
  system region = \"cell\" (PBC cube)
  subregion = \"bulk\" (open cube)
  all particles inside \"bulk\" (and \"cell\")
  "
      end

      operation 1185712 "base_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Use test_choice class to test base_choice operations."
      end

      operation 1278640 "choice_manager_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 1207088 "add_specie_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1206704 "jump_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1206832 "jump_in_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1206960 "jump_out_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1213744 "jump_around_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 441776 "move_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1207216 "remove_specie_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1240752 "choice_meta_lifetime_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 791600 "choice_meta_move_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1240880 "choice_meta_jump_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1241008 "choice_meta_jump_around_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1241136 "choice_meta_jump_in_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1241264 "choice_meta_jump_out_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1241392 "choice_meta_add_remove_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1241520 "trial_input_no_type_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1248048 "trial_input_type_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1248176 "trial_input_type_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1248304 "trial_input_duplicate_type_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1248816 "trial_input_no_rate_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1248688 "trial_input_rate_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1248560 "trial_input_rate_negative_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1249072 "trial_input_rate_zero_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1248944 "trial_input_rate_nonnumber_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1248432 "trial_input_duplicate_rate_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1249328 "trial_input_specielist_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1249200 "trial_input_duplicate_specielist_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1256368 "trial_input_move_delta_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1256240 "trial_input_move_delta_negative_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1256112 "trial_input_move_delta_zero_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1255984 "trial_input_move_delta_nonnumber_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1255856 "trial_input_move_duplicate_delta_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1263152 "trial_input_move_unknown_parameter_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1270576 "trial_input_jump_unknown_parameter_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1271728 "trial_input_jump_in_no_region_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1270448 "trial_input_jump_in_region_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1270064 "trial_input_jump_in_region_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1269936 "trial_input_jump_in_duplicate_region_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1269808 "trial_input_jump_in_unknown_parameter_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1271856 "trial_input_jump_out_no_region_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1271088 "trial_input_jump_out_region_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1270960 "trial_input_jump_out_region_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1270832 "trial_input_jump_out_duplicate_region_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1270704 "trial_input_jump_out_unknown_parameter_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1271984 "trial_input_jump_around_no_region_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1271600 "trial_input_jump_around_region_no_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1271472 "trial_input_jump_around_region_bad_value_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1271344 "trial_input_jump_around_duplicate_region_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      operation 1271216 "trial_input_jump_around_unknown_parameter_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end

      extra_member 496432 "TODO"
	
	cpp "" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 1278512 "trial_input_add_specie_unknown_parameter_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Test combination of choice_meta and move_chocie."
      end
    end
  end

  deploymentview 351535 "trial"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 390960 "test_choice"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}

#include <boost/serialization/export.hpp>

BOOST_CLASS_EXPORT_KEY(test_choice);
#endif
"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 236849 // test_choice
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 240305 "trial_test"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

#define BOOST_TEST_MODULE trial_test
#include <boost/test/unit_test.hpp>

${includes}
// Manuals
#include \"core/input_delegater.hpp\"
#include \"core/input_document.hpp\"
#include \"core/input_error.hpp\"
#include \"core/input_help.hpp\"
#include \"core/input_preprocess.hpp\"
#include \"core/strngs.hpp\"
#include \"geometry/cube_region.hpp\"
#include \"geometry/geometry_manager.hpp\"
#include \"geometry/periodic_cube_region.hpp\"
#include \"particle/ensemble.hpp\"
#include \"particle/particle_manager.hpp\"
#include \"particle/specie.hpp\"
#include \"utility/fuzzy_equals.hpp\"
#include \"utility/random.hpp\"
//#include \"utility/machine.hpp\"
//#include \"utility/mathutil.hpp\"
//#include \"utility/utility.hpp\"

#include<boost/random.hpp>
// - 
${namespace_start}
${members}
${namespace_end}


#include <boost/serialization/export.hpp>

BOOST_CLASS_EXPORT_IMPLEMENT(test_choice);"
      associated_classes
	class_ref 230321 // trial_test
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 240433 "trial_exec"
      stereotype "executable"
      associated_artifacts
	artifact_ref 185007 // serialization
	artifact_ref 194353 // unit_test_framework
	artifact_ref 207919 // libionch_utility
	artifact_ref 215855 // filesystem
	artifact_ref 215983 // program_options
	artifact_ref 216239 // date_time
	artifact_ref 240305 // trial_test
	artifact_ref 281519 // system
	artifact_ref 334257 // uuid
	artifact_ref 449840 // libionch_geometry
	artifact_ref 609327 // libionch_core
	artifact_ref 617391 // libionch_particle
	artifact_ref 651439 // random
	artifact_ref 694959 // libionch_trial
      end
      ncouples 2
      key "butter flags" value "-DBOOST_TEST_DYN_LINK"
      key "butter install" value "NONE"
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end
  end
end
