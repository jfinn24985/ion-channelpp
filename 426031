format 75
"trial_test" // trial::trial_test
  revision 134
  modified_by 48 "finnerty"
  owner 48 "finnerty"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  stereotype "test suite"
  cpp_h_dir "trial/trial_test"
  cpp_src_dir "trial/trial_test"
  classview 504751 "trial"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 351535 // trial
    classdiagram 265776 "trial test coverage overview"
      draw_all_relations default hide_attributes yes hide_operations yes hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 236849 "test_choice"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      comment " Provides no-op implementation of \"generate\" to give a concrete 
 class for testing abstract base class base_choice.
 "
      classrelation 356017 // <generalisation>
	relation 355761 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 356017 // <generalisation>
	  b parent class_ref 1026095 // base_choice
      end

      operation 1192496 "test_choice"
	public explicit_return_type ""
	nparams 1
	  param in name "ispec" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}
: trial::base_choice( trial::choice_hash( ${p0}, 0, 0, 0 ) )
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1192880 "test_choice"
	public explicit_return_type ""
	nparams 1
	  param in name "key" type class_ref 400048 // choice_hash
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}
: trial::base_choice( ${p0} )
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 1185456 "generate"
	cpp_virtual public return_type class_ref 986543 // change_set
	nparams 3
	  param in name "particles" type class_ref 446128 // particle_manager
	  param in name "regions" type class_ref 452656 // geometry_manager
	  param inout name "rgnr" type class_ref 463407 // random_distribution
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} override 
{
  return std::unique_ptr< ${type} >{};
}
"
	
	
	
	
	comment "Generate a new change set based on this choice type."
      end

      operation 1192368 "permitted"
	class_operation public explicit_return_type "bool"
	nparams 1
	  param in name "spec" type class_ref 134577 // specie
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract}
{
  return true;
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Can this specie be used to create a trial of the current type?"
      end

      operation 1192240 "make_choice"
	class_operation public return_type class_ref 1026095 // base_choice
	nparams 2
	  param in name "ispec" explicit_type "size_t"
	  param in name "params" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}std::unique_ptr< ${type} > ${name}${(}${t0} ${p0}${v0}, const std::map< ${t1}, ${t1} >& ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  return std::unique_ptr< ${type} >( new ${class}( ${p0} ) );
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Generate a choice object."
      end
    end

    class 413232 "test_chooser"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 513712 // <generalisation>
	relation 512816 ---|>
	  a public
	    cpp default "${type}"
	    python "${type}"
	    classrelation_ref 513712 // <generalisation>
	  b parent class_ref 170160 // base_chooser
      end

      operation 791088 "description"
	const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "ostream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Provide a description of the chooser state."
      end

      operation 791216 "generate_choices"
	const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "sim" type class_ref 1129135 // simulator
	  param inout name "choices" type class_ref 1026095 // base_choice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, boost::ptr_vector< ${t1} >& ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment "  Generate and add choices to simulator."
      end

      operation 791344 "test_chooser"
	public explicit_return_type ""
	nparams 1
	  param in name "key" type class_ref 400048 // choice_hash
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}
: trial::base_chooser( ${p0} )
{}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 791472 "~test_chooser"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      extra_member 377136 "friend"
	
	cpp "
  friend class boost::serialization::access;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 791856 "serialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "ar" explicit_type "Archive"
	  param in name "a_ver" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}template< class ${t0} > ${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract}
{
  ar & boost::serialization::base_object< trial::base_chooser >(*this);
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}self${)}:
${docstring}${body}
"
	
	comment "Read/write object to an archive."
      end
    end

    class 230321 "trial_test"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit}
 {
${members}
};
${inlines}
"
      java_decl ""
      php_decl ""
      python_decl "class ${name}${inherit}:
${docstring}${members}
"
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 348849 // <dependency>
	relation 348593 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 348849 // <dependency>
	  b parent class_ref 986415 // change_atom
      end

      classrelation 355505 // <dependency>
	relation 355249 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 355505 // <dependency>
	  b parent class_ref 986543 // change_set
      end

      classrelation 506672 // <dependency>
	relation 505776 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 506672 // <dependency>
	  b parent class_ref 400048 // choice_hash
      end

      classrelation 289328 // <dependency>
	relation 289072 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 289328 // <dependency>
	  b parent class_ref 1026223 // move_choice
      end

      classrelation 486832 // <dependency>
	relation 485936 -_->
	  a default
	    cpp default "#include in source"
	    python "${type}"
	    classrelation_ref 486832 // <dependency>
	  b parent class_ref 236849 // test_choice
      end

      operation 1185584 "test_base_choice_methods"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "choice" type class_ref 1026095 // base_choice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}boost::shared_ptr< ${t0} > ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}boost::shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 783408 "choice_hash_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 1185712 "base_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
	comment " Use test_choice class to test base_choice operations."
      end

      operation 441776 "move_choice_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
      end

      operation 791600 "test_chooser_test"
	public explicit_return_type "void"
	nparams 0
	
	cpp_def "${comment}BOOST_AUTO_TEST_CASE( ${name} )
{
  ${body}
}
"
	
	
	
	
      end

      operation 798384 "test_chooser_operation"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "chsr" type class_ref 170160 // base_chooser
	  param in name "expected_size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}
{
  ${body}
}
"
	
	
	python_def "${@}${static}${abstract}def ${name}${(}${p0}${v0}${)}:
${docstring}${body}
"
	
	comment " Function to test base chooser type functionality.

 chsr : object of type to check
 expected_size : expected number of choice objects to generate
   from simulator fixture class."
      end
    end
  end

  deploymentview 351535 "trial"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 390960 "test_choice"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 236849 // test_choice
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 417072 "test_chooser"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

${includes}
${namespace_start}
${members}
${namespace_end}"
      python_src "${comment}
${import}
${definition}"
      associated_classes
	class_ref 413232 // test_chooser
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 240305 "trial_test"
      stereotype "source"
      cpp_h "#ifndef @{PROJECT}${NAMESPACE}_${NAME}_HPP
#define @{PROJECT}${NAMESPACE}_${NAME}_HPP

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}

#ifndef DEBUG
#define DEBUG 0
#endif

#define BOOST_TEST_MODULE trial_test
#include <boost/test/unit_test.hpp>

${includes}
// Manuals
//#include \"particle/ensemble.hpp\"
//#include <boost/archive/text_oarchive.hpp>
//#include <boost/archive/text_iarchive.hpp>
#include \"utility/fuzzy_equals.hpp\"
//#include \"utility/random.hpp\"
//#include \"utility/machine.hpp\"
//#include \"utility/mathutil.hpp\"
//#include \"utility/utility.hpp\"
//#include<boost/tokenizer.hpp>
// - 
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 230321 // trial_test
      end
      comment "----------------------------------------------------------------------
This source file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
----------------------------------------------------------------------
"
    end

    artifact 240433 "trial_exec"
      stereotype "executable"
      associated_artifacts
	artifact_ref 185007 // serialization
	artifact_ref 194353 // unit_test_framework
	artifact_ref 207919 // libionch_utility
	artifact_ref 215855 // filesystem
	artifact_ref 215983 // program_options
	artifact_ref 216239 // date_time
	artifact_ref 240305 // trial_test
	artifact_ref 281519 // system
	artifact_ref 334257 // uuid
	artifact_ref 449840 // libionch_geometry
	artifact_ref 609327 // libionch_core
	artifact_ref 617391 // libionch_particle
	artifact_ref 651439 // random
	artifact_ref 694959 // libionch_trial
      end
      ncouples 2
      key "butter flags" value "-DBOOST_TEST_DYN_LINK"
      key "butter install" value "NONE"
    end
  end
end
