class digitiser
!!!315569.cpp!!!	digitiser(in aminimum : double, in amaximum : double, in abinwidth : double)
: minimum_(std::min(aminimum,amaximum))
, step_(std::abs(abinwidth))
, width_(std::abs(amaximum - aminimum))
, size_()
{
  UTILITY_REQUIRE(amaximum > aminimum, "Minimum of range must be less than the maximum");
  UTILITY_REQUIRE(abinwidth > 0.0, "Step size must be greater than zero");
  size_ = std::max(1ul, std::size_t(std::ceil(width_/step_)));
  // Check size
  while (width_ <= step_ * size_ - step_)
  {
    // Check if method accidentally gave a slightly
    // higher bin number
    --size_;
    UTILITY_REQUIRE(size_ > 0, "Number of bins must be greater than zero");
  }
  // Adjust width to match step and size.
  width_ = step_ * size_;
}
