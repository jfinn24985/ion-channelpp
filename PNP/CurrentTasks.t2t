+ Current Story: +




In order to simulate an ionic solution as an ionic solution researcher I want to 
be able to do a MC simulation with hard-sphere ions.


This entails:

* Reading ion data including hard-sphere radius.

** Define well-defined property on a particle.


Particle properties fall in two categories:

*** Category A: Necessary simulation parameters (particle number, concentration, excess free-energy etc.)

These are parameters that are used during simulation initialisation.
This includes the ability to resolve values for redundant properties (eg. 
particle number/concentration/simulation volume).

label ("name", value-type "string[2]")
target concentration ("ctarg", value-type "number")
target particle number ("ntarg", value-type "number")
particle definition ("n", value-type "number" plus definitions)

*** Category B: Optional simulation parameters (type.)

These are parameters that may be used during the simulation based on
the set of simulation trials selected.

excess chemical potential (GCMC only; "chex", value-type "number")
category ("type", value-type enum "free","channel-only","mobile","localized",...)

*** Category C: Energy function properties (charge, radius etc.)

Properties used by the potential energy functions.  The properties that need to be defined therefore
depend on the energy functions used.  The potential for user-defined
energy functions requires the ability to handle well-defined but open-ended
properties.

radius (as diameter "d", value-type "number") : Hard-sphere energy function
charge ("z", value-type "number") : Coulomb energy function
mass (value-type "number")
LJ parameters  ("sigma"/"epsilon"/"cutoff", value-type "number")


** Test if required property found.

*** Category B: Chooser objects register property names at program instantiation.

*** Category C: Energy functions register property names at program instantiation.

*** Properties verified (for Category B and C against registry) during input file 
parsing. (necessary and sufficient for Category A)

*** Before simulation commences chooser objects test if Category B
properties are present. (necessary and sufficient for Category B)

*** Before simulation commences energy functions test if Category C
properties are present. (necessary and sufficient for Category B)


** Warn if property defined but not used.

This is not only about a property label, but individual properties
defined on a particle definition. 


*** ALT A: Get energy functions to compile list of what properties were used
on each particle definition.  Check definitions for unused properties.

*** ALT B: Prepare map of properties to particle definitions and get
energy functions to remove or mark as used what properties they used.


* Calculating particle-particle overlap during a MC trial.


** Calculate particle-particle distance

** Test if particle-particle distance is less than sum of the radii
of two particles.

** Reject trial if overlap occurs.


* Rejecting particle-particle overlap in initial configurations.

** Perform particle-particle overlap test on all particle-particle
pairs in the initial configuration.

** Reject configuration if overlap found.











* In order to simulate an ionic solution of a given strength as an ionic solution 
researcher I want to estimate the Free Energy of ions in the Monte Carlo Simulation 
of mixed ionic solutions.

This entails:

* Reading ion data including estimate of Free Energy

* Reading solution data

* Running iterative MC simulation to predict Free Energy